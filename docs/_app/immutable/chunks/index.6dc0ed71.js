import{S as Yp,i as Np,s as Fp,Y as ei,T as l,q as o,U as i,m as s,h as r,r as n,n as t,a0 as lh,p as f,Z as Qi,b as h,E as e,_ as ih,F as gi,$ as Ji,k as p,y as Wn,a as y,H as Oa,l as c,z as Kn,c as v,D as qa,A as Zn,g as Qn,d as Jn,B as tl}from"./index.ebf6ac20.js";import{I as wi}from"./Image.f465375f.js";function ch(Ss){let k,w,Bt,jt,d,Xt,ue,Ue,je,nt,Qt,Ct,Dt,ge,Jt,_t,Rt,H,te,he,C,D,Q,lt,A,q,J,W,tt,it,et,B,rt,pt,K,E,_,X,st,ct,$,V,ee,be,Y,fe,I,P,$t,Ne,z,Vt,ke,j,Yt,Ce,g,T,de,O,Nt,Fe,G,vt,He,R,mt,We,S,xt,Pt,L,re,Qe,St,Je,M,se,tr,Ft,ae,b,Tt,er,Ee,at,Z,ut,At,oe,wt,ye,ot,_e,kt,ve,gt,It,bt,zt,ne,qr,Et,me,N,wr,rr,F,Lt,As,sr,ms,dt,le,la,Br,m,xs,Is,ht,Ke,Us,De,ia,gr,pa,ft,Xr,Ht,$r,ca,ie,fr,ua,Wt,Te,ha,br,Vr,Er,fa,Oe,ka,Kt,ar,da,Yr,ws,Pe,ya,Ze,va,ze,or,ma,Le,_r,rs,pe,Sr,Ar,qe,gs,Be,bs,io,Xe,js,po,Ut,Pr,Yo,zr,No,nr,Ir,Fo,Me,xe,ss,Lr,Ho,as,Cs,lr,Es,Wo,Ot,Ds,Ko,os,Ts,Zo,Nr,Os,Qo,_s,Mt,ns,Ge,qs,xa,Bs,ir,Xs,ls,Zt,Ps,Jo,Mr,tn,pr,Re,wa,cr,$s,zs,en,kr,Gr,rn,$e,Ls,ga,dr,is,ba,Vs,yr,ps,sn,ur,Fr,an,vr,hr,on,ce,cs,Ur,Ve,Ea,Ms,nn,Hr,ln,mr,jr,pn,Se,Ys,_a,us,cn,qt,Ns,un,Wr,Pa,xr,hs,Gs,Gt,Rr,Ba,Fs,co,Ae,fs,Kr,hn,we,Cr,fn,Hs,kn,Dr,dn,Ws,Ks,Zs,yn,za=[{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{viewBox:"0 0 1280 720"},Ss[0]],uo={};for(let Tr=0;Tr<za.length;Tr+=1)uo=ei(uo,za[Tr]);return{c(){k=l("svg"),w=l("defs"),Bt=l("marker"),jt=l("path"),d=l("marker"),Xt=l("path"),ue=l("marker"),Ue=l("path"),je=l("marker"),nt=l("path"),Qt=l("marker"),Ct=l("path"),Dt=l("marker"),ge=l("path"),Jt=l("marker"),_t=l("path"),Rt=l("marker"),H=l("path"),te=l("marker"),he=l("path"),C=l("marker"),D=l("path"),Q=l("marker"),lt=l("path"),A=l("marker"),q=l("path"),J=l("marker"),W=l("path"),tt=l("marker"),it=l("path"),et=l("marker"),B=l("path"),rt=l("marker"),pt=l("path"),K=l("marker"),E=l("path"),_=l("marker"),X=l("path"),st=l("marker"),ct=l("path"),$=l("marker"),V=l("path"),ee=l("marker"),be=l("path"),Y=l("marker"),fe=l("path"),I=l("g"),P=l("rect"),$t=l("rect"),Ne=l("rect"),z=l("rect"),Vt=l("rect"),ke=l("rect"),j=l("rect"),Yt=l("rect"),Ce=l("rect"),g=l("rect"),T=l("rect"),de=l("rect"),O=l("rect"),Nt=l("rect"),Fe=l("rect"),G=l("rect"),vt=l("rect"),He=l("rect"),R=l("rect"),mt=l("rect"),We=l("rect"),S=l("rect"),xt=l("rect"),Pt=l("g"),L=l("path"),re=l("path"),Qe=l("path"),St=l("path"),Je=l("path"),M=l("path"),se=l("path"),tr=l("path"),Ft=l("path"),ae=l("path"),b=l("path"),Tt=l("path"),er=l("path"),Ee=l("use"),at=l("text"),Z=l("tspan"),ut=l("tspan"),At=o("Mesa"),oe=o(":APIs+DRI/Gallium3D driver"),wt=l("tspan"),ye=o("libGL-mesa-swx11 "),ot=l("tspan"),_e=o("(libGL)"),kt=l("tspan"),ve=o("libGL-mesa-glx"),gt=l("tspan"),It=o("libOpenVG-mesa"),bt=l("tspan"),zt=o("libGLES-mesa"),ne=l("tspan"),qr=o("libEGL-mesa"),Et=l("tspan"),me=o("libEGL-mesa-drivers "),N=l("tspan"),wr=o("(Wayland)"),rr=l("tspan"),F=o("libGBM"),Lt=l("tspan"),As=o("libGL-mesa-DRI "),sr=l("tspan"),ms=o("(Modules)"),dt=l("text"),le=l("tspan"),la=o("X-server "),Br=l("tspan"),m=o("("),xs=l("tspan"),Is=o("X.Org)"),ht=l("text"),Ke=l("tspan"),Us=o("X.Org Server display driver"),De=l("tspan"),ia=o("xserver-xorg-video-nouveau"),gr=l("tspan"),pa=o("xserver-xorg-video-nvidia"),ft=l("tspan"),Xr=o("xserver-xorg-video-radeon"),Ht=l("text"),$r=l("tspan"),ca=o("DRM"),ie=l("text"),fr=l("tspan"),ua=o("Linux kernel"),Wt=l("text"),Te=l("tspan"),ha=o("libDRM-intel"),br=l("tspan"),Vr=o("libDRM-radeon"),Er=l("tspan"),fa=o("libDRM-nouveau"),Oe=l("tspan"),ka=o("libDRM-freedreno"),Kt=l("text"),ar=l("tspan"),da=o("hardware specific"),Yr=l("tspan"),ws=o("Userspace interface to"),Pe=l("tspan"),ya=o("hardware specific"),Ze=l("tspan"),va=o("direct rendering manager"),ze=l("text"),or=l("tspan"),ma=o("CPU & registers & L1 & L2 & L3 & L4 & main memory"),Le=l("text"),_r=l("tspan"),rs=o("GPU & registers & L1 & L2 (& graphic memory)"),pe=l("text"),Sr=l("tspan"),Ar=o("Applications"),qe=l("tspan"),gs=o("Toolkits"),Be=l("text"),bs=l("tspan"),io=o("libDRM"),Xe=l("text"),js=l("tspan"),po=o("3D-game engine"),Ut=l("text"),Pr=l("tspan"),Yo=o("DDX-"),zr=l("tspan"),No=o("driver"),nr=l("text"),Ir=l("tspan"),Fo=o("libX / libXCB"),Me=l("text"),xe=l("tspan"),ss=o("Proprietary OpenGL 4.2 driver"),Lr=l("tspan"),Ho=o("libGL-nvidia-glx"),as=l("tspan"),Cs=o("libGL-fglrx-glx"),lr=l("text"),Es=l("tspan"),Wo=o('"libGL"'),Ot=l("text"),Ds=l("tspan"),Ko=o("Rendering APIs: "),os=l("tspan"),Ts=l("tspan"),Zo=o("OpenGL"),Nr=l("tspan"),Os=l("tspan"),Qo=o("OpenGL|ES"),_s=l("tspan"),Mt=l("tspan"),ns=o("OpenVG"),Ge=l("text"),qs=l("tspan"),xa=l("tspan"),Bs=o("X 11R7.8"),ir=l("text"),Xs=l("tspan"),ls=o("blob"),Zt=l("text"),Ps=l("tspan"),Jo=o("Display"),Mr=l("tspan"),tn=o("server"),pr=l("text"),Re=l("tspan"),wa=o("libwayland-client"),cr=l("text"),$s=l("tspan"),zs=l("tspan"),en=o("Wayland 1.5"),kr=l("text"),Gr=l("tspan"),rn=o("framebuffer"),$e=l("text"),Ls=l("tspan"),ga=o("DIX driver"),dr=l("text"),is=l("tspan"),ba=o("hardware-specific"),Vs=l("path"),yr=l("text"),ps=l("tspan"),sn=o("by Shmuel Csaba Otto Traian; CC-BY-SA 4.0 intl; created 2013-08-24; last updated 2014-03-25"),ur=l("text"),Fr=l("tspan"),an=o("KMS"),vr=l("text"),hr=l("tspan"),on=o("Kernel Mode Setting"),ce=l("text"),cs=l("tspan"),Ur=o("Wayland"),Ve=l("tspan"),Ea=o("obsoletes"),Ms=l("tspan"),nn=o("2D drivers in"),Hr=l("tspan"),ln=o("display server"),mr=l("text"),jr=l("tspan"),pn=o("Wayland compositor"),Se=l("text"),Ys=l("tspan"),_a=o("API: "),us=l("tspan"),cn=o("EGL"),qt=l("text"),Ns=l("tspan"),un=o("API: "),Wr=l("tspan"),Pa=o("EGL"),xr=l("text"),hs=l("tspan"),Gs=o("Window manager"),Gt=l("text"),Rr=l("tspan"),Ba=o("KWin"),Fs=l("tspan"),co=o("Mutter"),Ae=l("tspan"),fs=o("Weston"),Kr=l("tspan"),hn=o("Enlightment"),we=l("text"),Cr=l("tspan"),fn=o("KWin"),Hs=l("tspan"),kn=o("Compiz"),Dr=l("tspan"),dn=o("OpenBox"),Ws=l("tspan"),Ks=o("Metacity"),Zs=l("tspan"),yn=o("Mutter"),this.h()},l(Tr){k=i(Tr,"svg",{xmlns:!0,"xmlns:xlink":!0,viewBox:!0});var x=s(k);w=i(x,"defs",{});var U=s(w);Bt=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var el=s(Bt);jt=i(el,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(jt).forEach(r),el.forEach(r),d=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var La=s(d);Xt=i(La,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(Xt).forEach(r),La.forEach(r),ue=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var rl=s(ue);Ue=i(rl,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(Ue).forEach(r),rl.forEach(r),je=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var sl=s(je);nt=i(sl,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(nt).forEach(r),sl.forEach(r),Qt=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Ma=s(Qt);Ct=i(Ma,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(Ct).forEach(r),Ma.forEach(r),Dt=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var al=s(Dt);ge=i(al,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(ge).forEach(r),al.forEach(r),Jt=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var ol=s(Jt);_t=i(ol,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(_t).forEach(r),ol.forEach(r),Rt=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Ga=s(Rt);H=i(Ga,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(H).forEach(r),Ga.forEach(r),te=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var nl=s(te);he=i(nl,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(he).forEach(r),nl.forEach(r),C=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var ll=s(C);D=i(ll,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(D).forEach(r),ll.forEach(r),Q=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var vn=s(Q);lt=i(vn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(lt).forEach(r),vn.forEach(r),A=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Xa=s(A);q=i(Xa,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(q).forEach(r),Xa.forEach(r),J=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var il=s(J);W=i(il,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(W).forEach(r),il.forEach(r),tt=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var mn=s(tt);it=i(mn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(it).forEach(r),mn.forEach(r),et=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var $a=s(et);B=i($a,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(B).forEach(r),$a.forEach(r),rt=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var pl=s(rt);pt=i(pl,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(pt).forEach(r),pl.forEach(r),K=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var xn=s(K);E=i(xn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(E).forEach(r),xn.forEach(r),_=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var ho=s(_);X=i(ho,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(X).forEach(r),ho.forEach(r),st=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var bi=s(st);ct=i(bi,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(ct).forEach(r),bi.forEach(r),$=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var fo=s($);V=i(fo,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(V).forEach(r),fo.forEach(r),ee=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Va=s(ee);be=i(Va,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(be).forEach(r),Va.forEach(r),Y=i(U,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var cl=s(Y);fe=i(cl,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(fe).forEach(r),cl.forEach(r),U.forEach(r),I=i(x,"g",{transform:!0});var yt=s(I);P=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(P).forEach(r),$t=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s($t).forEach(r),Ne=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Ne).forEach(r),z=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(z).forEach(r),Vt=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Vt).forEach(r),ke=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(ke).forEach(r),j=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(j).forEach(r),Yt=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Yt).forEach(r),Ce=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Ce).forEach(r),g=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(g).forEach(r),T=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(T).forEach(r),de=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(de).forEach(r),O=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(O).forEach(r),Nt=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Nt).forEach(r),Fe=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Fe).forEach(r),G=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(G).forEach(r),vt=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(vt).forEach(r),He=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(He).forEach(r),R=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(R).forEach(r),mt=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(mt).forEach(r),We=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(We).forEach(r),S=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(S).forEach(r),xt=i(yt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(xt).forEach(r),yt.forEach(r),Pt=i(x,"g",{transform:!0});var Ie=s(Pt);L=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(L).forEach(r),re=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(re).forEach(r),Qe=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(Qe).forEach(r),St=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(St).forEach(r),Je=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(Je).forEach(r),M=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(M).forEach(r),se=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(se).forEach(r),tr=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(tr).forEach(r),Ft=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(Ft).forEach(r),ae=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(ae).forEach(r),b=i(Ie,"path",{id:!0,fill:!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0,display:!0}),s(b).forEach(r),Tt=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(Tt).forEach(r),er=i(Ie,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(er).forEach(r),Ee=i(Ie,"use",{"xlink:href":!0,width:!0,height:!0,transform:!0}),s(Ee).forEach(r),Ie.forEach(r),at=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Rs=s(at);Z=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0});var Ya=s(Z);ut=i(Ya,"tspan",{"font-weight":!0});var Na=s(ut);At=n(Na,"Mesa"),Na.forEach(r),oe=n(Ya,":APIs+DRI/Gallium3D driver"),Ya.forEach(r),wt=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var wn=s(wt);ye=n(wn,"libGL-mesa-swx11 "),ot=i(wn,"tspan",{"font-weight":!0});var gn=s(ot);_e=n(gn,"(libGL)"),gn.forEach(r),wn.forEach(r),kt=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var ko=s(kt);ve=n(ko,"libGL-mesa-glx"),ko.forEach(r),gt=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Ei=s(gt);It=n(Ei,"libOpenVG-mesa"),Ei.forEach(r),bt=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var yo=s(bt);zt=n(yo,"libGLES-mesa"),yo.forEach(r),ne=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Qs=s(ne);qr=n(Qs,"libEGL-mesa"),Qs.forEach(r),Et=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var bn=s(Et);me=n(bn,"libEGL-mesa-drivers "),N=i(bn,"tspan",{"font-weight":!0});var Ra=s(N);wr=n(Ra,"(Wayland)"),Ra.forEach(r),bn.forEach(r),rr=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var ul=s(rr);F=n(ul,"libGBM"),ul.forEach(r),Lt=i(Rs,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var En=s(Lt);As=n(En,"libGL-mesa-DRI "),sr=i(En,"tspan",{"font-weight":!0});var _n=s(sr);ms=n(_n,"(Modules)"),_n.forEach(r),En.forEach(r),Rs.forEach(r),dt=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Js=s(dt);le=i(Js,"tspan",{x:!0,y:!0});var Zr=s(le);la=n(Zr,"X-server "),Br=i(Zr,"tspan",{"font-weight":!0});var ta=s(Br);m=n(ta,"("),ta.forEach(r),xs=i(Zr,"tspan",{});var vo=s(xs);Is=n(vo,"X.Org)"),vo.forEach(r),Zr.forEach(r),Js.forEach(r),ht=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Fa=s(ht);Ke=i(Fa,"tspan",{x:!0,y:!0,style:!0});var Pn=s(Ke);Us=n(Pn,"X.Org Server display driver"),Pn.forEach(r),De=i(Fa,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var ea=s(De);ia=n(ea,"xserver-xorg-video-nouveau"),ea.forEach(r),gr=i(Fa,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var Sa=s(gr);pa=n(Sa,"xserver-xorg-video-nvidia"),Sa.forEach(r),ft=i(Fa,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var hl=s(ft);Xr=n(hl,"xserver-xorg-video-radeon"),hl.forEach(r),Fa.forEach(r),Ht=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Qr=s(Ht);$r=i(Qr,"tspan",{x:!0,y:!0});var fl=s($r);ca=n(fl,"DRM"),fl.forEach(r),Qr.forEach(r),ie=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var kl=s(ie);fr=i(kl,"tspan",{x:!0,y:!0});var dl=s(fr);ua=n(dl,"Linux kernel"),dl.forEach(r),kl.forEach(r),Wt=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ra=s(Wt);Te=i(ra,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var yl=s(Te);ha=n(yl,"libDRM-intel"),yl.forEach(r),br=i(ra,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var vl=s(br);Vr=n(vl,"libDRM-radeon"),vl.forEach(r),Er=i(ra,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var Ha=s(Er);fa=n(Ha,"libDRM-nouveau"),Ha.forEach(r),Oe=i(ra,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var ml=s(Oe);ka=n(ml,"libDRM-freedreno"),ml.forEach(r),ra.forEach(r),Kt=i(x,"text",{x:!0,y:!0,class:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Wa=s(Kt);ar=i(Wa,"tspan",{x:!0,y:!0});var zn=s(ar);da=n(zn,"hardware specific"),zn.forEach(r),Yr=i(Wa,"tspan",{x:!0,y:!0});var Ka=s(Yr);ws=n(Ka,"Userspace interface to"),Ka.forEach(r),Pe=i(Wa,"tspan",{x:!0,y:!0});var xl=s(Pe);ya=n(xl,"hardware specific"),xl.forEach(r),Ze=i(Wa,"tspan",{x:!0,y:!0});var Ln=s(Ze);va=n(Ln,"direct rendering manager"),Ln.forEach(r),Wa.forEach(r),ze=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Za=s(ze);or=i(Za,"tspan",{x:!0,y:!0,"font-size":!0});var wl=s(or);ma=n(wl,"CPU & registers & L1 & L2 & L3 & L4 & main memory"),wl.forEach(r),Za.forEach(r),Le=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Mn=s(Le);_r=i(Mn,"tspan",{x:!0,y:!0,"font-size":!0});var mo=s(_r);rs=n(mo,"GPU & registers & L1 & L2 (& graphic memory)"),mo.forEach(r),Mn.forEach(r),pe=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var ri=s(pe);Sr=i(ri,"tspan",{x:!0,y:!0});var xo=s(Sr);Ar=n(xo,"Applications"),xo.forEach(r),qe=i(ri,"tspan",{x:!0,y:!0});var sa=s(qe);gs=n(sa,"Toolkits"),sa.forEach(r),ri.forEach(r),Be=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var gl=s(Be);bs=i(gl,"tspan",{x:!0,y:!0,style:!0});var Aa=s(bs);io=n(Aa,"libDRM"),Aa.forEach(r),gl.forEach(r),Xe=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var bl=s(Xe);js=i(bl,"tspan",{x:!0,y:!0});var El=s(js);po=n(El,"3D-game engine"),El.forEach(r),bl.forEach(r),Ut=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var wo=s(Ut);Pr=i(wo,"tspan",{x:!0,y:!0,style:!0});var ks=s(Pr);Yo=n(ks,"DDX-"),ks.forEach(r),zr=i(wo,"tspan",{x:!0,y:!0,style:!0});var _l=s(zr);No=n(_l,"driver"),_l.forEach(r),wo.forEach(r),nr=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var go=s(nr);Ir=i(go,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Pl=s(Ir);Fo=n(Pl,"libX / libXCB"),Pl.forEach(r),go.forEach(r),Me=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var bo=s(Me);xe=i(bo,"tspan",{x:!0,y:!0,"font-size":!0});var Ia=s(xe);ss=n(Ia,"Proprietary OpenGL 4.2 driver"),Ia.forEach(r),Lr=i(bo,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var zl=s(Lr);Ho=n(zl,"libGL-nvidia-glx"),zl.forEach(r),as=i(bo,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Ll=s(as);Cs=n(Ll,"libGL-fglrx-glx"),Ll.forEach(r),bo.forEach(r),lr=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Gn=s(lr);Es=i(Gn,"tspan",{x:!0,y:!0,style:!0});var Eo=s(Es);Wo=n(Eo,'"libGL"'),Eo.forEach(r),Gn.forEach(r),Ot=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Rn=s(Ot);Ds=i(Rn,"tspan",{x:!0,y:!0});var _o=s(Ds);Ko=n(_o,"Rendering APIs: "),_o.forEach(r),os=i(Rn,"tspan",{x:!0,y:!0});var Qa=s(os);Ts=i(Qa,"tspan",{"font-weight":!0,style:!0});var Ml=s(Ts);Zo=n(Ml,"OpenGL"),Ml.forEach(r),Qa.forEach(r),Nr=i(Rn,"tspan",{x:!0,y:!0});var Sn=s(Nr);Os=i(Sn,"tspan",{"font-weight":!0,style:!0});var Po=s(Os);Qo=n(Po,"OpenGL|ES"),Po.forEach(r),Sn.forEach(r),_s=i(Rn,"tspan",{x:!0,y:!0});var _i=s(_s);Mt=i(_i,"tspan",{"font-weight":!0,style:!0});var zo=s(Mt);ns=n(zo,"OpenVG"),zo.forEach(r),_i.forEach(r),Rn.forEach(r),Ge=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Ja=s(Ge);qs=i(Ja,"tspan",{x:!0,y:!0});var Gl=s(qs);xa=i(Gl,"tspan",{"font-weight":!0});var An=s(xa);Bs=n(An,"X 11R7.8"),An.forEach(r),Gl.forEach(r),Ja.forEach(r),ir=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Lo=s(ir);Xs=i(Lo,"tspan",{x:!0,y:!0});var Pi=s(Xs);ls=n(Pi,"blob"),Pi.forEach(r),Lo.forEach(r),Zt=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var to=s(Zt);Ps=i(to,"tspan",{x:!0,y:!0,style:!0});var aa=s(Ps);Jo=n(aa,"Display"),aa.forEach(r),Mr=i(to,"tspan",{x:!0,y:!0,style:!0});var Rl=s(Mr);tn=n(Rl,"server"),Rl.forEach(r),to.forEach(r),pr=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Mo=s(pr);Re=i(Mo,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Sl=s(Re);wa=n(Sl,"libwayland-client"),Sl.forEach(r),Mo.forEach(r),cr=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Al=s(cr);$s=i(Al,"tspan",{x:!0,y:!0});var In=s($s);zs=i(In,"tspan",{"font-weight":!0});var Go=s(zs);en=n(Go,"Wayland 1.5"),Go.forEach(r),In.forEach(r),Al.forEach(r),kr=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var zi=s(kr);Gr=i(zi,"tspan",{x:!0,y:!0,"font-size":!0});var Ro=s(Gr);rn=n(Ro,"framebuffer"),Ro.forEach(r),zi.forEach(r),$e=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var oa=s($e);Ls=i(oa,"tspan",{x:!0,y:!0,style:!0});var Il=s(Ls);ga=n(Il,"DIX driver"),Il.forEach(r),oa.forEach(r),dr=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var So=s(dr);is=i(So,"tspan",{x:!0,y:!0,fill:!0,"font-size":!0});var Ul=s(is);ba=n(Ul,"hardware-specific"),Ul.forEach(r),So.forEach(r),Vs=i(x,"path",{fill:!0,stroke:!0,d:!0}),s(Vs).forEach(r),yr=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var jl=s(yr);ps=i(jl,"tspan",{x:!0,y:!0});var Un=s(ps);sn=n(Un,"by Shmuel Csaba Otto Traian; CC-BY-SA 4.0 intl; created 2013-08-24; last updated 2014-03-25"),Un.forEach(r),jl.forEach(r),ur=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var eo=s(ur);Fr=i(eo,"tspan",{x:!0,y:!0});var Cl=s(Fr);an=n(Cl,"KMS"),Cl.forEach(r),eo.forEach(r),vr=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var jn=s(vr);hr=i(jn,"tspan",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,style:!0,"text-anchor":!0});var Ao=s(hr);on=n(Ao,"Kernel Mode Setting"),Ao.forEach(r),jn.forEach(r),ce=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Cn=s(ce);cs=i(Cn,"tspan",{x:!0,y:!0,style:!0});var Io=s(cs);Ur=n(Io,"Wayland"),Io.forEach(r),Ve=i(Cn,"tspan",{x:!0,y:!0,style:!0});var Ye=s(Ve);Ea=n(Ye,"obsoletes"),Ye.forEach(r),Ms=i(Cn,"tspan",{x:!0,y:!0,style:!0});var Ua=s(Ms);nn=n(Ua,"2D drivers in"),Ua.forEach(r),Hr=i(Cn,"tspan",{x:!0,y:!0,style:!0});var ro=s(Hr);ln=n(ro,"display server"),ro.forEach(r),Cn.forEach(r),mr=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Dl=s(mr);jr=i(Dl,"tspan",{x:!0,y:!0});var Tl=s(jr);pn=n(Tl,"Wayland compositor"),Tl.forEach(r),Dl.forEach(r),Se=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Dn=s(Se);Ys=i(Dn,"tspan",{x:!0,y:!0});var ja=s(Ys);_a=n(ja,"API: "),ja.forEach(r),us=i(Dn,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var Ol=s(us);cn=n(Ol,"EGL"),Ol.forEach(r),Dn.forEach(r),qt=i(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Tn=s(qt);Ns=i(Tn,"tspan",{x:!0,y:!0});var Uo=s(Ns);un=n(Uo,"API: "),Uo.forEach(r),Wr=i(Tn,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var ql=s(Wr);Pa=n(ql,"EGL"),ql.forEach(r),Tn.forEach(r),xr=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Bl=s(xr);hs=i(Bl,"tspan",{x:!0,y:!0,"font-weight":!0});var jo=s(hs);Gs=n(jo,"Window manager"),jo.forEach(r),Bl.forEach(r),Gt=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var so=s(Gt);Rr=i(so,"tspan",{x:!0,y:!0});var Xl=s(Rr);Ba=n(Xl,"KWin"),Xl.forEach(r),Fs=i(so,"tspan",{x:!0,y:!0});var Co=s(Fs);co=n(Co,"Mutter"),Co.forEach(r),Ae=i(so,"tspan",{x:!0,y:!0});var $l=s(Ae);fs=n($l,"Weston"),$l.forEach(r),Kr=i(so,"tspan",{x:!0,y:!0});var Vl=s(Kr);hn=n(Vl,"Enlightment"),Vl.forEach(r),so.forEach(r),we=i(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ds=s(we);Cr=i(ds,"tspan",{x:!0,y:!0});var Yl=s(Cr);fn=n(Yl,"KWin"),Yl.forEach(r),Hs=i(ds,"tspan",{x:!0,y:!0});var Nl=s(Hs);kn=n(Nl,"Compiz"),Nl.forEach(r),Dr=i(ds,"tspan",{x:!0,y:!0});var On=s(Dr);dn=n(On,"OpenBox"),On.forEach(r),Ws=i(ds,"tspan",{x:!0,y:!0});var na=s(Ws);Ks=n(na,"Metacity"),na.forEach(r),Zs=i(ds,"tspan",{x:!0,y:!0});var Fl=s(Zs);yn=n(Fl,"Mutter"),Fl.forEach(r),ds.forEach(r),x.forEach(r),this.h()},h(){t(jt,"fill","green"),t(jt,"fill-rule","evenodd"),t(jt,"stroke","green"),t(jt,"stroke-width",".2pt"),t(jt,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(Bt,"id","h"),t(Bt,"orient","auto"),t(Bt,"overflow","visible"),t(Bt,"refX","0"),t(Bt,"refY","0"),t(Xt,"fill","green"),t(Xt,"fill-rule","evenodd"),t(Xt,"stroke","green"),t(Xt,"stroke-width",".2pt"),t(Xt,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(d,"id","g"),t(d,"orient","auto"),t(d,"overflow","visible"),t(d,"refX","0"),t(d,"refY","0"),t(Ue,"fill","navy"),t(Ue,"fill-rule","evenodd"),t(Ue,"stroke","navy"),t(Ue,"stroke-width",".2pt"),t(Ue,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(ue,"id","p"),t(ue,"orient","auto"),t(ue,"overflow","visible"),t(ue,"refX","0"),t(ue,"refY","0"),t(nt,"fill","navy"),t(nt,"fill-rule","evenodd"),t(nt,"stroke","navy"),t(nt,"stroke-width",".2pt"),t(nt,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(je,"id","o"),t(je,"orient","auto"),t(je,"overflow","visible"),t(je,"refX","0"),t(je,"refY","0"),t(Ct,"fill","navy"),t(Ct,"fill-rule","evenodd"),t(Ct,"stroke","navy"),t(Ct,"stroke-width",".2pt"),t(Ct,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(Qt,"id","n"),t(Qt,"orient","auto"),t(Qt,"overflow","visible"),t(Qt,"refX","0"),t(Qt,"refY","0"),t(ge,"fill","navy"),t(ge,"fill-rule","evenodd"),t(ge,"stroke","navy"),t(ge,"stroke-width",".2pt"),t(ge,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(Dt,"id","m"),t(Dt,"orient","auto"),t(Dt,"overflow","visible"),t(Dt,"refX","0"),t(Dt,"refY","0"),t(_t,"fill","green"),t(_t,"fill-rule","evenodd"),t(_t,"stroke","green"),t(_t,"stroke-width",".2pt"),t(_t,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(Jt,"id","r"),t(Jt,"orient","auto"),t(Jt,"overflow","visible"),t(Jt,"refX","0"),t(Jt,"refY","0"),t(H,"fill","green"),t(H,"fill-rule","evenodd"),t(H,"stroke","green"),t(H,"stroke-width",".2pt"),t(H,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(Rt,"id","q"),t(Rt,"orient","auto"),t(Rt,"overflow","visible"),t(Rt,"refX","0"),t(Rt,"refY","0"),t(he,"fill","#0197fd"),t(he,"fill-rule","evenodd"),t(he,"stroke","#0197fd"),t(he,"stroke-width",".2pt"),t(he,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(te,"id","f"),t(te,"orient","auto"),t(te,"overflow","visible"),t(te,"refX","0"),t(te,"refY","0"),t(D,"fill","#0197fd"),t(D,"fill-rule","evenodd"),t(D,"stroke","#0197fd"),t(D,"stroke-width",".2pt"),t(D,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(C,"id","e"),t(C,"orient","auto"),t(C,"overflow","visible"),t(C,"refX","0"),t(C,"refY","0"),t(lt,"fill","#0197fd"),t(lt,"fill-rule","evenodd"),t(lt,"stroke","#0197fd"),t(lt,"stroke-width",".2pt"),t(lt,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(Q,"id","t"),t(Q,"orient","auto"),t(Q,"overflow","visible"),t(Q,"refX","0"),t(Q,"refY","0"),t(q,"fill","#0197fd"),t(q,"fill-rule","evenodd"),t(q,"stroke","#0197fd"),t(q,"stroke-width",".2pt"),t(q,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(A,"id","s"),t(A,"orient","auto"),t(A,"overflow","visible"),t(A,"refX","0"),t(A,"refY","0"),t(W,"fill","#0197fd"),t(W,"fill-rule","evenodd"),t(W,"stroke","#0197fd"),t(W,"stroke-width",".2pt"),t(W,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(J,"id","d"),t(J,"orient","auto"),t(J,"overflow","visible"),t(J,"refX","0"),t(J,"refY","0"),t(it,"fill","#0197fd"),t(it,"fill-rule","evenodd"),t(it,"stroke","#0197fd"),t(it,"stroke-width",".2pt"),t(it,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(tt,"id","c"),t(tt,"orient","auto"),t(tt,"overflow","visible"),t(tt,"refX","0"),t(tt,"refY","0"),t(B,"fill","#0197fd"),t(B,"fill-rule","evenodd"),t(B,"stroke","#0197fd"),t(B,"stroke-width",".2pt"),t(B,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(et,"id","v"),t(et,"orient","auto"),t(et,"overflow","visible"),t(et,"refX","0"),t(et,"refY","0"),t(pt,"fill","#0197fd"),t(pt,"fill-rule","evenodd"),t(pt,"stroke","#0197fd"),t(pt,"stroke-width",".2pt"),t(pt,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(rt,"id","u"),t(rt,"orient","auto"),t(rt,"overflow","visible"),t(rt,"refX","0"),t(rt,"refY","0"),t(E,"fill","#0197fd"),t(E,"fill-rule","evenodd"),t(E,"stroke","#0197fd"),t(E,"stroke-width",".2pt"),t(E,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(K,"id","b"),t(K,"orient","auto"),t(K,"overflow","visible"),t(K,"refX","0"),t(K,"refY","0"),t(X,"fill","#0197fd"),t(X,"fill-rule","evenodd"),t(X,"stroke","#0197fd"),t(X,"stroke-width",".2pt"),t(X,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(_,"id","a"),t(_,"orient","auto"),t(_,"overflow","visible"),t(_,"refX","0"),t(_,"refY","0"),t(ct,"fill","#0197fd"),t(ct,"fill-rule","evenodd"),t(ct,"stroke","#0197fd"),t(ct,"stroke-width",".2pt"),t(ct,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(st,"id","j"),t(st,"orient","auto"),t(st,"overflow","visible"),t(st,"refX","0"),t(st,"refY","0"),t(V,"fill","#0197fd"),t(V,"fill-rule","evenodd"),t(V,"stroke","#0197fd"),t(V,"stroke-width",".2pt"),t(V,"d","m1.154 0-1.73 1v-2l1.73 1z"),t($,"id","i"),t($,"orient","auto"),t($,"overflow","visible"),t($,"refX","0"),t($,"refY","0"),t(be,"fill","#0197fd"),t(be,"fill-rule","evenodd"),t(be,"stroke","#0197fd"),t(be,"stroke-width",".2pt"),t(be,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(ee,"id","l"),t(ee,"orient","auto"),t(ee,"overflow","visible"),t(ee,"refX","0"),t(ee,"refY","0"),t(fe,"fill","#0197fd"),t(fe,"fill-rule","evenodd"),t(fe,"stroke","#0197fd"),t(fe,"stroke-width",".2pt"),t(fe,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(Y,"id","k"),t(Y,"orient","auto"),t(Y,"overflow","visible"),t(Y,"refX","0"),t(Y,"refY","0"),t(P,"width","740"),t(P,"height","75"),t(P,"x","285.092"),t(P,"y","-370.066"),t(P,"fill","#e9b96e"),t(P,"rx","18.031"),t(P,"ry","18.031"),t($t,"width","1280"),t($t,"height","70"),t($t,"x","-254.908"),t($t,"y","219.934"),t($t,"fill","#c1504f"),t($t,"rx","18.031"),t($t,"ry","18.031"),t(Ne,"width","660"),t(Ne,"height","150"),t(Ne,"x","180.092"),t(Ne,"y","-270.066"),t(Ne,"fill","#8e8ed7"),t(Ne,"rx","18.031"),t(Ne,"ry","18.031"),t(z,"width","290"),t(z,"height","140"),t(z,"x","545.092"),t(z,"y","-265.066"),t(z,"fill","#504fc1"),t(z,"rx","18.031"),t(z,"ry","18.031"),t(Vt,"width","280"),t(Vt,"height","80"),t(Vt,"x","550.092"),t(Vt,"y","-210.066"),t(Vt,"fill","#0197fd"),t(Vt,"rx","18.031"),t(Vt,"ry","18.031"),t(ke,"width","1280"),t(ke,"height","25"),t(ke,"x","-254.908"),t(ke,"y","299.934"),t(ke,"fill","#333"),t(ke,"rx","0"),t(ke,"ry","0"),t(j,"width","150"),t(j,"height","50"),t(j,"x","50.092"),t(j,"y","229.934"),t(j,"fill","#0197fd"),t(j,"rx","18.031"),t(j,"ry","18.031"),t(Yt,"width","230"),t(Yt,"height","90"),t(Yt,"x","10.092"),t(Yt,"y","99.934"),t(Yt,"fill","#0197fd"),t(Yt,"rx","18.031"),t(Yt,"ry","18.031"),t(Ce,"width","280"),t(Ce,"height","25"),t(Ce,"x","290.092"),t(Ce,"y","-325.066"),t(Ce,"fill","#504fc1"),t(Ce,"rx","10"),t(Ce,"ry","10"),t(g,"width","530"),t(g,"height","50"),t(g,"x","-254.908"),t(g,"y","-370.066"),t(g,"fill","#e9b96e"),t(g,"rx","18.031"),t(g,"ry","18.031"),t(T,"width","530"),t(T,"height","165"),t(T,"x","-254.908"),t(T,"y","-90.066"),t(T,"fill","#8ed78e"),t(T,"rx","18.031"),t(T,"ry","18.031"),t(de,"width","250"),t(de,"height","105"),t(de,"x","20.092"),t(de,"y","-85.066"),t(de,"fill","green"),t(de,"rx","18.031"),t(de,"ry","18.031"),t(O,"width","240"),t(O,"height","155"),t(O,"x","-229.908"),t(O,"y","-85.066"),t(O,"fill","green"),t(O,"rx","18.031"),t(O,"ry","18.031"),t(Nt,"width","130"),t(Nt,"height","40"),t(Nt,"x","-169.908"),t(Nt,"y","234.934"),t(Nt,"fill","#0197fd"),t(Nt,"rx","18.031"),t(Nt,"ry","18.031"),t(Fe,"width","1280"),t(Fe,"height","25"),t(Fe,"x","-254.908"),t(Fe,"y","324.934"),t(Fe,"fill","#0197fd"),t(Fe,"rx","0"),t(Fe,"ry","0"),t(G,"width","280"),t(G,"height","25"),t(G,"x","740.092"),t(G,"y","-325.066"),t(G,"fill","#504fc1"),t(G,"rx","10"),t(G,"ry","10"),t(vt,"width","130"),t(vt,"height","20"),t(vt,"x","881.663"),t(vt,"y","327.434"),t(vt,"fill","#0ff"),t(vt,"rx","6.25"),t(vt,"ry","6.25"),t(He,"width","280"),t(He,"height","37"),t(He,"x","550.092"),t(He,"y","-247.066"),t(He,"fill","#0197fd"),t(He,"rx","18.031"),t(He,"ry","18.031"),t(R,"width","250"),t(R,"height","50"),t(R,"x","20.092"),t(R,"y","19.934"),t(R,"fill","green"),t(R,"rx","18.031"),t(R,"ry","18.031"),t(mt,"width","150"),t(mt,"height","50"),t(mt,"x","476.791"),t(mt,"y","229.826"),t(mt,"fill","#0197fd"),t(mt,"rx","18.031"),t(mt,"ry","18.031"),t(We,"width","280"),t(We,"height","140"),t(We,"x","185.092"),t(We,"y","-265.066"),t(We,"fill","#504fc1"),t(We,"rx","18.031"),t(We,"ry","18.031"),t(S,"width","150"),t(S,"height","100"),t(S,"x","310.092"),t(S,"y","-230.066"),t(S,"fill","#0197fd"),t(S,"rx","18.031"),t(S,"ry","18.031"),t(xt,"width","160"),t(xt,"height","140"),t(xt,"x","865.092"),t(xt,"y","-265.066"),t(xt,"fill","#8e8ed7"),t(xt,"rx","18.031"),t(xt,"ry","18.031"),t(I,"transform","translate(254.908 370.066)"),t(L,"fill","none"),t(L,"stroke","#0197fd"),t(L,"stroke-width","5"),t(L,"marker-end","url(#a)"),t(L,"marker-start","url(#b)"),t(L,"d","M125 239.931v15.137"),t(re,"fill","none"),t(re,"stroke","#0197fd"),t(re,"stroke-width","5"),t(re,"marker-end","url(#c)"),t(re,"marker-start","url(#d)"),t(re,"d","M125 354.536v29.963"),t(Qe,"fill","none"),t(Qe,"stroke","#0197fd"),t(Qe,"stroke-width","5"),t(Qe,"marker-end","url(#e)"),t(Qe,"marker-start","url(#f)"),t(Qe,"d","M544.054.019h-23.75v312.153H245.355"),t(St,"fill","none"),t(St,"stroke","green"),t(St,"stroke-width","5"),t(St,"marker-end","url(#g)"),t(St,"marker-start","url(#h)"),t(St,"d","M10-153.8V63.431"),t(Je,"fill","none"),t(Je,"stroke","#0197fd"),t(Je,"stroke-width","5"),t(Je,"marker-end","url(#i)"),t(Je,"marker-start","url(#j)"),t(Je,"d","M-105 227.477v158.381"),t(M,"fill","none"),t(M,"stroke","#0197fd"),t(M,"stroke-width","5"),t(M,"marker-end","url(#k)"),t(M,"marker-start","url(#l)"),t(M,"d","M-105 440.19v39.286"),t(se,"fill","none"),t(se,"stroke","navy"),t(se,"stroke-width","5"),t(se,"marker-end","url(#m)"),t(se,"marker-start","url(#n)"),t(se,"d","M415-135.985v21.97"),t(tr,"fill","none"),t(tr,"stroke","navy"),t(tr,"stroke-width","5"),t(tr,"marker-end","url(#o)"),t(tr,"marker-start","url(#p)"),t(tr,"d","M793.582-133.605v21.97"),t(Ft,"fill","none"),t(Ft,"stroke","green"),t(Ft,"stroke-width","5"),t(Ft,"marker-end","url(#q)"),t(Ft,"marker-start","url(#r)"),t(Ft,"d","M385.032-131.558v12.348H161.255V63.47"),t(ae,"fill","none"),t(ae,"stroke","#0197fd"),t(ae,"stroke-width","5"),t(ae,"marker-end","url(#s)"),t(ae,"marker-start","url(#t)"),t(ae,"d","M551.699 46.395v337.047"),t(b,"id","w"),t(b,"fill","none"),t(b,"stroke","#0197fd"),t(b,"stroke-dasharray","none"),t(b,"stroke-linecap","butt"),t(b,"stroke-linejoin","miter"),t(b,"stroke-miterlimit","4"),t(b,"stroke-opacity","1"),t(b,"stroke-width","5"),t(b,"marker-end","url(#u)"),t(b,"marker-start","url(#v)"),t(b,"d","M125 445.292v32.991"),t(b,"display","inline"),t(Tt,"fill","none"),t(Tt,"stroke","green"),t(Tt,"stroke-width","5"),t(Tt,"marker-end","url(#q)"),t(Tt,"marker-start","url(#r)"),t(Tt,"d","M366.875 41.395v12.098H186.848v10.5"),t(er,"fill","none"),t(er,"stroke","navy"),t(er,"stroke-width","5"),t(er,"marker-end","url(#o)"),t(er,"marker-start","url(#p)"),t(er,"d","M858.183-38.504h-16.366"),lh(Ee,"xlink:href","#w"),t(Ee,"width","1280"),t(Ee,"height","720"),t(Ee,"transform","translate(426.699 .994)"),t(Pt,"transform","translate(255 210)"),t(ut,"font-weight","700"),t(Z,"x","27.248"),t(Z,"y","-72.382"),t(Z,"font-size","13"),t(ot,"font-weight","400"),t(wt,"x","27.248"),t(wt,"y","-54.882"),t(wt,"font-size","14"),t(wt,"font-weight","700"),t(kt,"x","27.248"),t(kt,"y","-37.382"),t(kt,"font-size","14"),t(kt,"font-weight","700"),t(gt,"x","27.248"),t(gt,"y","-19.882"),t(gt,"font-size","14"),t(gt,"font-weight","700"),t(bt,"x","27.248"),t(bt,"y","-2.382"),t(bt,"font-size","14"),t(bt,"font-weight","700"),t(ne,"x","27.248"),t(ne,"y","15.118"),t(ne,"font-size","14"),t(ne,"font-weight","700"),t(N,"font-weight","400"),t(Et,"x","27.248"),t(Et,"y","32.618"),t(Et,"font-size","14"),t(Et,"font-weight","700"),t(rr,"x","27.248"),t(rr,"y","50.118"),t(rr,"font-size","14"),t(rr,"font-weight","700"),t(sr,"font-weight","400"),t(Lt,"x","27.248"),t(Lt,"y","67.618"),t(Lt,"font-size","14"),t(Lt,"font-weight","700"),t(at,"x","27.248"),t(at,"y","-72.382"),t(at,"fill","#fff"),t(at,"font-size","16"),t(at,"font-weight","400"),t(at,"letter-spacing","0"),f(at,"line-height","125%"),t(at,"transform","translate(254.908 370.066)"),t(at,"word-spacing","0"),t(Br,"font-weight","600"),t(le,"x","620.536"),t(le,"y","-250.266"),t(dt,"x","620.536"),t(dt,"y","-250.266"),t(dt,"font-size","16"),t(dt,"font-weight","700"),t(dt,"letter-spacing","0"),f(dt,"line-height","125%"),t(dt,"transform","translate(254.908 370.066)"),t(dt,"word-spacing","0"),t(Ke,"x","601.856"),t(Ke,"y","-191.913"),f(Ke,"text-align","start"),t(De,"x","601.856"),t(De,"y","-173.907"),t(De,"font-weight","700"),f(De,"text-align","start"),t(gr,"x","601.856"),t(gr,"y","-156.407"),t(gr,"font-weight","700"),f(gr,"text-align","start"),t(ft,"x","601.856"),t(ft,"y","-138.907"),t(ft,"font-weight","700"),f(ft,"text-align","start"),t(ht,"x","601.856"),t(ht,"y","-191.913"),t(ht,"fill","#fff"),t(ht,"font-size","14"),t(ht,"font-weight","400"),t(ht,"letter-spacing","0"),f(ht,"text-align","start"),f(ht,"line-height","125%"),t(ht,"transform","translate(254.908 370.066)"),t(ht,"word-spacing","0"),t($r,"x","109.561"),t($r,"y","254.736"),t(Ht,"x","109.561"),t(Ht,"y","254.736"),t(Ht,"fill","#fff"),t(Ht,"font-size","14"),t(Ht,"font-weight","700"),t(Ht,"letter-spacing","0"),f(Ht,"line-height","125%"),t(Ht,"transform","translate(254.908 370.066)"),t(Ht,"word-spacing","0"),t(fr,"x","821.302"),t(fr,"y","263.136"),t(ie,"x","821.302"),t(ie,"y","263.136"),t(ie,"fill","#fff"),t(ie,"font-size","22"),t(ie,"font-weight","700"),t(ie,"letter-spacing","0"),f(ie,"text-align","center"),f(ie,"line-height","125%"),t(ie,"text-anchor","middle"),t(ie,"transform","translate(254.908 370.066)"),t(ie,"word-spacing","0"),t(Te,"x","53.376"),t(Te,"y","120.866"),t(Te,"font-weight","700"),f(Te,"text-align","start"),t(br,"x","53.376"),t(br,"y","140.866"),t(br,"font-weight","700"),f(br,"text-align","start"),t(Er,"x","53.376"),t(Er,"y","160.866"),t(Er,"font-weight","700"),f(Er,"text-align","start"),t(Oe,"x","53.376"),t(Oe,"y","180.866"),t(Oe,"font-weight","700"),f(Oe,"text-align","start"),t(Wt,"x","53.376"),t(Wt,"y","120.866"),t(Wt,"fill","#fff"),t(Wt,"font-size","16"),t(Wt,"font-weight","400"),t(Wt,"letter-spacing","0"),f(Wt,"line-height","125%"),t(Wt,"transform","translate(254.908 370.066)"),t(Wt,"word-spacing","0"),t(ar,"x","275.561"),t(ar,"y","84.085"),t(Yr,"x","275.561"),t(Yr,"y","101.585"),t(Pe,"x","275.561"),t(Pe,"y","119.085"),t(Ze,"x","275.561"),t(Ze,"y","136.585"),t(Kt,"x","275.561"),t(Kt,"y","84.085"),t(Kt,"class","themed"),t(Kt,"font-size","14"),t(Kt,"font-weight","400"),t(Kt,"letter-spacing","0"),f(Kt,"line-height","125%"),t(Kt,"transform","translate(254.908 370.066)"),t(Kt,"word-spacing","0"),t(or,"x","85.209"),t(or,"y","317.33"),t(or,"font-size","18"),t(ze,"x","85.209"),t(ze,"y","317.33"),t(ze,"fill","#fff"),t(ze,"font-size","20"),t(ze,"font-weight","700"),t(ze,"letter-spacing","0"),f(ze,"line-height","125%"),t(ze,"transform","translate(254.908 370.066)"),t(ze,"word-spacing","0"),t(_r,"x","128.232"),t(_r,"y","342.33"),t(_r,"font-size","18"),t(Le,"x","128.232"),t(Le,"y","342.33"),t(Le,"fill","#fff"),t(Le,"font-size","20"),t(Le,"font-weight","700"),t(Le,"letter-spacing","0"),f(Le,"line-height","125%"),t(Le,"transform","translate(254.908 370.066)"),t(Le,"word-spacing","0"),t(Sr,"x","655.565"),t(Sr,"y","-338.114"),t(qe,"x","655.565"),t(qe,"y","-310.614"),t(pe,"x","655.565"),t(pe,"y","-338.114"),t(pe,"font-size","22"),t(pe,"font-weight","700"),t(pe,"letter-spacing","0"),f(pe,"text-align","center"),f(pe,"line-height","125%"),t(pe,"text-anchor","middle"),t(pe,"transform","translate(254.908 370.066)"),t(pe,"word-spacing","0"),t(bs,"x","-176.86"),t(bs,"y","36.25"),f(bs,"text-align","start"),t(Be,"x","-176.86"),t(Be,"y","36.25"),t(Be,"fill","#fff"),t(Be,"font-size","16"),t(Be,"font-weight","700"),t(Be,"letter-spacing","0"),f(Be,"line-height","125%"),t(Be,"transform","rotate(-90 312.487 57.579)"),t(Be,"word-spacing","0"),t(js,"x","-92.018"),t(js,"y","-339.082"),t(Xe,"x","-92.018"),t(Xe,"y","-339.082"),t(Xe,"font-size","22"),t(Xe,"font-weight","700"),t(Xe,"letter-spacing","0"),f(Xe,"line-height","125%"),t(Xe,"transform","translate(254.908 370.066)"),t(Xe,"word-spacing","0"),t(Pr,"x","169.737"),t(Pr,"y","571.479"),f(Pr,"text-align","center"),t(zr,"x","169.737"),t(zr,"y","591.479"),f(zr,"text-align","center"),t(Ut,"x","169.737"),t(Ut,"y","571.479"),t(Ut,"fill","#fff"),t(Ut,"font-size","16"),t(Ut,"font-weight","700"),t(Ut,"letter-spacing","0"),f(Ut,"text-align","center"),f(Ut,"line-height","125%"),t(Ut,"text-anchor","middle"),t(Ut,"transform","rotate(-90 312.487 57.579)"),t(Ut,"word-spacing","0"),t(Ir,"x","825.292"),t(Ir,"y","-307.524"),t(Ir,"font-size","14"),t(Ir,"font-weight","700"),t(nr,"x","825.292"),t(nr,"y","-307.524"),t(nr,"fill","#fff"),t(nr,"font-size","16"),t(nr,"font-weight","400"),t(nr,"letter-spacing","0"),f(nr,"line-height","125%"),t(nr,"transform","translate(254.908 370.066)"),t(nr,"word-spacing","0"),t(xe,"x","-217.554"),t(xe,"y","-21.17"),t(xe,"font-size","13"),t(Lr,"x","-215.554"),t(Lr,"y","-3.67"),t(Lr,"font-size","14"),t(Lr,"font-weight","700"),t(as,"x","-215.554"),t(as,"y","13.83"),t(as,"font-size","14"),t(as,"font-weight","700"),t(Me,"x","-217.554"),t(Me,"y","-21.17"),t(Me,"fill","#fff"),t(Me,"font-size","16"),t(Me,"font-weight","400"),t(Me,"letter-spacing","0"),f(Me,"line-height","125%"),t(Me,"transform","translate(254.908 370.066)"),t(Me,"word-spacing","0"),t(Es,"x","-15.782"),t(Es,"y","-236.764"),f(Es,"text-align","start"),t(lr,"x","-15.782"),t(lr,"y","-236.764"),t(lr,"fill","green"),t(lr,"font-size","16"),t(lr,"font-weight","700"),t(lr,"letter-spacing","0"),f(lr,"line-height","125%"),t(lr,"transform","rotate(-90 312.487 57.579)"),t(lr,"word-spacing","0"),t(Ds,"x","-4.725"),t(Ds,"y","-235.652"),t(Ts,"font-weight","700"),f(Ts,"text-align","end"),t(os,"x","-9.819"),t(os,"y","-215.652"),t(Os,"font-weight","700"),f(Os,"text-align","end"),t(Nr,"x","-9.819"),t(Nr,"y","-195.652"),t(Mt,"font-weight","700"),f(Mt,"text-align","end"),t(_s,"x","-9.819"),t(_s,"y","-175.652"),t(Ot,"x","-9.819"),t(Ot,"y","-235.652"),t(Ot,"fill","green"),t(Ot,"font-size","16"),t(Ot,"font-weight","400"),t(Ot,"letter-spacing","0"),f(Ot,"text-align","end"),f(Ot,"line-height","125%"),t(Ot,"text-anchor","end"),t(Ot,"transform","translate(254.908 370.066)"),t(Ot,"word-spacing","0"),t(xa,"font-weight","700"),t(qs,"x","808.684"),t(qs,"y","-279.241"),t(Ge,"x","808.684"),t(Ge,"y","-279.241"),t(Ge,"fill","navy"),t(Ge,"font-size","16"),t(Ge,"font-weight","400"),t(Ge,"letter-spacing","0"),f(Ge,"line-height","125%"),t(Ge,"transform","translate(254.908 370.066)"),t(Ge,"word-spacing","0"),t(Xs,"x","-122.428"),t(Xs,"y","260.154"),t(ir,"x","-122.428"),t(ir,"y","260.154"),t(ir,"fill","#fff"),t(ir,"font-size","14"),t(ir,"font-weight","700"),t(ir,"letter-spacing","0"),f(ir,"line-height","125%"),t(ir,"transform","translate(254.908 370.066)"),t(ir,"word-spacing","0"),t(Ps,"x","503.676"),t(Ps,"y","-201.222"),f(Ps,"text-align","center"),t(Mr,"x","503.676"),t(Mr,"y","-181.222"),f(Mr,"text-align","center"),t(Zt,"x","503.676"),t(Zt,"y","-201.222"),t(Zt,"fill","#fff"),t(Zt,"font-size","16"),t(Zt,"font-weight","700"),t(Zt,"letter-spacing","0"),f(Zt,"text-align","center"),f(Zt,"line-height","125%"),t(Zt,"text-anchor","middle"),t(Zt,"transform","translate(254.908 370.066)"),t(Zt,"word-spacing","0"),t(Re,"x","358.742"),t(Re,"y","-308.324"),t(Re,"font-size","14"),t(Re,"font-weight","700"),t(pr,"x","358.742"),t(pr,"y","-308.324"),t(pr,"fill","#fff"),t(pr,"font-size","16"),t(pr,"font-weight","400"),t(pr,"letter-spacing","0"),f(pr,"line-height","125%"),t(pr,"transform","translate(254.908 370.066)"),t(pr,"word-spacing","0"),t(zs,"font-weight","700"),t($s,"x","435.118"),t($s,"y","-278.714"),t(cr,"x","435.118"),t(cr,"y","-278.714"),t(cr,"fill","navy"),t(cr,"font-size","16"),t(cr,"font-weight","400"),t(cr,"letter-spacing","0"),f(cr,"line-height","125%"),t(cr,"transform","translate(254.908 370.066)"),t(cr,"word-spacing","0"),t(Gr,"x","898.837"),t(Gr,"y","342.654"),t(Gr,"font-size","14"),t(kr,"x","898.837"),t(kr,"y","342.654"),t(kr,"font-size","16"),t(kr,"font-weight","400"),t(kr,"letter-spacing","0"),f(kr,"line-height","125%"),t(kr,"transform","translate(254.908 370.066)"),t(kr,"word-spacing","0"),t(Ls,"x","689.436"),t(Ls,"y","-222.601"),f(Ls,"text-align","center"),t($e,"x","689.436"),t($e,"y","-222.601"),t($e,"fill","#fff"),t($e,"font-size","16"),t($e,"font-weight","700"),t($e,"letter-spacing","0"),f($e,"text-align","center"),f($e,"line-height","125%"),t($e,"text-anchor","middle"),t($e,"transform","translate(254.908 370.066)"),t($e,"word-spacing","0"),t(is,"x","53.503"),t(is,"y","270.901"),t(is,"fill","#fff"),t(is,"font-size","14"),t(dr,"x","53.503"),t(dr,"y","270.901"),t(dr,"font-size","22"),t(dr,"font-weight","400"),t(dr,"letter-spacing","0"),f(dr,"line-height","125%"),t(dr,"transform","translate(254.908 370.066)"),t(dr,"word-spacing","0"),t(Vs,"fill","none"),t(Vs,"stroke","#000"),t(Vs,"d","M.5 577.5h1279"),t(ps,"x","-255.957"),t(ps,"y","-382.556"),t(yr,"x","-255.957"),t(yr,"y","-382.556"),t(yr,"font-size","12"),t(yr,"font-weight","400"),t(yr,"letter-spacing","0"),f(yr,"line-height","125%"),t(yr,"transform","translate(254.908 370.066)"),t(yr,"word-spacing","0"),t(Fr,"x","538.587"),t(Fr,"y","251.409"),t(ur,"x","538.587"),t(ur,"y","251.409"),t(ur,"fill","#fff"),t(ur,"font-size","14"),t(ur,"font-weight","700"),t(ur,"letter-spacing","0"),f(ur,"line-height","125%"),t(ur,"transform","translate(254.908 370.066)"),t(ur,"word-spacing","0"),t(hr,"x","552.125"),t(hr,"y","270.839"),t(hr,"fill","#fff"),t(hr,"font-size","12"),t(hr,"font-weight","400"),f(hr,"text-align","center"),t(hr,"text-anchor","middle"),t(vr,"x","552.125"),t(vr,"y","270.839"),t(vr,"font-size","22"),t(vr,"font-weight","700"),t(vr,"letter-spacing","0"),f(vr,"line-height","125%"),t(vr,"transform","translate(254.908 370.066)"),t(vr,"word-spacing","0"),t(cs,"x","384.885"),t(cs,"y","-205.651"),f(cs,"text-align","center"),t(Ve,"x","384.885"),t(Ve,"y","-185.651"),f(Ve,"text-align","center"),t(Ms,"x","384.885"),t(Ms,"y","-165.651"),f(Ms,"text-align","center"),t(Hr,"x","384.885"),t(Hr,"y","-145.651"),f(Hr,"text-align","center"),t(ce,"x","384.885"),t(ce,"y","-205.651"),t(ce,"fill","#ccc"),t(ce,"font-size","16"),t(ce,"font-weight","400"),t(ce,"letter-spacing","0"),f(ce,"text-align","center"),f(ce,"line-height","125%"),t(ce,"text-anchor","middle"),t(ce,"transform","translate(254.908 370.066)"),t(ce,"word-spacing","0"),t(jr,"x","196.344"),t(jr,"y","-250.519"),t(mr,"x","196.344"),t(mr,"y","-250.519"),t(mr,"font-size","16"),t(mr,"font-weight","700"),t(mr,"letter-spacing","0"),f(mr,"line-height","125%"),t(mr,"transform","translate(254.908 370.066)"),t(mr,"word-spacing","0"),t(Ys,"x","155.722"),t(Ys,"y","-215.152"),t(us,"x","150.628"),t(us,"y","-195.152"),t(us,"font-weight","700"),f(us,"text-align","end"),t(Se,"x","150.628"),t(Se,"y","-215.152"),t(Se,"fill","green"),t(Se,"font-size","16"),t(Se,"font-weight","400"),t(Se,"letter-spacing","0"),f(Se,"text-align","end"),f(Se,"line-height","125%"),t(Se,"text-anchor","end"),t(Se,"transform","translate(254.908 370.066)"),t(Se,"word-spacing","0"),t(Ns,"x","334.469"),t(Ns,"y","-85.119"),t(Wr,"x","329.376"),t(Wr,"y","-65.119"),t(Wr,"font-weight","700"),f(Wr,"text-align","end"),t(qt,"x","329.376"),t(qt,"y","-85.119"),t(qt,"fill","green"),t(qt,"font-size","16"),t(qt,"font-weight","400"),t(qt,"letter-spacing","0"),f(qt,"text-align","end"),f(qt,"line-height","125%"),t(qt,"text-anchor","end"),t(qt,"transform","translate(254.908 370.066)"),t(qt,"word-spacing","0"),t(hs,"x","875.229"),t(hs,"y","-243.73"),t(hs,"font-weight","600"),t(xr,"x","875.229"),t(xr,"y","-243.73"),t(xr,"font-size","16"),t(xr,"font-weight","700"),t(xr,"letter-spacing","0"),f(xr,"line-height","125%"),t(xr,"transform","translate(254.908 370.066)"),t(xr,"word-spacing","0"),t(Rr,"x","195.519"),t(Rr,"y","-214.337"),t(Fs,"x","195.519"),t(Fs,"y","-194.337"),t(Ae,"x","195.519"),t(Ae,"y","-174.337"),t(Kr,"x","195.519"),t(Kr,"y","-154.337"),t(Gt,"x","195.519"),t(Gt,"y","-214.337"),t(Gt,"font-size","16"),t(Gt,"font-weight","400"),t(Gt,"letter-spacing","0"),f(Gt,"text-align","start"),f(Gt,"line-height","125%"),t(Gt,"transform","translate(254.908 370.066)"),t(Gt,"word-spacing","-7.92"),t(Cr,"x","895.201"),t(Cr,"y","-219.286"),t(Hs,"x","895.201"),t(Hs,"y","-199.286"),t(Dr,"x","895.201"),t(Dr,"y","-179.286"),t(Ws,"x","895.201"),t(Ws,"y","-159.286"),t(Zs,"x","895.201"),t(Zs,"y","-139.286"),t(we,"x","895.201"),t(we,"y","-219.286"),t(we,"font-size","16"),t(we,"font-weight","400"),t(we,"letter-spacing","0"),f(we,"text-align","start"),f(we,"line-height","125%"),t(we,"transform","translate(254.908 370.066)"),t(we,"word-spacing","-7.92"),Qi(k,uo)},m(Tr,x){h(Tr,k,x),e(k,w),e(w,Bt),e(Bt,jt),e(w,d),e(d,Xt),e(w,ue),e(ue,Ue),e(w,je),e(je,nt),e(w,Qt),e(Qt,Ct),e(w,Dt),e(Dt,ge),e(w,Jt),e(Jt,_t),e(w,Rt),e(Rt,H),e(w,te),e(te,he),e(w,C),e(C,D),e(w,Q),e(Q,lt),e(w,A),e(A,q),e(w,J),e(J,W),e(w,tt),e(tt,it),e(w,et),e(et,B),e(w,rt),e(rt,pt),e(w,K),e(K,E),e(w,_),e(_,X),e(w,st),e(st,ct),e(w,$),e($,V),e(w,ee),e(ee,be),e(w,Y),e(Y,fe),e(k,I),e(I,P),e(I,$t),e(I,Ne),e(I,z),e(I,Vt),e(I,ke),e(I,j),e(I,Yt),e(I,Ce),e(I,g),e(I,T),e(I,de),e(I,O),e(I,Nt),e(I,Fe),e(I,G),e(I,vt),e(I,He),e(I,R),e(I,mt),e(I,We),e(I,S),e(I,xt),e(k,Pt),e(Pt,L),e(Pt,re),e(Pt,Qe),e(Pt,St),e(Pt,Je),e(Pt,M),e(Pt,se),e(Pt,tr),e(Pt,Ft),e(Pt,ae),e(Pt,b),e(Pt,Tt),e(Pt,er),e(Pt,Ee),e(k,at),e(at,Z),e(Z,ut),e(ut,At),e(Z,oe),e(at,wt),e(wt,ye),e(wt,ot),e(ot,_e),e(at,kt),e(kt,ve),e(at,gt),e(gt,It),e(at,bt),e(bt,zt),e(at,ne),e(ne,qr),e(at,Et),e(Et,me),e(Et,N),e(N,wr),e(at,rr),e(rr,F),e(at,Lt),e(Lt,As),e(Lt,sr),e(sr,ms),e(k,dt),e(dt,le),e(le,la),e(le,Br),e(Br,m),e(le,xs),e(xs,Is),e(k,ht),e(ht,Ke),e(Ke,Us),e(ht,De),e(De,ia),e(ht,gr),e(gr,pa),e(ht,ft),e(ft,Xr),e(k,Ht),e(Ht,$r),e($r,ca),e(k,ie),e(ie,fr),e(fr,ua),e(k,Wt),e(Wt,Te),e(Te,ha),e(Wt,br),e(br,Vr),e(Wt,Er),e(Er,fa),e(Wt,Oe),e(Oe,ka),e(k,Kt),e(Kt,ar),e(ar,da),e(Kt,Yr),e(Yr,ws),e(Kt,Pe),e(Pe,ya),e(Kt,Ze),e(Ze,va),e(k,ze),e(ze,or),e(or,ma),e(k,Le),e(Le,_r),e(_r,rs),e(k,pe),e(pe,Sr),e(Sr,Ar),e(pe,qe),e(qe,gs),e(k,Be),e(Be,bs),e(bs,io),e(k,Xe),e(Xe,js),e(js,po),e(k,Ut),e(Ut,Pr),e(Pr,Yo),e(Ut,zr),e(zr,No),e(k,nr),e(nr,Ir),e(Ir,Fo),e(k,Me),e(Me,xe),e(xe,ss),e(Me,Lr),e(Lr,Ho),e(Me,as),e(as,Cs),e(k,lr),e(lr,Es),e(Es,Wo),e(k,Ot),e(Ot,Ds),e(Ds,Ko),e(Ot,os),e(os,Ts),e(Ts,Zo),e(Ot,Nr),e(Nr,Os),e(Os,Qo),e(Ot,_s),e(_s,Mt),e(Mt,ns),e(k,Ge),e(Ge,qs),e(qs,xa),e(xa,Bs),e(k,ir),e(ir,Xs),e(Xs,ls),e(k,Zt),e(Zt,Ps),e(Ps,Jo),e(Zt,Mr),e(Mr,tn),e(k,pr),e(pr,Re),e(Re,wa),e(k,cr),e(cr,$s),e($s,zs),e(zs,en),e(k,kr),e(kr,Gr),e(Gr,rn),e(k,$e),e($e,Ls),e(Ls,ga),e(k,dr),e(dr,is),e(is,ba),e(k,Vs),e(k,yr),e(yr,ps),e(ps,sn),e(k,ur),e(ur,Fr),e(Fr,an),e(k,vr),e(vr,hr),e(hr,on),e(k,ce),e(ce,cs),e(cs,Ur),e(ce,Ve),e(Ve,Ea),e(ce,Ms),e(Ms,nn),e(ce,Hr),e(Hr,ln),e(k,mr),e(mr,jr),e(jr,pn),e(k,Se),e(Se,Ys),e(Ys,_a),e(Se,us),e(us,cn),e(k,qt),e(qt,Ns),e(Ns,un),e(qt,Wr),e(Wr,Pa),e(k,xr),e(xr,hs),e(hs,Gs),e(k,Gt),e(Gt,Rr),e(Rr,Ba),e(Gt,Fs),e(Fs,co),e(Gt,Ae),e(Ae,fs),e(Gt,Kr),e(Kr,hn),e(k,we),e(we,Cr),e(Cr,fn),e(we,Hs),e(Hs,kn),e(we,Dr),e(Dr,dn),e(we,Ws),e(Ws,Ks),e(we,Zs),e(Zs,yn)},p(Tr,[x]){Qi(k,uo=ih(za,[{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{viewBox:"0 0 1280 720"},x&1&&Tr[0]]))},i:gi,o:gi,d(Tr){Tr&&r(k)}}}function uh(Ss,k,w){return Ss.$$set=Bt=>{w(0,k=ei(ei({},k),Ji(Bt)))},k=Ji(k),[k]}let hh=class extends Yp{constructor(k){super(),Np(this,k,uh,ch,Fp,{})}};function fh(Ss){let k,w,Bt,jt,d,Xt,ue,Ue,je,nt,Qt,Ct,Dt,ge,Jt,_t,Rt,H,te,he,C,D,Q,lt,A,q,J,W,tt,it,et,B,rt,pt,K,E,_,X,st,ct,$,V,ee,be,Y,fe,I,P,$t,Ne,z,Vt,ke,j,Yt,Ce,g,T,de,O,Nt,Fe,G,vt,He,R,mt,We,S,xt,Pt,L,re,Qe,St,Je,M,se,tr,Ft,ae,b,Tt,er,Ee,at,Z,ut,At,oe,wt,ye,ot,_e,kt,ve,gt,It,bt,zt,ne,qr,Et,me,N,wr,rr,F,Lt,As,sr=[{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{id:"raspberrypi_video_api"},{version:"1.1"},{viewBox:"0 0 707.107 659.024"},Ss[0]],ms={};for(let dt=0;dt<sr.length;dt+=1)ms=ei(ms,sr[dt]);return{c(){k=l("svg"),w=l("defs"),Bt=l("style"),jt=o("svg#raspberrypi_video_api text{font-size:27px}"),d=l("g"),Xt=l("g"),ue=l("g"),Ue=l("g"),je=l("g"),nt=l("g"),Qt=l("path"),Ct=l("path"),Dt=l("use"),ge=l("g"),Jt=l("g"),_t=l("g"),Rt=l("g"),H=l("g"),te=l("path"),he=l("path"),C=l("path"),D=l("path"),Q=l("path"),lt=l("path"),A=l("path"),q=l("path"),J=l("path"),W=l("path"),tt=l("path"),it=l("path"),et=l("path"),B=l("path"),rt=l("path"),pt=l("path"),K=l("path"),E=l("path"),_=l("path"),X=l("path"),st=l("path"),ct=l("path"),$=l("path"),V=l("text"),ee=l("tspan"),be=o("application"),Y=l("text"),fe=l("tspan"),I=o("OpenGL ES"),P=l("text"),$t=l("tspan"),Ne=o("application"),z=l("text"),Vt=l("tspan"),ke=o("application"),j=l("text"),Yt=l("tspan"),Ce=o("Media"),g=l("text"),T=l("tspan"),de=o("OpenMax"),O=l("text"),Nt=l("tspan"),Fe=o("OpenVG"),G=l("text"),vt=l("tspan"),He=o("EGL"),R=l("text"),mt=l("tspan"),We=o("Kernel driver"),S=l("text"),xt=l("tspan"),Pt=o("Videocore IV GPU"),L=l("text"),re=l("tspan"),Qe=o("Open"),St=l("tspan"),Je=o("source"),M=l("text"),se=l("tspan"),tr=o("Closed"),Ft=l("tspan"),ae=o("source"),b=l("text"),Tt=l("tspan"),er=o("Binary"),Ee=l("tspan"),at=o("blob"),Z=l("path"),ut=l("path"),At=l("path"),oe=l("path"),wt=l("path"),ye=l("path"),ot=l("path"),_e=l("path"),kt=l("path"),ve=l("path"),gt=l("path"),It=l("path"),bt=l("path"),zt=l("text"),ne=l("tspan"),qr=o("ARM"),Et=l("path"),me=l("path"),N=l("text"),wr=l("tspan"),rr=o("3D"),F=l("text"),Lt=l("tspan"),As=o("2D"),this.h()},l(dt){k=i(dt,"svg",{xmlns:!0,"xmlns:xlink":!0,id:!0,version:!0,viewBox:!0});var le=s(k);w=i(le,"defs",{});var la=s(w);Bt=i(la,"style",{});var Br=s(Bt);jt=n(Br,"svg#raspberrypi_video_api text{font-size:27px}"),Br.forEach(r),la.forEach(r),d=i(le,"g",{id:!0,transform:!0});var m=s(d);Xt=i(m,"g",{id:!0,transform:!0});var xs=s(Xt);ue=i(xs,"g",{id:!0,transform:!0});var Is=s(ue);Ue=i(Is,"g",{id:!0});var ht=s(Ue);je=i(ht,"g",{id:!0});var Ke=s(je);nt=i(Ke,"g",{id:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,transform:!0});var Us=s(nt);Qt=i(Us,"path",{id:!0,fill:!0,"stroke-width":!0,d:!0}),s(Qt).forEach(r),Ct=i(Us,"path",{id:!0,fill:!0,"stroke-width":!0,d:!0}),s(Ct).forEach(r),Us.forEach(r),Ke.forEach(r),ht.forEach(r),Is.forEach(r),xs.forEach(r),Dt=i(m,"use",{"xlink:href":!0,id:!0,width:!0,height:!0,x:!0,y:!0}),s(Dt).forEach(r),ge=i(m,"g",{id:!0,transform:!0});var De=s(ge);Jt=i(De,"g",{id:!0,transform:!0});var ia=s(Jt);_t=i(ia,"g",{id:!0});var gr=s(_t);Rt=i(gr,"g",{id:!0});var pa=s(Rt);H=i(pa,"g",{id:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,transform:!0});var ft=s(H);te=i(ft,"path",{id:!0,fill:!0,"stroke-width":!0,d:!0}),s(te).forEach(r),he=i(ft,"path",{id:!0,fill:!0,"stroke-width":!0,d:!0}),s(he).forEach(r),ft.forEach(r),pa.forEach(r),gr.forEach(r),ia.forEach(r),De.forEach(r),C=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(C).forEach(r),D=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(D).forEach(r),Q=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(Q).forEach(r),lt=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(lt).forEach(r),A=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(A).forEach(r),q=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(q).forEach(r),J=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(J).forEach(r),W=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(W).forEach(r),tt=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(tt).forEach(r),it=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(it).forEach(r),et=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(et).forEach(r),B=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(B).forEach(r),rt=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(rt).forEach(r),pt=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(pt).forEach(r),K=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(K).forEach(r),E=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(E).forEach(r),_=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(_).forEach(r),X=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(X).forEach(r),st=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(st).forEach(r),ct=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(ct).forEach(r),$=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s($).forEach(r),V=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Xr=s(V);ee=i(Xr,"tspan",{id:!0,x:!0,y:!0});var Ht=s(ee);be=n(Ht,"application"),Ht.forEach(r),Xr.forEach(r),Y=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var $r=s(Y);fe=i($r,"tspan",{id:!0,x:!0,y:!0});var ca=s(fe);I=n(ca,"OpenGL ES"),ca.forEach(r),$r.forEach(r),P=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ie=s(P);$t=i(ie,"tspan",{id:!0,x:!0,y:!0});var fr=s($t);Ne=n(fr,"application"),fr.forEach(r),ie.forEach(r),z=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ua=s(z);Vt=i(ua,"tspan",{id:!0,x:!0,y:!0});var Wt=s(Vt);ke=n(Wt,"application"),Wt.forEach(r),ua.forEach(r),j=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Te=s(j);Yt=i(Te,"tspan",{id:!0,x:!0,y:!0});var ha=s(Yt);Ce=n(ha,"Media"),ha.forEach(r),Te.forEach(r),g=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var br=s(g);T=i(br,"tspan",{id:!0,x:!0,y:!0});var Vr=s(T);de=n(Vr,"OpenMax"),Vr.forEach(r),br.forEach(r),O=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Er=s(O);Nt=i(Er,"tspan",{id:!0,x:!0,y:!0});var fa=s(Nt);Fe=n(fa,"OpenVG"),fa.forEach(r),Er.forEach(r),G=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Oe=s(G);vt=i(Oe,"tspan",{id:!0,x:!0,y:!0});var ka=s(vt);He=n(ka,"EGL"),ka.forEach(r),Oe.forEach(r),R=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Kt=s(R);mt=i(Kt,"tspan",{id:!0,x:!0,y:!0});var ar=s(mt);We=n(ar,"Kernel driver"),ar.forEach(r),Kt.forEach(r),S=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var da=s(S);xt=i(da,"tspan",{id:!0,x:!0,y:!0});var Yr=s(xt);Pt=n(Yr,"Videocore IV GPU"),Yr.forEach(r),da.forEach(r),L=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,class:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ws=s(L);re=i(ws,"tspan",{id:!0,x:!0,y:!0});var Pe=s(re);Qe=n(Pe,"Open"),Pe.forEach(r),St=i(ws,"tspan",{id:!0,x:!0,y:!0});var ya=s(St);Je=n(ya,"source"),ya.forEach(r),ws.forEach(r),M=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,class:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Ze=s(M);se=i(Ze,"tspan",{id:!0,x:!0,y:!0});var va=s(se);tr=n(va,"Closed"),va.forEach(r),Ft=i(Ze,"tspan",{id:!0,x:!0,y:!0});var ze=s(Ft);ae=n(ze,"source"),ze.forEach(r),Ze.forEach(r),b=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,class:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var or=s(b);Tt=i(or,"tspan",{id:!0,x:!0,y:!0});var ma=s(Tt);er=n(ma,"Binary"),ma.forEach(r),Ee=i(or,"tspan",{id:!0,x:!0,y:!0});var Le=s(Ee);at=n(Le,"blob"),Le.forEach(r),or.forEach(r),Z=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(Z).forEach(r),ut=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(ut).forEach(r),At=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(At).forEach(r),oe=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(oe).forEach(r),wt=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(wt).forEach(r),ye=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(ye).forEach(r),ot=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(ot).forEach(r),_e=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(_e).forEach(r),kt=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(kt).forEach(r),ve=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(ve).forEach(r),gt=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(gt).forEach(r),It=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(It).forEach(r),bt=i(m,"path",{id:!0,fill:!0,"fill-opacity":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(bt).forEach(r),zt=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,class:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var _r=s(zt);ne=i(_r,"tspan",{id:!0,x:!0,y:!0});var rs=s(ne);qr=n(rs,"ARM"),rs.forEach(r),_r.forEach(r),Et=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(Et).forEach(r),me=i(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(me).forEach(r),N=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var pe=s(N);wr=i(pe,"tspan",{id:!0,x:!0,y:!0});var Sr=s(wr);rr=n(Sr,"3D"),Sr.forEach(r),pe.forEach(r),F=i(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Ar=s(F);Lt=i(Ar,"tspan",{id:!0,x:!0,y:!0});var qe=s(Lt);As=n(qe,"2D"),qe.forEach(r),Ar.forEach(r),m.forEach(r),le.forEach(r),this.h()},h(){t(Qt,"id","rect5362"),t(Qt,"fill","#594d44"),t(Qt,"stroke-width",".987"),t(Qt,"d","M96.689 153.431h150.56v86.485H96.689z"),t(Ct,"id","rect5366"),t(Ct,"fill","#eeee0a"),t(Ct,"stroke-width",".982"),t(Ct,"d","M89.871 146.36h150.56v85.741H89.871z"),t(nt,"id","g5358"),t(nt,"fill-opacity","1"),t(nt,"fill-rule","evenodd"),t(nt,"stroke","#000"),t(nt,"stroke-dasharray","none"),t(nt,"stroke-linecap","butt"),t(nt,"stroke-linejoin","miter"),t(nt,"stroke-miterlimit","4"),t(nt,"stroke-opacity","1"),t(nt,"transform","translate(-9.596 -17.172)"),t(je,"id","g5356"),t(Ue,"id","g5354"),t(ue,"id","g5352"),t(ue,"transform","translate(13.636 -25.758)"),t(Xt,"id","use4061"),t(Xt,"transform","translate(-51.476 -43.937)"),lh(Dt,"xlink:href","#use4061"),t(Dt,"id","use4081"),t(Dt,"width","744.094"),t(Dt,"height","1052.362"),t(Dt,"x","0"),t(Dt,"y","0"),t(te,"id","rect4097"),t(te,"fill","#594d44"),t(te,"stroke-width",".987"),t(te,"d","M96.689 153.431h150.56v86.485H96.689z"),t(he,"id","rect4101"),t(he,"fill","#eeee0a"),t(he,"stroke-width",".982"),t(he,"d","M89.871 146.36h150.56v85.741H89.871z"),t(H,"id","g4093"),t(H,"fill-opacity","1"),t(H,"fill-rule","evenodd"),t(H,"stroke","#000"),t(H,"stroke-dasharray","none"),t(H,"stroke-linecap","butt"),t(H,"stroke-linejoin","miter"),t(H,"stroke-miterlimit","4"),t(H,"stroke-opacity","1"),t(H,"transform","translate(-9.596 -17.172)"),t(Rt,"id","g4091"),t(_t,"id","g4089"),t(Jt,"id","g4087"),t(Jt,"transform","translate(13.636 -25.758)"),t(ge,"id","use4083"),t(ge,"transform","translate(-51.476 -43.937)"),t(C,"id","rect4117"),t(C,"fill","#594d44"),t(C,"fill-opacity","1"),t(C,"fill-rule","evenodd"),t(C,"stroke","#000"),t(C,"stroke-dasharray","none"),t(C,"stroke-linecap","butt"),t(C,"stroke-linejoin","miter"),t(C,"stroke-miterlimit","4"),t(C,"stroke-opacity","1"),t(C,"stroke-width",".987"),t(C,"d","M49.254 66.565h150.56v86.485H49.254z"),t(D,"id","rect4121"),t(D,"fill","#eeee0a"),t(D,"fill-opacity","1"),t(D,"fill-rule","evenodd"),t(D,"stroke","#000"),t(D,"stroke-dasharray","none"),t(D,"stroke-linecap","butt"),t(D,"stroke-linejoin","miter"),t(D,"stroke-miterlimit","4"),t(D,"stroke-opacity","1"),t(D,"stroke-width",".982"),t(D,"d","M42.436 59.494h150.56v85.741H42.436z"),t(Q,"id","rect4117-9"),t(Q,"fill","#594d44"),t(Q,"fill-opacity","1"),t(Q,"fill-rule","evenodd"),t(Q,"stroke","#000"),t(Q,"stroke-dasharray","none"),t(Q,"stroke-linecap","butt"),t(Q,"stroke-linejoin","miter"),t(Q,"stroke-miterlimit","4"),t(Q,"stroke-opacity","1"),t(Q,"stroke-width",".987"),t(Q,"d","M242.436 66.193h150.56v86.485h-150.56z"),t(lt,"id","rect4117-6"),t(lt,"fill","#594d44"),t(lt,"fill-opacity","1"),t(lt,"fill-rule","evenodd"),t(lt,"stroke","#000"),t(lt,"stroke-dasharray","none"),t(lt,"stroke-linecap","butt"),t(lt,"stroke-linejoin","miter"),t(lt,"stroke-miterlimit","4"),t(lt,"stroke-opacity","1"),t(lt,"stroke-width",".987"),t(lt,"d","M430.82 66.193h150.56v86.485H430.82z"),t(A,"id","rect4117-7"),t(A,"fill","#594d44"),t(A,"fill-opacity","1"),t(A,"fill-rule","evenodd"),t(A,"stroke","#000"),t(A,"stroke-dasharray","none"),t(A,"stroke-linecap","butt"),t(A,"stroke-linejoin","miter"),t(A,"stroke-miterlimit","4"),t(A,"stroke-opacity","1"),t(A,"stroke-width",".987"),t(A,"d","M431.325 206.597h150.56v86.485h-150.56z"),t(q,"id","rect4117-2"),t(q,"fill","#594d44"),t(q,"fill-opacity","1"),t(q,"fill-rule","evenodd"),t(q,"stroke","#000"),t(q,"stroke-dasharray","none"),t(q,"stroke-linecap","butt"),t(q,"stroke-linejoin","miter"),t(q,"stroke-miterlimit","4"),t(q,"stroke-opacity","1"),t(q,"stroke-width",".987"),t(q,"d","M239.911 206.092h150.56v86.485h-150.56z"),t(J,"id","rect4117-0"),t(J,"fill","#594d44"),t(J,"fill-opacity","1"),t(J,"fill-rule","evenodd"),t(J,"stroke","#000"),t(J,"stroke-dasharray","none"),t(J,"stroke-linecap","butt"),t(J,"stroke-linejoin","miter"),t(J,"stroke-miterlimit","4"),t(J,"stroke-opacity","1"),t(J,"stroke-width",".987"),t(J,"d","M50.517 205.082h150.56v86.485H50.517z"),t(W,"id","rect4121-9"),t(W,"fill","#eeee0a"),t(W,"fill-opacity","1"),t(W,"fill-rule","evenodd"),t(W,"stroke","#000"),t(W,"stroke-dasharray","none"),t(W,"stroke-linecap","butt"),t(W,"stroke-linejoin","miter"),t(W,"stroke-miterlimit","4"),t(W,"stroke-opacity","1"),t(W,"stroke-width",".982"),t(W,"d","M235.365 58.989h150.56v85.741h-150.56z"),t(tt,"id","rect4121-91"),t(tt,"fill","#eeee0a"),t(tt,"fill-opacity","1"),t(tt,"fill-rule","evenodd"),t(tt,"stroke","#000"),t(tt,"stroke-dasharray","none"),t(tt,"stroke-linecap","butt"),t(tt,"stroke-linejoin","miter"),t(tt,"stroke-miterlimit","4"),t(tt,"stroke-opacity","1"),t(tt,"stroke-width",".982"),t(tt,"d","M422.739 59.494h150.56v85.741h-150.56z"),t(it,"id","rect4121-2"),t(it,"fill","#ee610a"),t(it,"fill-opacity","1"),t(it,"fill-rule","evenodd"),t(it,"stroke","#000"),t(it,"stroke-dasharray","none"),t(it,"stroke-linecap","butt"),t(it,"stroke-linejoin","miter"),t(it,"stroke-miterlimit","4"),t(it,"stroke-opacity","1"),t(it,"stroke-width",".982"),t(it,"d","M42.436 199.393h150.56v85.741H42.436z"),t(et,"id","rect4121-2-6"),t(et,"fill","#ee610a"),t(et,"fill-opacity","1"),t(et,"fill-rule","evenodd"),t(et,"stroke","#000"),t(et,"stroke-dasharray","none"),t(et,"stroke-linecap","butt"),t(et,"stroke-linejoin","miter"),t(et,"stroke-miterlimit","4"),t(et,"stroke-opacity","1"),t(et,"stroke-width",".982"),t(et,"d","M235.87 197.878h150.56v85.741H235.87z"),t(B,"id","rect4121-2-5"),t(B,"fill","#ee610a"),t(B,"fill-opacity","1"),t(B,"fill-rule","evenodd"),t(B,"stroke","#000"),t(B,"stroke-dasharray","none"),t(B,"stroke-linecap","butt"),t(B,"stroke-linejoin","miter"),t(B,"stroke-miterlimit","4"),t(B,"stroke-opacity","1"),t(B,"stroke-width",".982"),t(B,"d","M423.244 199.393h150.56v85.741h-150.56z"),t(rt,"id","rect4117-0-7"),t(rt,"fill","#594d44"),t(rt,"fill-opacity","1"),t(rt,"fill-rule","evenodd"),t(rt,"stroke","#000"),t(rt,"stroke-dasharray","none"),t(rt,"stroke-linecap","butt"),t(rt,"stroke-linejoin","miter"),t(rt,"stroke-miterlimit","4"),t(rt,"stroke-opacity","1"),t(rt,"stroke-width",".868"),t(rt,"d","M247.111 331.585h338.545v29.761H247.111z"),t(pt,"id","rect4117-0-7-3"),t(pt,"fill","#ee610a"),t(pt,"fill-opacity","1"),t(pt,"fill-rule","evenodd"),t(pt,"stroke","#000"),t(pt,"stroke-dasharray","none"),t(pt,"stroke-linecap","butt"),t(pt,"stroke-linejoin","miter"),t(pt,"stroke-miterlimit","4"),t(pt,"stroke-opacity","1"),t(pt,"stroke-width",".868"),t(pt,"d","M238.723 324.562h338.545v29.761H238.723z"),t(K,"id","rect4117-7-4"),t(K,"fill","#594d44"),t(K,"fill-opacity","1"),t(K,"fill-rule","evenodd"),t(K,"stroke","#000"),t(K,"stroke-dasharray","none"),t(K,"stroke-linecap","butt"),t(K,"stroke-linejoin","miter"),t(K,"stroke-miterlimit","4"),t(K,"stroke-opacity","1"),t(K,"stroke-width","1.342"),t(K,"d","M45.644 407.28h539.094v44.715H45.644z"),t(E,"id","rect4117-7-4-0"),t(E,"fill","#594d44"),t(E,"fill-opacity","1"),t(E,"fill-rule","evenodd"),t(E,"stroke","#000"),t(E,"stroke-dasharray","none"),t(E,"stroke-linecap","butt"),t(E,"stroke-linejoin","miter"),t(E,"stroke-miterlimit","4"),t(E,"stroke-opacity","1"),t(E,"stroke-width","1.342"),t(E,"d","M46.149 524.957h539.094v44.715H46.149z"),t(_,"id","rect4117-7-4-3"),t(_,"fill","#eeee0a"),t(_,"fill-opacity","1"),t(_,"fill-rule","evenodd"),t(_,"stroke","#000"),t(_,"stroke-dasharray","none"),t(_,"stroke-linecap","butt"),t(_,"stroke-linejoin","miter"),t(_,"stroke-miterlimit","4"),t(_,"stroke-opacity","1"),t(_,"stroke-width","1.342"),t(_,"d","M39.079 400.714h539.094v44.715H39.079z"),t(X,"id","rect4117-7-4-0-6"),t(X,"fill","#a00"),t(X,"fill-opacity","1"),t(X,"fill-rule","evenodd"),t(X,"stroke","#000"),t(X,"stroke-dasharray","none"),t(X,"stroke-linecap","butt"),t(X,"stroke-linejoin","miter"),t(X,"stroke-miterlimit","4"),t(X,"stroke-opacity","1"),t(X,"stroke-width","1.342"),t(X,"d","M40.089 518.896h539.094v44.715H40.089z"),t(st,"id","rect4121-4"),t(st,"fill","#eeee0a"),t(st,"fill-opacity","1"),t(st,"fill-rule","evenodd"),t(st,"stroke","#000"),t(st,"stroke-dasharray","none"),t(st,"stroke-linecap","butt"),t(st,"stroke-linejoin","miter"),t(st,"stroke-miterlimit","4"),t(st,"stroke-opacity","1"),t(st,"stroke-width",".381"),t(st,"d","M46.715 633.397h43.31v44.916h-43.31z"),t(ct,"id","rect4121-4-3"),t(ct,"fill","#ee610a"),t(ct,"fill-opacity","1"),t(ct,"fill-rule","evenodd"),t(ct,"stroke","#000"),t(ct,"stroke-dasharray","none"),t(ct,"stroke-linecap","butt"),t(ct,"stroke-linejoin","miter"),t(ct,"stroke-miterlimit","4"),t(ct,"stroke-opacity","1"),t(ct,"stroke-width",".381"),t(ct,"d","M257.776 633.397h43.31v44.916h-43.31z"),t($,"id","rect4121-4-8"),t($,"fill","#a00"),t($,"fill-opacity","1"),t($,"fill-rule","evenodd"),t($,"stroke","#000"),t($,"stroke-dasharray","none"),t($,"stroke-linecap","butt"),t($,"stroke-linejoin","miter"),t($,"stroke-miterlimit","4"),t($,"stroke-opacity","1"),t($,"stroke-width",".381"),t($,"d","M458.48 633.397h43.31v44.916h-43.31z"),t(ee,"id","tspan4804"),t(ee,"x","49.529"),t(ee,"y","120.622"),t(V,"xml:space","preserve"),t(V,"id","text4802"),t(V,"x","49.529"),t(V,"y","120.622"),t(V,"fill","#000"),t(V,"fill-opacity","1"),t(V,"stroke","none"),t(V,"font-style","normal"),t(V,"font-weight","400"),t(V,"letter-spacing","0"),f(V,"font-size","22px"),f(V,"line-height","125%"),t(V,"transform","scale(.96204 1.03945)"),t(V,"word-spacing","0"),t(fe,"id","tspan4822"),t(fe,"x","282.1"),t(fe,"y","218.601"),t(Y,"xml:space","preserve"),t(Y,"id","text4820"),t(Y,"x","282.1"),t(Y,"y","218.601"),t(Y,"fill","#000"),t(Y,"fill-opacity","1"),t(Y,"stroke","none"),t(Y,"font-style","normal"),t(Y,"font-weight","400"),t(Y,"letter-spacing","0"),f(Y,"line-height","125%"),t(Y,"transform","scale(.87228 1.14642)"),t(Y,"word-spacing","0"),t($t,"id","tspan4804-8"),t($t,"x","250.488"),t($t,"y","122.305"),t(P,"xml:space","preserve"),t(P,"id","text4802-3"),t(P,"x","250.488"),t(P,"y","122.305"),t(P,"fill","#000"),t(P,"fill-opacity","1"),t(P,"stroke","none"),t(P,"font-style","normal"),t(P,"font-weight","400"),t(P,"letter-spacing","0"),f(P,"font-size","22px"),f(P,"line-height","125%"),t(P,"transform","scale(.96204 1.03945)"),t(P,"word-spacing","0"),t(Vt,"id","tspan4804-5"),t(Vt,"x","445.004"),t(Vt,"y","122.305"),t(z,"xml:space","preserve"),t(z,"id","text4802-1"),t(z,"x","445.004"),t(z,"y","122.305"),t(z,"fill","#000"),t(z,"fill-opacity","1"),t(z,"stroke","none"),t(z,"font-style","normal"),t(z,"font-weight","400"),t(z,"letter-spacing","0"),f(z,"font-size","22px"),f(z,"line-height","125%"),t(z,"transform","scale(.96204 1.03945)"),t(z,"word-spacing","0"),t(Yt,"id","tspan4804-4"),t(Yt,"x","87.699"),t(Yt,"y","94.133"),t(j,"xml:space","preserve"),t(j,"id","text4802-35"),t(j,"x","87.699"),t(j,"y","94.133"),t(j,"fill","#000"),t(j,"fill-opacity","1"),t(j,"stroke","none"),t(j,"font-style","normal"),t(j,"font-weight","400"),t(j,"letter-spacing","0"),f(j,"font-size","22px"),f(j,"line-height","125%"),t(j,"transform","scale(.96204 1.03945)"),t(j,"word-spacing","0"),t(T,"id","tspan4822-6"),t(T,"x","77.945"),t(T,"y","219.197"),t(g,"xml:space","preserve"),t(g,"id","text4820-3"),t(g,"x","77.945"),t(g,"y","219.197"),t(g,"fill","#000"),t(g,"fill-opacity","1"),t(g,"stroke","none"),t(g,"font-style","normal"),t(g,"font-weight","400"),t(g,"letter-spacing","0"),f(g,"line-height","125%"),t(g,"transform","scale(.87228 1.14642)"),t(g,"word-spacing","0"),t(Nt,"id","tspan4822-5"),t(Nt,"x","522.483"),t(Nt,"y","217.328"),t(O,"xml:space","preserve"),t(O,"id","text4820-9"),t(O,"x","522.483"),t(O,"y","217.328"),t(O,"fill","#000"),t(O,"fill-opacity","1"),t(O,"stroke","none"),t(O,"font-style","normal"),t(O,"font-weight","400"),t(O,"letter-spacing","0"),f(O,"line-height","125%"),t(O,"transform","scale(.87228 1.14642)"),t(O,"word-spacing","0"),t(vt,"id","tspan4822-5-1"),t(vt,"x","440.118"),t(vt,"y","305.798"),t(G,"xml:space","preserve"),t(G,"id","text4820-9-9"),t(G,"x","440.118"),t(G,"y","305.798"),t(G,"fill","#000"),t(G,"fill-opacity","1"),t(G,"stroke","none"),t(G,"font-style","normal"),t(G,"font-weight","400"),t(G,"letter-spacing","0"),f(G,"line-height","125%"),t(G,"transform","scale(.87228 1.14642)"),t(G,"word-spacing","0"),t(mt,"id","tspan4822-5-1-5"),t(mt,"x","262.241"),t(mt,"y","378.196"),t(R,"xml:space","preserve"),t(R,"id","text4820-9-9-5"),t(R,"x","262.241"),t(R,"y","378.196"),t(R,"fill","#000"),t(R,"fill-opacity","1"),t(R,"stroke","none"),t(R,"font-style","normal"),t(R,"font-weight","400"),t(R,"letter-spacing","0"),f(R,"line-height","125%"),t(R,"transform","scale(.87228 1.14642)"),t(R,"word-spacing","0"),t(xt,"id","tspan4822-5-1-8"),t(xt,"x","223.756"),t(xt,"y","480.995"),t(S,"xml:space","preserve"),t(S,"id","text4820-9-9-1"),t(S,"x","223.756"),t(S,"y","480.995"),t(S,"fill","#000"),t(S,"fill-opacity","1"),t(S,"stroke","none"),t(S,"font-style","normal"),t(S,"font-weight","400"),t(S,"letter-spacing","0"),f(S,"line-height","125%"),t(S,"transform","scale(.87228 1.14642)"),t(S,"word-spacing","0"),t(re,"id","tspan4822-5-1-52"),t(re,"x","115.834"),t(re,"y","568.355"),t(St,"id","tspan5043"),t(St,"x","115.834"),t(St,"y","590.134"),t(L,"xml:space","preserve"),t(L,"id","text4820-9-9-3"),t(L,"x","115.834"),t(L,"y","564.355"),t(L,"fill","#000"),t(L,"fill-opacity","1"),t(L,"stroke","none"),t(L,"class","themed"),t(L,"font-style","normal"),t(L,"font-weight","400"),t(L,"letter-spacing","0"),f(L,"font-size","20px"),f(L,"line-height","125%"),t(L,"transform","scale(.87228 1.14642)"),t(L,"word-spacing","0"),t(se,"id","tspan4822-5-1-52-6"),t(se,"x","356.071"),t(se,"y","568.412"),t(Ft,"id","tspan5043-7"),t(Ft,"x","356.071"),t(Ft,"y","590.191"),t(M,"xml:space","preserve"),t(M,"id","text4820-9-9-3-6"),t(M,"x","356.071"),t(M,"y","568.412"),t(M,"fill","#000"),t(M,"fill-opacity","1"),t(M,"stroke","none"),t(M,"class","themed"),t(M,"font-style","normal"),t(M,"font-weight","400"),t(M,"letter-spacing","0"),f(M,"font-size","20px"),f(M,"line-height","125%"),t(M,"transform","scale(.87228 1.14642)"),t(M,"word-spacing","0"),t(Tt,"id","tspan4822-5-1-52-1"),t(Tt,"x","591.731"),t(Tt,"y","568.658"),t(Ee,"id","tspan5043-71"),t(Ee,"x","591.731"),t(Ee,"y","590.437"),t(b,"xml:space","preserve"),t(b,"id","text4820-9-9-3-4"),t(b,"x","591.731"),t(b,"y","568.658"),t(b,"fill","#000"),t(b,"fill-opacity","1"),t(b,"stroke","none"),t(b,"class","themed"),t(b,"font-style","normal"),t(b,"font-weight","400"),t(b,"letter-spacing","0"),f(b,"font-size","20px"),f(b,"line-height","125%"),t(b,"transform","scale(.87228 1.14642)"),t(b,"word-spacing","0"),t(Z,"id","path5104"),t(Z,"fill","none"),t(Z,"stroke","#000"),t(Z,"stroke-linecap","butt"),t(Z,"stroke-linejoin","miter"),t(Z,"stroke-opacity","1"),t(Z,"stroke-width","1"),t(Z,"d","m115.868 153.023.714 45.712"),t(Z,"class","themed"),t(ut,"id","path5106"),t(ut,"fill","none"),t(ut,"stroke","#000"),t(ut,"stroke-linecap","butt"),t(ut,"stroke-linejoin","miter"),t(ut,"stroke-opacity","1"),t(ut,"stroke-width","1"),t(ut,"d","M310.144 153.023v43.57"),t(ut,"class","themed"),t(At,"id","path5108"),t(At,"fill","none"),t(At,"stroke","#000"),t(At,"stroke-linecap","butt"),t(At,"stroke-linejoin","miter"),t(At,"stroke-opacity","1"),t(At,"stroke-width","1"),t(At,"d","M116.582 292.302v107.137"),t(At,"class","themed"),t(oe,"id","path5112"),t(oe,"fill","none"),t(oe,"stroke","#000"),t(oe,"stroke-linecap","butt"),t(oe,"stroke-linejoin","miter"),t(oe,"stroke-opacity","1"),t(oe,"stroke-width","1"),t(oe,"d","M499.42 153.737v44.998"),t(oe,"class","themed"),t(wt,"id","path5114"),t(wt,"fill","none"),t(wt,"stroke","#000"),t(wt,"stroke-linecap","butt"),t(wt,"stroke-linejoin","miter"),t(wt,"stroke-opacity","1"),t(wt,"stroke-width","1"),t(wt,"d","m309.43 293.73.714 12.142"),t(wt,"class","themed"),t(ye,"id","path5116"),t(ye,"fill","none"),t(ye,"stroke","#000"),t(ye,"stroke-linecap","butt"),t(ye,"stroke-linejoin","miter"),t(ye,"stroke-opacity","1"),t(ye,"stroke-width","1"),t(ye,"d","m499.42 306.587-.714-12.857"),t(ye,"class","themed"),t(ot,"id","path5118"),t(ot,"fill","none"),t(ot,"stroke","#000"),t(ot,"stroke-linecap","butt"),t(ot,"stroke-linejoin","miter"),t(ot,"stroke-opacity","1"),t(ot,"stroke-width","1"),t(ot,"d","m407.996 305.872.714 17.857"),t(ot,"class","themed"),t(_e,"id","path5120"),t(_e,"fill","none"),t(_e,"stroke","#000"),t(_e,"stroke-linecap","butt"),t(_e,"stroke-linejoin","miter"),t(_e,"stroke-opacity","1"),t(_e,"stroke-width","1"),t(_e,"d","m310.144 305.872 189.276.715"),t(_e,"class","themed"),t(kt,"id","path5122"),t(kt,"fill","none"),t(kt,"stroke","#000"),t(kt,"stroke-linecap","butt"),t(kt,"stroke-linejoin","miter"),t(kt,"stroke-opacity","1"),t(kt,"stroke-width","1"),t(kt,"d","m407.282 362.298 1.428 37.141"),t(kt,"class","themed"),t(ve,"id","path5154-7-4"),t(ve,"fill","#070000"),t(ve,"fill-opacity","1"),t(ve,"stroke","#000"),t(ve,"stroke-linecap","butt"),t(ve,"stroke-linejoin","miter"),t(ve,"stroke-opacity","1"),t(ve,"stroke-width","1"),t(ve,"d","M401.176 383.962h13.889l-6.44 16.856"),t(ve,"class","themed"),t(gt,"id","path5154-7-4-9"),t(gt,"fill","#070000"),t(gt,"fill-opacity","1"),t(gt,"stroke","#000"),t(gt,"stroke-linecap","butt"),t(gt,"stroke-linejoin","miter"),t(gt,"stroke-opacity","1"),t(gt,"stroke-width","1"),t(gt,"d","M108.878 382.573h13.889l-6.44 16.856"),t(gt,"class","themed"),t(It,"id","path5154-7-4-1"),t(It,"fill","#070000"),t(It,"fill-opacity","1"),t(It,"stroke","#000"),t(It,"stroke-linecap","butt"),t(It,"stroke-linejoin","miter"),t(It,"stroke-opacity","1"),t(It,"stroke-width","1"),t(It,"d","M300.525 501.413h13.888l-6.439 16.856"),t(It,"class","themed"),t(bt,"id","path5154-7-4-5"),t(bt,"fill","#070000"),t(bt,"fill-opacity","1"),t(bt,"stroke","#000"),t(bt,"stroke-linecap","butt"),t(bt,"stroke-linejoin","miter"),t(bt,"stroke-opacity","1"),t(bt,"stroke-width","1"),t(bt,"d","m315.222 469.284-13.89.015 7.137-16.863"),t(bt,"class","themed"),t(ne,"id","tspan4822-5-5"),t(ne,"x","762.717"),t(ne,"y","233.517"),t(zt,"xml:space","preserve"),t(zt,"id","text4820-9-5"),t(zt,"x","762.717"),t(zt,"y","233.517"),t(zt,"fill","#000"),t(zt,"fill-opacity","1"),t(zt,"stroke","none"),t(zt,"class","themed"),t(zt,"font-style","normal"),t(zt,"font-weight","400"),t(zt,"letter-spacing","0"),f(zt,"line-height","125%"),t(zt,"transform","scale(.87228 1.14642)"),t(zt,"word-spacing","0"),t(Et,"id","path5317"),t(Et,"fill","none"),t(Et,"stroke","#000"),t(Et,"stroke-linecap","butt"),t(Et,"stroke-linejoin","miter"),t(Et,"stroke-opacity","1"),t(Et,"stroke-width","1"),t(Et,"d","m613.676 61.455 21.212 16.162 1.01 160.606 18.182 18.182-18.182 18.182v152.525l-19.192 21.212"),t(Et,"class","themed"),t(me,"id","path3142"),t(me,"fill","none"),t(me,"stroke","#000"),t(me,"stroke-linecap","butt"),t(me,"stroke-linejoin","miter"),t(me,"stroke-opacity","1"),t(me,"stroke-width","1"),t(me,"d","m308.358 452.83-.714 65.353"),t(me,"class","themed"),t(wr,"id","tspan4804-8-2"),t(wr,"x","302.543"),t(wr,"y","94.233"),t(N,"xml:space","preserve"),t(N,"id","text4802-3-0"),t(N,"x","302.543"),t(N,"y","94.233"),t(N,"fill","#000"),t(N,"fill-opacity","1"),t(N,"stroke","none"),t(N,"font-style","normal"),t(N,"font-weight","400"),t(N,"letter-spacing","0"),f(N,"font-size","22px"),f(N,"line-height","125%"),t(N,"transform","scale(.96204 1.03945)"),t(N,"word-spacing","0"),t(Lt,"id","tspan4804-8-8"),t(Lt,"x","500.92"),t(Lt,"y","96.02"),t(F,"xml:space","preserve"),t(F,"id","text4802-3-4"),t(F,"x","500.92"),t(F,"y","96.02"),t(F,"fill","#000"),t(F,"fill-opacity","1"),t(F,"stroke","none"),t(F,"font-style","normal"),t(F,"font-weight","400"),t(F,"letter-spacing","0"),f(F,"font-size","22px"),f(F,"line-height","125%"),t(F,"transform","scale(.96204 1.03945)"),t(F,"word-spacing","0"),t(d,"id","layer1"),t(d,"transform","translate(-25.456 -45.442)"),Qi(k,ms)},m(dt,le){h(dt,k,le),e(k,w),e(w,Bt),e(Bt,jt),e(k,d),e(d,Xt),e(Xt,ue),e(ue,Ue),e(Ue,je),e(je,nt),e(nt,Qt),e(nt,Ct),e(d,Dt),e(d,ge),e(ge,Jt),e(Jt,_t),e(_t,Rt),e(Rt,H),e(H,te),e(H,he),e(d,C),e(d,D),e(d,Q),e(d,lt),e(d,A),e(d,q),e(d,J),e(d,W),e(d,tt),e(d,it),e(d,et),e(d,B),e(d,rt),e(d,pt),e(d,K),e(d,E),e(d,_),e(d,X),e(d,st),e(d,ct),e(d,$),e(d,V),e(V,ee),e(ee,be),e(d,Y),e(Y,fe),e(fe,I),e(d,P),e(P,$t),e($t,Ne),e(d,z),e(z,Vt),e(Vt,ke),e(d,j),e(j,Yt),e(Yt,Ce),e(d,g),e(g,T),e(T,de),e(d,O),e(O,Nt),e(Nt,Fe),e(d,G),e(G,vt),e(vt,He),e(d,R),e(R,mt),e(mt,We),e(d,S),e(S,xt),e(xt,Pt),e(d,L),e(L,re),e(re,Qe),e(L,St),e(St,Je),e(d,M),e(M,se),e(se,tr),e(M,Ft),e(Ft,ae),e(d,b),e(b,Tt),e(Tt,er),e(b,Ee),e(Ee,at),e(d,Z),e(d,ut),e(d,At),e(d,oe),e(d,wt),e(d,ye),e(d,ot),e(d,_e),e(d,kt),e(d,ve),e(d,gt),e(d,It),e(d,bt),e(d,zt),e(zt,ne),e(ne,qr),e(d,Et),e(d,me),e(d,N),e(N,wr),e(wr,rr),e(d,F),e(F,Lt),e(Lt,As)},p(dt,[le]){Qi(k,ms=ih(sr,[{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{id:"raspberrypi_video_api"},{version:"1.1"},{viewBox:"0 0 707.107 659.024"},le&1&&dt[0]]))},i:gi,o:gi,d(dt){dt&&r(k)}}}function kh(Ss,k,w){return Ss.$$set=Bt=>{w(0,k=ei(ei({},k),Ji(Bt)))},k=Ji(k),[k]}class dh extends Yp{constructor(k){super(),Np(this,k,kh,fh,Fp,{})}}const yh={avif:[{src:""+new URL("../assets/examples.a9b965a7.avif",import.meta.url).href,w:600},{src:""+new URL("../assets/examples.16a02448.avif",import.meta.url).href,w:1e3},{src:""+new URL("../assets/examples.df482c56.avif",import.meta.url).href,w:1400}],webp:[{src:""+new URL("../assets/examples.079c9903.webp",import.meta.url).href,w:600},{src:""+new URL("../assets/examples.a05fa244.webp",import.meta.url).href,w:1e3},{src:""+new URL("../assets/examples.6821f1ce.webp",import.meta.url).href,w:1400}],png:[{src:""+new URL("../assets/examples.c76c78b6.png",import.meta.url).href,w:600},{src:""+new URL("../assets/examples.d5e5f696.png",import.meta.url).href,w:1e3},{src:""+new URL("../assets/examples.267b009b.png",import.meta.url).href,w:1400}]},vh={src:""+new URL("../assets/examples.267b009b.png",import.meta.url).href,w:1400,h:783.3333333333334},mh={sources:yh,fallback:vh},xh={avif:[{src:""+new URL("../assets/torus.8ce61482.avif",import.meta.url).href,w:600},{src:""+new URL("../assets/torus.c13e5232.avif",import.meta.url).href,w:1e3},{src:""+new URL("../assets/torus.9d412eab.avif",import.meta.url).href,w:1400}],webp:[{src:""+new URL("../assets/torus.c124f11d.webp",import.meta.url).href,w:600},{src:""+new URL("../assets/torus.60f67e11.webp",import.meta.url).href,w:1e3},{src:""+new URL("../assets/torus.43fc5b1f.webp",import.meta.url).href,w:1400}],jpeg:[{src:""+new URL("../assets/torus.c37f974a.jpg",import.meta.url).href,w:600},{src:""+new URL("../assets/torus.b7380dbe.jpg",import.meta.url).href,w:1e3},{src:""+new URL("../assets/torus.f8607484.jpg",import.meta.url).href,w:1400}]},wh={src:""+new URL("../assets/torus.f8607484.jpg",import.meta.url).href,w:1400,h:1050},gh={sources:xh,fallback:wh},bh={avif:[{src:""+new URL("../assets/arkanoid.a66f68ec.avif",import.meta.url).href,w:400},{src:""+new URL("../assets/arkanoid.9e91b0c1.avif",import.meta.url).href,w:800}],webp:[{src:""+new URL("../assets/arkanoid.579989b3.webp",import.meta.url).href,w:400},{src:""+new URL("../assets/arkanoid.f37e6078.webp",import.meta.url).href,w:800}],png:[{src:""+new URL("../assets/arkanoid.7a3c59d7.png",import.meta.url).href,w:400},{src:""+new URL("../assets/arkanoid.92ab3b24.png",import.meta.url).href,w:800}]},Eh={src:""+new URL("../assets/arkanoid.92ab3b24.png",import.meta.url).href,w:800,h:450},_h={sources:bh,fallback:Eh},Ph={avif:[{src:""+new URL("../assets/pacman.a6d9df40.avif",import.meta.url).href,w:400},{src:""+new URL("../assets/pacman.682adc06.avif",import.meta.url).href,w:800}],webp:[{src:""+new URL("../assets/pacman.5545a119.webp",import.meta.url).href,w:400},{src:""+new URL("../assets/pacman.fb1b47c5.webp",import.meta.url).href,w:800}],png:[{src:""+new URL("../assets/pacman.36895afb.png",import.meta.url).href,w:400},{src:""+new URL("../assets/pacman.1f323cd4.png",import.meta.url).href,w:800}]},zh={src:""+new URL("../assets/pacman.1f323cd4.png",import.meta.url).href,w:800,h:450},Lh={sources:Ph,fallback:zh},Mh={avif:[{src:""+new URL("../assets/space_invaders.4d003604.avif",import.meta.url).href,w:400},{src:""+new URL("../assets/space_invaders.3a907053.avif",import.meta.url).href,w:800}],webp:[{src:""+new URL("../assets/space_invaders.0f9c55b2.webp",import.meta.url).href,w:400},{src:""+new URL("../assets/space_invaders.5cf800d6.webp",import.meta.url).href,w:800}],png:[{src:""+new URL("../assets/space_invaders.a84ad572.png",import.meta.url).href,w:400},{src:""+new URL("../assets/space_invaders.f571c843.png",import.meta.url).href,w:800}]},Gh={src:""+new URL("../assets/space_invaders.f571c843.png",import.meta.url).href,w:800,h:450},Rh={sources:Mh,fallback:Gh};function Sh(Ss){let k,w,Bt,jt,d,Xt,ue,Ue,je=" ",nt,Qt,Ct,Dt,ge,Jt,_t,Rt,H,te,he,C,D,Q,lt,A,q,J,W,tt,it,et,B,rt,pt,K,E,_,X,st,ct,$,V,ee,be,Y,fe,I,P,$t,Ne,z,Vt,ke,j,Yt,Ce,g,T,de,O,Nt,Fe,G,vt,He,R,mt,We,S,xt,Pt,L,re,Qe,St,Je,M,se,tr,Ft,ae,b,Tt,er,Ee,at,Z,ut,At,oe,wt,ye,ot,_e,kt,ve,gt,It,bt,zt,ne,qr,Et,me,N,wr,rr,F,Lt,As,sr,ms,dt,le,la,Br,m,xs,Is,ht,Ke,Us,De,ia,gr,pa,ft,Xr,Ht,$r,ca,ie,fr,ua,Wt,Te,ha,br,Vr,Er,fa,Oe,ka,Kt,ar,da,Yr,ws,Pe,ya,Ze,va,ze,or,ma,Le,_r,rs,pe,Sr,Ar,qe,gs,Be,bs,io,Xe,js,po,Ut,Pr,Yo,zr,No,nr,Ir,Fo,Me,xe,ss,Lr,Ho,as,Cs,lr,Es,Wo,Ot,Ds,Ko,os,Ts,Zo,Nr,Os,Qo,_s,Mt,ns,Ge,qs,xa,Bs,ir,Xs,ls,Zt,Ps,Jo,Mr,tn,pr,Re,wa,cr,$s,zs,en,kr,Gr,rn,$e,Ls,ga,dr,is,ba,Vs,yr,ps,sn,ur,Fr,an,vr,hr,on,ce,cs,Ur,Ve,Ea,Ms,nn,Hr,ln,mr,jr,pn,Se,Ys,_a,us,cn,qt,Ns,un,Wr,Pa,xr,hs,Gs,Gt,Rr,Ba,Fs,co,Ae,fs,Kr,hn,we,Cr,fn,Hs,kn,Dr,dn,Ws,Ks,Zs,yn,za,uo,Tr,x,U,el,La,rl,sl,Ma,al,ol,Ga,nl,ll,vn,Xa,il,mn,$a,pl,xn,ho,bi=`<pre class="shiki   language-c"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// The template used to input uniforms that are automatically added by Shadertoy,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// and to call the Shadertoy shader main method entrypoint.</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">shadertoy_fs_tmpl </span><span style="color: var(--shiki-token-operator)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;precision mediump float;                                             </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;uniform vec3      iResolution; // viewport resolution (in pixels)    </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;uniform float     iTime;       // shader playback time (in seconds)  </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;uniform int       iFrame;      // current frame number               </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;                                                                     </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-token-constant)">%s</span><span style="color: var(--shiki-token-string)">                                                                   </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;                                                                     </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;void main()                                                          </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;&#123;                                                                    </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;    mainImage(gl_FragColor, gl_FragCoord.xy);                        </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;&#125;                                                                    </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// Creates the fragment shader from a local copy of the Shadertoy shader</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-token-function)">load_shader</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">file</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">struct</span><span style="color: var(--shiki-color-text)"> stat statbuf</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">frag</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">int</span><span style="color: var(--shiki-color-text)"> fd</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> ret</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	fd </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">open</span><span style="color: var(--shiki-color-text)">(file</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">fd </span><span style="color: var(--shiki-token-operator)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-function)">err</span><span style="color: var(--shiki-color-text)">(fd</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;could not open &#39;</span><span style="color: var(--shiki-token-constant)">%s</span><span style="color: var(--shiki-token-string)">&#39;&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> file)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-punctuation)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	ret </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">fstat</span><span style="color: var(--shiki-color-text)">(fd</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">&amp;</span><span style="color: var(--shiki-color-text)">statbuf)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">ret </span><span style="color: var(--shiki-token-operator)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-function)">err</span><span style="color: var(--shiki-color-text)">(ret</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;could not stat &#39;</span><span style="color: var(--shiki-token-constant)">%s</span><span style="color: var(--shiki-token-string)">&#39;&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> file)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-punctuation)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">text </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">mmap</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">NULL</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">statbuf</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-member)">st_size</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PROT_READ</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">MAP_PRIVATE</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> fd</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">asprintf</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-operator)">&amp;</span><span style="color: var(--shiki-color-text)">frag</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> shadertoy_fs_tmpl</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> text)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> frag</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-punctuation)">&#125;</span></span></code></pre>`,fo,Va,cl,yt,Ie,Rs=`<pre class="shiki   language-c"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// Holds the playback time and frame number uniform locations</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">GLint iTime</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> iFrame</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// The triangles, to be rasterized by sampling the shader for every pixel of the screen.</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// Quads are not supported by OpenGL ES, so we have to use two triangles.</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> GLfloat vertices</span><span style="color: var(--shiki-token-keyword)">[]</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// First triangle:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	 </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Second triangle:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	 </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	 </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-punctuation)">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// The vertex shader, responsible to position the geometry.</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// We simply need the identity in our case.</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">shadertoy_vs </span><span style="color: var(--shiki-token-operator)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;attribute vec3 position;                </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;void main()                             </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;&#123;                                       </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;    gl_Position = vec4(position, 1.0);  </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;&#125;                                       </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">int</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">init_shadertoy</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">struct</span><span style="color: var(--shiki-token-parameter)"> gbm </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">gbm</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">struct</span><span style="color: var(--shiki-token-parameter)"> egl </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">egl</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">file</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">int</span><span style="color: var(--shiki-color-text)"> ret</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">shadertoy_fs</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	GLuint program</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> vbo</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	GLint iResolution</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Loads the Shadertoy shader from the file system, and creates the fragment shader</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	shadertoy_fs </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">load_shader</span><span style="color: var(--shiki-color-text)">(file)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Compiles the fragment and vertex shaders, and attaches them the returned program</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	ret </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">create_program</span><span style="color: var(--shiki-color-text)">(shadertoy_vs</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> shadertoy_fs)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">ret</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-function)">printf</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string)">&quot;failed to create program</span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-punctuation)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	program </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> ret</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Links the program</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	ret </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">link_program</span><span style="color: var(--shiki-color-text)">(program)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">ret</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-function)">printf</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string)">&quot;failed to link program</span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-punctuation)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Matches the viewport width and height to the screen resolution</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glViewport</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">gbm</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">width</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">gbm</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">height</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glUseProgram</span><span style="color: var(--shiki-color-text)">(program)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Initializes the uniform variables</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	iTime </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">glGetUniformLocation</span><span style="color: var(--shiki-color-text)">(program</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;iTime&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	iFrame </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">glGetUniformLocation</span><span style="color: var(--shiki-color-text)">(program</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;iFrame&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	iResolution </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">glGetUniformLocation</span><span style="color: var(--shiki-color-text)">(program</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;iResolution&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glUniform3f</span><span style="color: var(--shiki-color-text)">(iResolution</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">gbm</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">width</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">gbm</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">height</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Initializes the vertices buffer that holds the triangles data</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glGenBuffers</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">&amp;</span><span style="color: var(--shiki-color-text)">vbo)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glBindBuffer</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">GL_ARRAY_BUFFER</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> vbo)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glBufferData</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">GL_ARRAY_BUFFER</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">sizeof</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">vertices</span><span style="color: var(--shiki-token-punctuation)">),</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">GL_STATIC_DRAW</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glBufferSubData</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">GL_ARRAY_BUFFER</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">sizeof</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">vertices</span><span style="color: var(--shiki-token-punctuation)">),</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">&amp;</span><span style="color: var(--shiki-token-variable)">vertices</span><span style="color: var(--shiki-color-text)">[</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">])</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glVertexAttribPointer</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">GL_FLOAT</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">GL_FALSE</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> GLvoid </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">intptr_t</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glEnableVertexAttribArray</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Provides the rendering method to be called for each frame</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-variable)">egl</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">draw</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> draw_shadertoy</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-punctuation)">&#125;</span></span></code></pre>`,Ya,Na,wn,gn,ko,Ei=`<pre class="shiki   language-c"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// This is called to render every frame</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">void</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">draw_shadertoy</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">uint64_t</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-color-text)">start_time</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">unsigned</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-color-text)">frame</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Sets the playback time uniform in seconds</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glUniform1f</span><span style="color: var(--shiki-color-text)">(iTime</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-function)">get_time_ns</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-color-text)"> start_time</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">double</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">NSEC_PER_SEC</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Sets the current frame number uniform</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glUniform1ui</span><span style="color: var(--shiki-color-text)">(iFrame</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> frame)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Renders the triangles</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glDrawArrays</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">GL_TRIANGLES</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">6</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-punctuation)">&#125;</span></span></code></pre>`,yo,Qs,bn,Ra,ul,En,_n,Js,Zr,ta,vo,Fa,Pn,ea,Sa,hl,Qr,fl,kl,dl,ra,yl,vl,Ha,ml,Wa,zn,Ka,xl,Ln,Za,wl,Mn,mo,ri=`<pre class="shiki   language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ sudo apt update</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Install the build tools</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ sudo apt install gcc make</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Install the required DRM, GBM, EGL and OpenGL ES API headers</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ sudo apt install libdrm</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">dev libgbm</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">dev libegl</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">dev libgles2</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">mesa</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">dev</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Clone the repository</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ git clone https:</span><span style="color: var(--shiki-token-symbol)">//github.com/</span><span style="color: var(--shiki-color-text)">astefanutti</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">kms</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">glsl.git &amp;&amp; cd kms</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">glsl</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Build the glsl CLI binary</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ make</span></span></code></pre>`,xo,sa,gl,Aa,bl,El,wo,ks,_l,go,Pl,bo,Ia,zl,Ll,Gn,Eo,Rn='<pre class="shiki   language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ sudo vi </span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">boot</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">config.txt</span></span></code></pre>',_o,Qa,Ml,Sn,Po,_i=`<pre class="shiki   language-ini"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Required: Enable the firmware/fake DRM/KMS VC4/V3D driver</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">dtoverlay</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string)">vc4-fkms-v3d</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Optional: Increase the memory reserved for the GPU</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">#           16MB disables certain GPU features</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">gpu_mem</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string)">64</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Optional: Avoid GPU down-clocking below 500 MHz that slows FPS down</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">#           Should be set to 250 on the RPi 3</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">v3d_freq_min</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string)">500</span></span></code></pre>`,zo,Ja,Gl,An,Lo,Pi='<pre class="shiki   language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ sudo reboot</span></span></code></pre>',to,aa,Rl,Mo,Sl,Al,In,Go,zi=`<pre class="shiki   language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ .</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">glsl examples</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">stripey_torus_interior.glsl</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">OpenGL ES </span><span style="color: var(--shiki-token-numeric)">2.</span><span style="color: var(--shiki-color-text)">x information:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  version: </span><span style="color: var(--shiki-token-string)">&quot;OpenGL ES 3.1 Mesa 19.3.2&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  shading language version: </span><span style="color: var(--shiki-token-string)">&quot;OpenGL ES GLSL ES 3.10&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  vendor: </span><span style="color: var(--shiki-token-string)">&quot;Broadcom&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  renderer: </span><span style="color: var(--shiki-token-string)">&quot;V3D 4.2&quot;</span></span></code></pre>`,Ro,oa,Il,So,Ul,jl,Un,eo,Cl,jn,Ao,Cn='<pre class="shiki   language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ watch </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">n </span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-color-text)"> vcgencmd measure_clock v3d</span></span></code></pre>',Io,Ye,Ua,ro,Dl,Tl,Dn,ja,Ol,Tn,Uo,ql,Bl,jo,so,Xl,Co,$l,Vl,ds,Yl,Nl,On,na,Fl,qn,tp,ep,Li,Do,ao,To,si,rp,Mi,Jr,sp,ai,ap,op,oi,np,lp,ni,ip,pp,li,cp,up,Gi,Hl,hp,Ri,ii,ph=`<pre class="shiki   language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ sudo apt full</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">upgrade</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ uname </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">a</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">Linux master </span><span style="color: var(--shiki-token-numeric)">5.10</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-numeric)">17</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">v7l</span><span style="color: var(--shiki-token-symbol)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment); font-style: italic">#1403 SMP Mon Feb 22 11:33:35 GMT 2021 armv7l GNU/Linux</span></span></code></pre>`,pi,ts,fp,Bn,kp,dp,Xn,yp,vp,ci,mp,xp,$n,wp,gp,Si,Wl,bp,Ai,es,ui,Ep,_p,hi,Pp,zp,fi,Lp,Mp,ki,Gp,Rp,di,Sp,Ii,Kl,Ap,Ui,Oo,Ip,Vn,Up,jp,ji;return w=new wi({props:{src:gh,alt:"A shader running on the Raspberry Pi"}}),vt=new wi({props:{src:_h,alt:"Arkanoid",sizes:Vp}}),mt=new wi({props:{src:Lh,alt:"“Pacman”",sizes:Vp+"”"}}),xt=new wi({props:{src:Rh,alt:"Space Invaders",sizes:Vp}}),Lt=new hh({}),Pr=new dh({props:{style:"margin: 0 15px 0 60px;"}}),Sa=new wi({props:{src:mh,alt:"Examples"}}),{c(){k=p("figure"),Wn(w.$$.fragment),Bt=y(),jt=p("figcaption"),d=o("A "),Xt=p("a"),ue=o("shader"),Ue=o(" from"),nt=o(je),Qt=y(),Ct=p("a"),Dt=o("Shadertoy"),ge=o(` running fullscreen on the Rapsberry Pi
    official touchscreen`),Jt=y(),_t=p("p"),Rt=p("span"),H=p("strong"),te=o("TL;DR:"),he=o(" If you just want to try it, you can head to the "),C=p("strong"),D=p("a"),Q=o("project repository"),lt=o("."),A=p("span"),q=p("span"),J=o("1"),W=p("em"),tt=o("“How can it be that mathematics, being after all a product of human thought which is independent of experience, is so admirably appropriate to the objects of reality?”"),it=o(" – Albert Einstein."),et=o(` As far as I can remember, I’ve always felt attracted by computer graphics.
I guess I approach the field from the angle of my Mathematics background, as I see it as a universal language between machines, arts, and possibly, nature`),B=p("span"),rt=o("1"),pt=o("."),K=y(),E=p("p"),_=p("span"),X=p("span"),st=o("2"),ct=o("Shadertoy has been created by "),$=p("em"),V=o("Iñigo Quilez"),ee=o(", that publishes very interesting articles, tutorials, and other awesome resources at "),be=p("a"),Y=o("iquilezles.org"),fe=o("."),I=o("As a projection of that language, I find the "),P=p("a"),$t=o("OpenGL Shading Language"),Ne=o(` an interesting case, at the intersection of computing and visual arts, that’s concise and expressive enough to demonstrate human ingenuity and creativity.
You can find me browsing for hours on `),z=p("a"),Vt=o("shadertoy.com"),ke=p("span"),j=o("2"),Yt=o(", mesmerized by the visuals."),Ce=y(),g=p("p"),T=p("span"),de=p("span"),O=o("3"),Nt=o("As crazy as it may sounds, it’s possible to develop games in GLSL (click on the images to try it):"),Fe=p("br"),G=p("a"),Wn(vt.$$.fragment),He=p("br"),R=p("a"),Wn(mt.$$.fragment),We=p("br"),S=p("a"),Wn(xt.$$.fragment),Pt=o("Since I built my "),L=p("a"),re=o("Kubernetes cluster with Rapsberry Pi"),Qe=o(" a year ago, I’ve kept somewhere in a corner of my head, the idea I could use the touchscreen monitor to play with OpenGL, making the coolest cluster ever, to begin with 😎, and turning it eventually, into a small gaming device "),St=p("span"),Je=o("🕹👾"),M=p("span"),se=o("3"),tr=o("."),Ft=y(),ae=p("p"),b=o("So I’ve accepted the mission to run shaders from "),Tt=p("em"),er=o("Shadertoy"),Ee=o(", on the Raspberry Pi!"),at=y(),Z=p("h2"),ut=p("a"),At=l("svg"),oe=l("path"),wt=o("The Linux Graphics Stack"),ye=y(),ot=p("p"),_e=o("I use a Raspberry Pi 4 as my cluster’s "),kt=p("em"),ve=o("main"),gt=o(` node, that’s connected to the touchscreen monitor.
It runs the Lite version of `),It=p("a"),bt=o("Raspberry Pi OS"),zt=o(", which means there is no windowing system available, like X11."),ne=y(),qr=p("p"),Et=o("I also have some Rapsberry Pi 3, so I wanted to have a solution that would work on these as well, and possibly on any other Linux device with GPU hardware."),me=y(),N=p("p"),wr=o("The following diagram gives a good understanding of the Linux graphics stack:"),rr=y(),F=p("figure"),Wn(Lt.$$.fragment),As=y(),sr=p("figcaption"),ms=o("Illustration of the Linux graphics stack"),dt=p("br"),le=p("small"),la=o("(by Shmuel Csaba Otto Traian, CC-BY-SA 4.0)"),Br=y(),m=p("p"),xs=o("With the requirement to run without any windowing system, like X or Wayland, this implies relying either on:"),Is=y(),ht=p("ul"),Ke=p("li"),Us=o("Proprietary device drivers (the "),De=p("a"),ia=o("binary blob"),gr=o(" at the bottom,left-hand side of the illustation),"),pa=y(),ft=p("li"),Xr=p("span"),Ht=p("span"),$r=o("4"),ca=o("The Mesa 3D Graphics Library, is an open source software implementation of the OpenGL specifications. The project also hosts the development of open-source device drivers for graphic chipsets."),ie=o("Or, Mesa"),fr=p("span"),ua=o("4"),Wt=o(" open-source device drivers, using the "),Te=p("a"),ha=o("DRM"),br=o("/"),Vr=p("a"),Er=o("KMS"),fa=o(" Linux kernel sub-system, to implement "),Oe=p("a"),ka=o("mode-setting"),Kt=o(" and "),ar=p("a"),da=o("page-flipping"),Yr=o(" operations."),ws=y(),Pe=p("p"),ya=o("While the later option requires more development work, it promises to work across the "),Ze=p("a"),va=o("range of GPUs"),ze=o(` that have a Mesa driver available.
It also brings the `),or=p("em"),ma=o("a-priori"),Le=o(" benefits of the open-source model, with community and freely accessible documentation."),_r=y(),rs=p("p"),pe=o("Now that the Linux stack is clearer, let’s continue on that mission, and find out what drivers exist for the Raspberry Pi …"),Sr=y(),Ar=p("h2"),qe=p("a"),gs=l("svg"),Be=l("path"),bs=o("The Rapsberry Pi"),io=y(),Xe=p("p"),js=o(`The Raspberry Pi 3 Broadcom BCM2837 SoC includes the VideoCore IV GPU, which could initially be used with the corresponding proprietary driver, and closed-source implementation of the graphics libraries.
While some portions of that stack was released as open-source in 2012, most of the work is still done in the closed-source runtime libraries and GPU code, as depicted in this diagram:`),po=y(),Ut=p("figure"),Wn(Pr.$$.fragment),Yo=y(),zr=p("figcaption"),No=o("The VideoCore IV GPU driver stack"),nr=p("br"),Ir=p("small"),Fo=o("(CC BY-SA 3.0)"),Me=y(),xe=p("p"),ss=p("span"),Lr=p("span"),Ho=o("5"),as=o("These header files and libraries can be found at "),Cs=p("a"),lr=o("https://github.com/raspberrypi/firmware"),Es=o("."),Wo=o("The C header files and libraries for these Broadcom specific implementations are located in the "),Ot=p("code"),Ds=o("/opt/vc/include"),Ko=o(" and "),os=p("code"),Ts=o("/opt/vc/lib"),Zo=o(" directories"),Nr=p("span"),Os=o("5"),Qo=o("."),_s=y(),Mt=p("p"),ns=p("span"),Ge=p("span"),qs=o("6"),xa=o("The Architecture Reference Guide for the Broadcom VideoCore IV GPU is available at "),Bs=p("a"),ir=o("https://docs.broadcom.com/docs/12358545"),Xs=o("."),ls=p("span"),Zt=p("span"),Ps=o("7"),Jo=o("The source code for the userland libraries can be found at "),Mr=p("a"),tn=o("https://github.com/raspberrypi/userland"),pr=o("."),Re=p("span"),wa=p("span"),cr=o("8"),$s=o("The source code for the VC4 driver can be found in the "),zs=p("code"),en=o("src/gallium/drivers/vc4"),kr=o(" directory of the "),Gr=p("a"),rn=o("Mesa repository"),$e=o("."),Ls=o("In 2014, Broadcom and the Raspberry Pi Foundation announced the documentation release for the VideoCore IV 3D graphics processor"),ga=p("span"),dr=o("6"),is=o(", as well as the source release of the graphics stack under a BSD license"),ba=p("span"),Vs=o("7"),yr=o(`.
Few months after the announcement, the source code of a Gallium-based Mesa OpenGL driver for the Broadcom SoC GPU, written from scratch by `),ps=p("em"),sn=o("Eric Anholt"),ur=o(", was committed to the Mesa project"),Fr=p("span"),an=o("8"),vr=o(`.
`),hr=p("strong"),on=o("This paved the way towards open-source drivers for the Rapsberry Pi GPUs"),ce=o("."),cs=y(),Ur=p("p"),Ve=p("span"),Ea=p("span"),Ms=o("9"),nn=o("The source code for the V3D driver can be found in the "),Hr=p("code"),ln=o("src/gallium/drivers/v3d"),mr=o(" directory of the "),jr=p("a"),pn=o("Mesa repository"),Se=o("."),Ys=o("The Raspberry Pi 4 Broadcom BCM2711 SoC (formerly BCM2838) now includes the VideoCore VI GPU, that’s only supported by a Mesa driver"),_a=p("span"),us=o("9"),cn=o(`.
The original Broadcom proprietary driver, specifically designed for the BCM2837 SoC GPU, does not work on the Rapsberry Pi 4.
This Mesa V3D (VideoCore VI) driver `),qt=p("a"),Ns=o("conforms to OpenGL ES 3.1"),un=o(" (as of March 2021), while the VideoCore VI GPU is capable of OpenGL ES 3.2."),Wr=y(),Pa=p("p"),xr=o("After this research phase, and its few historical findings, I’m convinced the way forward to succeed in my mission, is to rely on these open-source drivers …"),hs=y(),Gs=p("h2"),Gt=p("a"),Rr=l("svg"),Ba=l("path"),Fs=o("The Programming"),co=y(),Ae=p("p"),fs=p("span"),Kr=p("span"),hn=o("10"),we=o("The "),Cr=p("a"),fn=o("Linux GPU Driver Developer’s Guide"),Hs=o(" provides an extensive documentation of the DRM/KMS sub-system."),kn=o("With these drivers, running OpenGL or OpenGL ES, without X11, is possible using the "),Dr=p("a"),dn=o("DRM"),Ws=o("/"),Ks=p("a"),Zs=o("KMS"),yn=o(" Linux kernel sub-system"),za=p("span"),uo=o("10"),Tr=o(", in combination with the Mesa Generic Buffer Management (GBM) library."),x=y(),U=p("p"),el=o("Lukily, I stumbled upon "),La=p("a"),rl=o("kmscube"),sl=o(", which is an example application, written in C, that demonstrates how to use the KMS/GBM/EGL APIs to drive bare metal graphics, and provides an implementation of the "),Ma=p("a"),al=o("mode-setting"),ol=o(" and "),Ga=p("a"),nl=o("page-flipping"),ll=o(" operations."),vn=y(),Xa=p("p"),il=o(`The basic idea is to use two triangles, covering the entire screen, that are rasterized by sampling the shader for every pixel.
So that left me with:`),mn=y(),$a=p("p"),pl=o("1) Loading a copy of the Shadertoy shader from the file system:"),xn=y(),ho=new Oa(!1),fo=y(),Va=p("p"),cl=o("2) Compiling the shaders on the GPU, creating the OpenGL program, linking it, and initializing uniform variables and buffers:"),yt=y(),Ie=new Oa(!1),Ya=y(),Na=p("p"),wn=o("3) Finally, rasterizing the triangles, so that every pixel from the screen gets sampled from the fragment shader:"),gn=y(),ko=new Oa(!1),yo=y(),Qs=p("p"),bn=o("The complete source code is available at "),Ra=p("a"),ul=o("https://github.com/astefanutti/kms-glsl"),En=o("."),_n=y(),Js=p("h2"),Zr=p("a"),ta=l("svg"),vo=l("path"),Fa=o("The Fun"),Pn=y(),ea=p("figure"),Wn(Sa.$$.fragment),hl=y(),Qr=p("figcaption"),fl=o("A selection of shaders from Shadertoy, that run successfully on the Rapsberry Pi."),kl=p("br"),dl=o(`
    You can find copies of these in the `),ra=p("code"),yl=o("examples"),vl=o(" directory of the "),Ha=p("a"),ml=o("project repository"),Wa=o("."),zn=y(),Ka=p("p"),xl=o("I’ve successfully run shaders on the RPi 3B+ and RPi 4, with Raspberry Pi OS Lite 2020-12-02, Linux kernel 5.4.79."),Ln=y(),Za=p("p"),wl=o("You can run the following instructions to build the CLI binary:"),Mn=y(),mo=new Oa(!1),xo=y(),sa=p("p"),gl=o(`The VC4/V3D driver kernel module must be activated.
Assuming you’ve installed `),Aa=p("a"),bl=o("Raspberry Pi OS"),El=o(", this can be achieved by running the following commands:"),wo=y(),ks=p("p"),_l=o("1) Edit the "),go=p("code"),Pl=o("/boot/config.txt"),bo=y(),Ia=p("a"),zl=o("file"),Ll=o(", e.g.:"),Gn=y(),Eo=new Oa(!1),_o=y(),Qa=p("p"),Ml=o("2) Set the following properties:"),Sn=y(),Po=new Oa(!1),zo=y(),Ja=p("p"),Gl=o("3) Reboot your Raspberry Pi, so that the changes are taken into account, e.g.:"),An=y(),Lo=new Oa(!1),to=y(),aa=p("p"),Rl=o("You can then run shaders from the "),Mo=p("code"),Sl=o("examples"),Al=o(" directory, e.g.:"),In=y(),Go=new Oa(!1),Ro=y(),oa=p("p"),Il=o("And check that "),So=p("code"),Ul=o('renderer: "V3D 4.2"'),jl=o(" is present in the console output, to confirm it’s setup correctly."),Un=y(),eo=p("p"),Cl=o(`Soon after I started testing, I realized the framerate was fluctuating, and the V3D GPU frequency was dropping well below 500 MHz.
This can be observed by running the following command from a separate terminal:`),jn=y(),Ao=new Oa(!1),Io=y(),Ye=p("p"),Ua=p("span"),ro=p("span"),Dl=o("11"),Tl=o("This is not optimal, as it increases power consumption, while the GPU is idle."),Dn=o("This issue has been reported in "),ja=p("a"),Ol=o("raspberrypi/linux#3935"),Tn=o(`.
It seems the default `),Uo=p("em"),ql=o("governor"),Bl=o(` scales the GPU frequency down, despite instructions being scheduled into the GPU workload queue.
A solution to prevent GPU frequency down-scaling, is to set the minimum frequency, by adding `),jo=p("code"),so=o("v3d_freq_min=500"),Xl=o(" to the "),Co=p("code"),$l=o("/boot/config.txt"),Vl=o(" file"),ds=p("span"),Yl=o("11"),Nl=o("."),On=y(),na=p("p"),Fl=o("This can also be used to "),qn=p("a"),tp=o("overclock"),ep=o(` the GPU.
I’ve successfully tested overclocking the V3D GPU to 600 MHz, which results in a noticeable FPS improvement.`),Li=y(),Do=p("h2"),ao=p("a"),To=l("svg"),si=l("path"),rp=o("The Future"),Mi=y(),Jr=p("p"),sp=o("The "),ai=p("code"),ap=o("vc4-fkms-v3d"),op=o(" driver is known as the "),oi=p("em"),np=o("fake/firmware"),lp=o(` DRM/KMS driver, where the kernel driver still delegates the interactions with the display controller to the firmware.
A newer `),ni=p("code"),ip=o("vc4-kms-v3d"),pp=o(" driver, known as the "),li=p("em"),cp=o("full"),up=o(" DRM/KMS driver, is now available, where the kernel drives the display controller directly."),Gi=y(),Hl=p("p"),hp=o("I gave it a try, after an upgrade to the latest kernel version available (as of March 2021):"),Ri=y(),ii=new Oa(!1),pi=y(),ts=p("p"),fp=o("Unfortunately, I faced the issue reported in "),Bn=p("a"),kp=o("raspberrypi/linux#4020"),dp=o(`.
I plan to try it again, once it’s fixed.
It seems `),Xn=p("a"),yp=o("it may be possible"),vp=o(` to use it in combination with the touchscreen driver for the DSI display.
So it could possibly enable `),ci=p("strong"),mp=o("interactivity"),xp=o(", by feeding the mouse uniform, with touchscreen events from "),$n=p("a"),wp=o("tslib"),gp=o("."),Si=y(),Wl=p("p"),bp=o("There are also few things that, I think, would be logical additions:"),Ai=y(),es=p("ul"),ui=p("li"),Ep=o("Forward keyboard events to the input keyboard texture"),_p=y(),hi=p("li"),Pp=o("Feed audio / video inputs to microphone / camera textures"),zp=y(),fi=p("li"),Lp=o("Package Shadertoy default media files"),Mp=y(),ki=p("li"),Gp=o("Load arbitrary input texture files"),Rp=y(),di=p("li"),Sp=o("…"),Ii=y(),Kl=p("p"),Ap=o(`What started as a toy project, to end year 2020 light-heartedly, turned out to be a small, yet very rewarding, journey into the world of open-source GPU programming.
I think I can safely say it: mission accomplished!`),Ui=y(),Oo=p("p"),Ip=o("I’d be happy to hear your feedback at "),Vn=p("a"),Up=o("https://github.com/astefanutti/kms-glsl"),jp=o("!"),this.h()},l(a){k=c(a,"FIGURE",{class:!0});var u=s(k);Kn(w.$$.fragment,u),Bt=v(u),jt=c(u,"FIGCAPTION",{});var qo=s(jt);d=n(qo,"A "),Xt=c(qo,"A",{href:!0});var Hp=s(Xt);ue=n(Hp,"shader"),Hp.forEach(r),Ue=n(qo," from"),nt=n(qo,je),Qt=v(qo),Ct=c(qo,"A",{href:!0});var Wp=s(Ct);Dt=n(Wp,"Shadertoy"),Wp.forEach(r),ge=n(qo,` running fullscreen on the Rapsberry Pi
    official touchscreen`),qo.forEach(r),u.forEach(r),Jt=v(a),_t=c(a,"P",{});var Zl=s(_t);Rt=c(Zl,"SPAN",{class:!0});var Ci=s(Rt);H=c(Ci,"STRONG",{});var Kp=s(H);te=n(Kp,"TL;DR:"),Kp.forEach(r),he=n(Ci," If you just want to try it, you can head to the "),C=c(Ci,"STRONG",{});var Cp=s(C);D=c(Cp,"A",{href:!0,rel:!0});var Zp=s(D);Q=n(Zp,"project repository"),Zp.forEach(r),lt=n(Cp,"."),Cp.forEach(r),Ci.forEach(r),A=c(Zl,"SPAN",{class:!0});var Di=s(A);q=c(Di,"SPAN",{class:!0});var Qp=s(q);J=n(Qp,"1"),Qp.forEach(r),W=c(Di,"EM",{});var Jp=s(W);tt=n(Jp,"“How can it be that mathematics, being after all a product of human thought which is independent of experience, is so admirably appropriate to the objects of reality?”"),Jp.forEach(r),it=n(Di," – Albert Einstein."),Di.forEach(r),et=n(Zl,` As far as I can remember, I’ve always felt attracted by computer graphics.
I guess I approach the field from the angle of my Mathematics background, as I see it as a universal language between machines, arts, and possibly, nature`),B=c(Zl,"SPAN",{class:!0});var tc=s(B);rt=n(tc,"1"),tc.forEach(r),pt=n(Zl,"."),Zl.forEach(r),K=v(a),E=c(a,"P",{});var Bo=s(E);_=c(Bo,"SPAN",{class:!0});var Yn=s(_);X=c(Yn,"SPAN",{class:!0});var ec=s(X);st=n(ec,"2"),ec.forEach(r),ct=n(Yn,"Shadertoy has been created by "),$=c(Yn,"EM",{});var rc=s($);V=n(rc,"Iñigo Quilez"),rc.forEach(r),ee=n(Yn,", that publishes very interesting articles, tutorials, and other awesome resources at "),be=c(Yn,"A",{href:!0,rel:!0});var sc=s(be);Y=n(sc,"iquilezles.org"),sc.forEach(r),fe=n(Yn,"."),Yn.forEach(r),I=n(Bo,"As a projection of that language, I find the "),P=c(Bo,"A",{href:!0,rel:!0});var ac=s(P);$t=n(ac,"OpenGL Shading Language"),ac.forEach(r),Ne=n(Bo,` an interesting case, at the intersection of computing and visual arts, that’s concise and expressive enough to demonstrate human ingenuity and creativity.
You can find me browsing for hours on `),z=c(Bo,"A",{href:!0,rel:!0});var oc=s(z);Vt=n(oc,"shadertoy.com"),oc.forEach(r),ke=c(Bo,"SPAN",{class:!0});var nc=s(ke);j=n(nc,"2"),nc.forEach(r),Yt=n(Bo,", mesmerized by the visuals."),Bo.forEach(r),Ce=v(a),g=c(a,"P",{});var Xo=s(g);T=c(Xo,"SPAN",{class:!0});var oo=s(T);de=c(oo,"SPAN",{class:!0});var lc=s(de);O=n(lc,"3"),lc.forEach(r),Nt=n(oo,"As crazy as it may sounds, it’s possible to develop games in GLSL (click on the images to try it):"),Fe=c(oo,"BR",{}),G=c(oo,"A",{href:!0,rel:!0});var ic=s(G);Kn(vt.$$.fragment,ic),ic.forEach(r),He=c(oo,"BR",{}),R=c(oo,"A",{href:!0,rel:!0});var pc=s(R);Kn(mt.$$.fragment,pc),pc.forEach(r),We=c(oo,"BR",{}),S=c(oo,"A",{href:!0,rel:!0});var cc=s(S);Kn(xt.$$.fragment,cc),cc.forEach(r),oo.forEach(r),Pt=n(Xo,"Since I built my "),L=c(Xo,"A",{href:!0});var uc=s(L);re=n(uc,"Kubernetes cluster with Rapsberry Pi"),uc.forEach(r),Qe=n(Xo," a year ago, I’ve kept somewhere in a corner of my head, the idea I could use the touchscreen monitor to play with OpenGL, making the coolest cluster ever, to begin with 😎, and turning it eventually, into a small gaming device "),St=c(Xo,"SPAN",{style:!0});var hc=s(St);Je=n(hc,"🕹👾"),hc.forEach(r),M=c(Xo,"SPAN",{class:!0});var fc=s(M);se=n(fc,"3"),fc.forEach(r),tr=n(Xo,"."),Xo.forEach(r),Ft=v(a),ae=c(a,"P",{});var Ti=s(ae);b=n(Ti,"So I’ve accepted the mission to run shaders from "),Tt=c(Ti,"EM",{});var kc=s(Tt);er=n(kc,"Shadertoy"),kc.forEach(r),Ee=n(Ti,", on the Raspberry Pi!"),Ti.forEach(r),at=v(a),Z=c(a,"H2",{id:!0});var Dp=s(Z);ut=c(Dp,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var dc=s(ut);At=i(dc,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var yc=s(At);oe=i(yc,"path",{d:!0}),s(oe).forEach(r),yc.forEach(r),dc.forEach(r),wt=n(Dp,"The Linux Graphics Stack"),Dp.forEach(r),ye=v(a),ot=c(a,"P",{});var Ql=s(ot);_e=n(Ql,"I use a Raspberry Pi 4 as my cluster’s "),kt=c(Ql,"EM",{});var vc=s(kt);ve=n(vc,"main"),vc.forEach(r),gt=n(Ql,` node, that’s connected to the touchscreen monitor.
It runs the Lite version of `),It=c(Ql,"A",{href:!0,rel:!0});var mc=s(It);bt=n(mc,"Raspberry Pi OS"),mc.forEach(r),zt=n(Ql,", which means there is no windowing system available, like X11."),Ql.forEach(r),ne=v(a),qr=c(a,"P",{});var xc=s(qr);Et=n(xc,"I also have some Rapsberry Pi 3, so I wanted to have a solution that would work on these as well, and possibly on any other Linux device with GPU hardware."),xc.forEach(r),me=v(a),N=c(a,"P",{});var wc=s(N);wr=n(wc,"The following diagram gives a good understanding of the Linux graphics stack:"),wc.forEach(r),rr=v(a),F=c(a,"FIGURE",{class:!0});var Oi=s(F);Kn(Lt.$$.fragment,Oi),As=v(Oi),sr=c(Oi,"FIGCAPTION",{});var qi=s(sr);ms=n(qi,"Illustration of the Linux graphics stack"),dt=c(qi,"BR",{}),le=c(qi,"SMALL",{});var gc=s(le);la=n(gc,"(by Shmuel Csaba Otto Traian, CC-BY-SA 4.0)"),gc.forEach(r),qi.forEach(r),Oi.forEach(r),Br=v(a),m=c(a,"P",{});var bc=s(m);xs=n(bc,"With the requirement to run without any windowing system, like X or Wayland, this implies relying either on:"),bc.forEach(r),Is=v(a),ht=c(a,"UL",{});var Bi=s(ht);Ke=c(Bi,"LI",{});var Xi=s(Ke);Us=n(Xi,"Proprietary device drivers (the "),De=c(Xi,"A",{href:!0,rel:!0});var Ec=s(De);ia=n(Ec,"binary blob"),Ec.forEach(r),gr=n(Xi," at the bottom,left-hand side of the illustation),"),Xi.forEach(r),pa=v(Bi),ft=c(Bi,"LI",{});var ys=s(ft);Xr=c(ys,"SPAN",{class:!0});var Tp=s(Xr);Ht=c(Tp,"SPAN",{class:!0});var _c=s(Ht);$r=n(_c,"4"),_c.forEach(r),ca=n(Tp,"The Mesa 3D Graphics Library, is an open source software implementation of the OpenGL specifications. The project also hosts the development of open-source device drivers for graphic chipsets."),Tp.forEach(r),ie=n(ys,"Or, Mesa"),fr=c(ys,"SPAN",{class:!0});var Pc=s(fr);ua=n(Pc,"4"),Pc.forEach(r),Wt=n(ys," open-source device drivers, using the "),Te=c(ys,"A",{href:!0,rel:!0});var zc=s(Te);ha=n(zc,"DRM"),zc.forEach(r),br=n(ys,"/"),Vr=c(ys,"A",{href:!0,rel:!0});var Lc=s(Vr);Er=n(Lc,"KMS"),Lc.forEach(r),fa=n(ys," Linux kernel sub-system, to implement "),Oe=c(ys,"A",{href:!0,rel:!0});var Mc=s(Oe);ka=n(Mc,"mode-setting"),Mc.forEach(r),Kt=n(ys," and "),ar=c(ys,"A",{href:!0,rel:!0});var Gc=s(ar);da=n(Gc,"page-flipping"),Gc.forEach(r),Yr=n(ys," operations."),ys.forEach(r),Bi.forEach(r),ws=v(a),Pe=c(a,"P",{});var Jl=s(Pe);ya=n(Jl,"While the later option requires more development work, it promises to work across the "),Ze=c(Jl,"A",{href:!0,rel:!0});var Rc=s(Ze);va=n(Rc,"range of GPUs"),Rc.forEach(r),ze=n(Jl,` that have a Mesa driver available.
It also brings the `),or=c(Jl,"EM",{});var Sc=s(or);ma=n(Sc,"a-priori"),Sc.forEach(r),Le=n(Jl," benefits of the open-source model, with community and freely accessible documentation."),Jl.forEach(r),_r=v(a),rs=c(a,"P",{});var Ac=s(rs);pe=n(Ac,"Now that the Linux stack is clearer, let’s continue on that mission, and find out what drivers exist for the Raspberry Pi …"),Ac.forEach(r),Sr=v(a),Ar=c(a,"H2",{id:!0});var Op=s(Ar);qe=c(Op,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var Ic=s(qe);gs=i(Ic,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var Uc=s(gs);Be=i(Uc,"path",{d:!0}),s(Be).forEach(r),Uc.forEach(r),Ic.forEach(r),bs=n(Op,"The Rapsberry Pi"),Op.forEach(r),io=v(a),Xe=c(a,"P",{});var jc=s(Xe);js=n(jc,`The Raspberry Pi 3 Broadcom BCM2837 SoC includes the VideoCore IV GPU, which could initially be used with the corresponding proprietary driver, and closed-source implementation of the graphics libraries.
While some portions of that stack was released as open-source in 2012, most of the work is still done in the closed-source runtime libraries and GPU code, as depicted in this diagram:`),jc.forEach(r),po=v(a),Ut=c(a,"FIGURE",{});var $i=s(Ut);Kn(Pr.$$.fragment,$i),Yo=v($i),zr=c($i,"FIGCAPTION",{});var Vi=s(zr);No=n(Vi,"The VideoCore IV GPU driver stack"),nr=c(Vi,"BR",{}),Ir=c(Vi,"SMALL",{});var Cc=s(Ir);Fo=n(Cc,"(CC BY-SA 3.0)"),Cc.forEach(r),Vi.forEach(r),$i.forEach(r),Me=v(a),xe=c(a,"P",{});var no=s(xe);ss=c(no,"SPAN",{class:!0});var yi=s(ss);Lr=c(yi,"SPAN",{class:!0});var Dc=s(Lr);Ho=n(Dc,"5"),Dc.forEach(r),as=n(yi,"These header files and libraries can be found at "),Cs=c(yi,"A",{href:!0,rel:!0});var Tc=s(Cs);lr=n(Tc,"https://github.com/raspberrypi/firmware"),Tc.forEach(r),Es=n(yi,"."),yi.forEach(r),Wo=n(no,"The C header files and libraries for these Broadcom specific implementations are located in the "),Ot=c(no,"CODE",{});var Oc=s(Ot);Ds=n(Oc,"/opt/vc/include"),Oc.forEach(r),Ko=n(no," and "),os=c(no,"CODE",{});var qc=s(os);Ts=n(qc,"/opt/vc/lib"),qc.forEach(r),Zo=n(no," directories"),Nr=c(no,"SPAN",{class:!0});var Bc=s(Nr);Os=n(Bc,"5"),Bc.forEach(r),Qo=n(no,"."),no.forEach(r),_s=v(a),Mt=c(a,"P",{});var Or=s(Mt);ns=c(Or,"SPAN",{class:!0});var vi=s(ns);Ge=c(vi,"SPAN",{class:!0});var Xc=s(Ge);qs=n(Xc,"6"),Xc.forEach(r),xa=n(vi,"The Architecture Reference Guide for the Broadcom VideoCore IV GPU is available at "),Bs=c(vi,"A",{href:!0,rel:!0});var $c=s(Bs);ir=n($c,"https://docs.broadcom.com/docs/12358545"),$c.forEach(r),Xs=n(vi,"."),vi.forEach(r),ls=c(Or,"SPAN",{class:!0});var mi=s(ls);Zt=c(mi,"SPAN",{class:!0});var Vc=s(Zt);Ps=n(Vc,"7"),Vc.forEach(r),Jo=n(mi,"The source code for the userland libraries can be found at "),Mr=c(mi,"A",{href:!0,rel:!0});var Yc=s(Mr);tn=n(Yc,"https://github.com/raspberrypi/userland"),Yc.forEach(r),pr=n(mi,"."),mi.forEach(r),Re=c(Or,"SPAN",{class:!0});var Nn=s(Re);wa=c(Nn,"SPAN",{class:!0});var Nc=s(wa);cr=n(Nc,"8"),Nc.forEach(r),$s=n(Nn,"The source code for the VC4 driver can be found in the "),zs=c(Nn,"CODE",{});var Fc=s(zs);en=n(Fc,"src/gallium/drivers/vc4"),Fc.forEach(r),kr=n(Nn," directory of the "),Gr=c(Nn,"A",{href:!0,rel:!0});var Hc=s(Gr);rn=n(Hc,"Mesa repository"),Hc.forEach(r),$e=n(Nn,"."),Nn.forEach(r),Ls=n(Or,"In 2014, Broadcom and the Raspberry Pi Foundation announced the documentation release for the VideoCore IV 3D graphics processor"),ga=c(Or,"SPAN",{class:!0});var Wc=s(ga);dr=n(Wc,"6"),Wc.forEach(r),is=n(Or,", as well as the source release of the graphics stack under a BSD license"),ba=c(Or,"SPAN",{class:!0});var Kc=s(ba);Vs=n(Kc,"7"),Kc.forEach(r),yr=n(Or,`.
Few months after the announcement, the source code of a Gallium-based Mesa OpenGL driver for the Broadcom SoC GPU, written from scratch by `),ps=c(Or,"EM",{});var Zc=s(ps);sn=n(Zc,"Eric Anholt"),Zc.forEach(r),ur=n(Or,", was committed to the Mesa project"),Fr=c(Or,"SPAN",{class:!0});var Qc=s(Fr);an=n(Qc,"8"),Qc.forEach(r),vr=n(Or,`.
`),hr=c(Or,"STRONG",{});var Jc=s(hr);on=n(Jc,"This paved the way towards open-source drivers for the Rapsberry Pi GPUs"),Jc.forEach(r),ce=n(Or,"."),Or.forEach(r),cs=v(a),Ur=c(a,"P",{});var Fn=s(Ur);Ve=c(Fn,"SPAN",{class:!0});var Hn=s(Ve);Ea=c(Hn,"SPAN",{class:!0});var tu=s(Ea);Ms=n(tu,"9"),tu.forEach(r),nn=n(Hn,"The source code for the V3D driver can be found in the "),Hr=c(Hn,"CODE",{});var eu=s(Hr);ln=n(eu,"src/gallium/drivers/v3d"),eu.forEach(r),mr=n(Hn," directory of the "),jr=c(Hn,"A",{href:!0,rel:!0});var ru=s(jr);pn=n(ru,"Mesa repository"),ru.forEach(r),Se=n(Hn,"."),Hn.forEach(r),Ys=n(Fn,"The Raspberry Pi 4 Broadcom BCM2711 SoC (formerly BCM2838) now includes the VideoCore VI GPU, that’s only supported by a Mesa driver"),_a=c(Fn,"SPAN",{class:!0});var su=s(_a);us=n(su,"9"),su.forEach(r),cn=n(Fn,`.
The original Broadcom proprietary driver, specifically designed for the BCM2837 SoC GPU, does not work on the Rapsberry Pi 4.
This Mesa V3D (VideoCore VI) driver `),qt=c(Fn,"A",{href:!0,rel:!0});var au=s(qt);Ns=n(au,"conforms to OpenGL ES 3.1"),au.forEach(r),un=n(Fn," (as of March 2021), while the VideoCore VI GPU is capable of OpenGL ES 3.2."),Fn.forEach(r),Wr=v(a),Pa=c(a,"P",{});var ou=s(Pa);xr=n(ou,"After this research phase, and its few historical findings, I’m convinced the way forward to succeed in my mission, is to rely on these open-source drivers …"),ou.forEach(r),hs=v(a),Gs=c(a,"H2",{id:!0});var qp=s(Gs);Gt=c(qp,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var nu=s(Gt);Rr=i(nu,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var lu=s(Rr);Ba=i(lu,"path",{d:!0}),s(Ba).forEach(r),lu.forEach(r),nu.forEach(r),Fs=n(qp,"The Programming"),qp.forEach(r),co=v(a),Ae=c(a,"P",{});var lo=s(Ae);fs=c(lo,"SPAN",{class:!0});var xi=s(fs);Kr=c(xi,"SPAN",{class:!0});var iu=s(Kr);hn=n(iu,"10"),iu.forEach(r),we=n(xi,"The "),Cr=c(xi,"A",{href:!0,rel:!0});var pu=s(Cr);fn=n(pu,"Linux GPU Driver Developer’s Guide"),pu.forEach(r),Hs=n(xi," provides an extensive documentation of the DRM/KMS sub-system."),xi.forEach(r),kn=n(lo,"With these drivers, running OpenGL or OpenGL ES, without X11, is possible using the "),Dr=c(lo,"A",{href:!0,rel:!0});var cu=s(Dr);dn=n(cu,"DRM"),cu.forEach(r),Ws=n(lo,"/"),Ks=c(lo,"A",{href:!0,rel:!0});var uu=s(Ks);Zs=n(uu,"KMS"),uu.forEach(r),yn=n(lo," Linux kernel sub-system"),za=c(lo,"SPAN",{class:!0});var hu=s(za);uo=n(hu,"10"),hu.forEach(r),Tr=n(lo,", in combination with the Mesa Generic Buffer Management (GBM) library."),lo.forEach(r),x=v(a),U=c(a,"P",{});var $o=s(U);el=n($o,"Lukily, I stumbled upon "),La=c($o,"A",{href:!0,rel:!0});var fu=s(La);rl=n(fu,"kmscube"),fu.forEach(r),sl=n($o,", which is an example application, written in C, that demonstrates how to use the KMS/GBM/EGL APIs to drive bare metal graphics, and provides an implementation of the "),Ma=c($o,"A",{href:!0,rel:!0});var ku=s(Ma);al=n(ku,"mode-setting"),ku.forEach(r),ol=n($o," and "),Ga=c($o,"A",{href:!0,rel:!0});var du=s(Ga);nl=n(du,"page-flipping"),du.forEach(r),ll=n($o," operations."),$o.forEach(r),vn=v(a),Xa=c(a,"P",{});var yu=s(Xa);il=n(yu,`The basic idea is to use two triangles, covering the entire screen, that are rasterized by sampling the shader for every pixel.
So that left me with:`),yu.forEach(r),mn=v(a),$a=c(a,"P",{});var vu=s($a);pl=n(vu,"1) Loading a copy of the Shadertoy shader from the file system:"),vu.forEach(r),xn=v(a),ho=qa(a,!1),fo=v(a),Va=c(a,"P",{});var mu=s(Va);cl=n(mu,"2) Compiling the shaders on the GPU, creating the OpenGL program, linking it, and initializing uniform variables and buffers:"),mu.forEach(r),yt=v(a),Ie=qa(a,!1),Ya=v(a),Na=c(a,"P",{});var xu=s(Na);wn=n(xu,"3) Finally, rasterizing the triangles, so that every pixel from the screen gets sampled from the fragment shader:"),xu.forEach(r),gn=v(a),ko=qa(a,!1),yo=v(a),Qs=c(a,"P",{});var Yi=s(Qs);bn=n(Yi,"The complete source code is available at "),Ra=c(Yi,"A",{href:!0,rel:!0});var wu=s(Ra);ul=n(wu,"https://github.com/astefanutti/kms-glsl"),wu.forEach(r),En=n(Yi,"."),Yi.forEach(r),_n=v(a),Js=c(a,"H2",{id:!0});var Bp=s(Js);Zr=c(Bp,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var gu=s(Zr);ta=i(gu,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var bu=s(ta);vo=i(bu,"path",{d:!0}),s(vo).forEach(r),bu.forEach(r),gu.forEach(r),Fa=n(Bp,"The Fun"),Bp.forEach(r),Pn=v(a),ea=c(a,"FIGURE",{});var Ni=s(ea);Kn(Sa.$$.fragment,Ni),hl=v(Ni),Qr=c(Ni,"FIGCAPTION",{});var Vo=s(Qr);fl=n(Vo,"A selection of shaders from Shadertoy, that run successfully on the Rapsberry Pi."),kl=c(Vo,"BR",{}),dl=n(Vo,`
    You can find copies of these in the `),ra=c(Vo,"CODE",{});var Eu=s(ra);yl=n(Eu,"examples"),Eu.forEach(r),vl=n(Vo," directory of the "),Ha=c(Vo,"A",{href:!0});var _u=s(Ha);ml=n(_u,"project repository"),_u.forEach(r),Wa=n(Vo,"."),Vo.forEach(r),Ni.forEach(r),zn=v(a),Ka=c(a,"P",{});var Pu=s(Ka);xl=n(Pu,"I’ve successfully run shaders on the RPi 3B+ and RPi 4, with Raspberry Pi OS Lite 2020-12-02, Linux kernel 5.4.79."),Pu.forEach(r),Ln=v(a),Za=c(a,"P",{});var zu=s(Za);wl=n(zu,"You can run the following instructions to build the CLI binary:"),zu.forEach(r),Mn=v(a),mo=qa(a,!1),xo=v(a),sa=c(a,"P",{});var Fi=s(sa);gl=n(Fi,`The VC4/V3D driver kernel module must be activated.
Assuming you’ve installed `),Aa=c(Fi,"A",{href:!0,rel:!0});var Lu=s(Aa);bl=n(Lu,"Raspberry Pi OS"),Lu.forEach(r),El=n(Fi,", this can be achieved by running the following commands:"),Fi.forEach(r),wo=v(a),ks=c(a,"P",{});var ti=s(ks);_l=n(ti,"1) Edit the "),go=c(ti,"CODE",{});var Mu=s(go);Pl=n(Mu,"/boot/config.txt"),Mu.forEach(r),bo=v(ti),Ia=c(ti,"A",{href:!0,rel:!0});var Gu=s(Ia);zl=n(Gu,"file"),Gu.forEach(r),Ll=n(ti,", e.g.:"),ti.forEach(r),Gn=v(a),Eo=qa(a,!1),_o=v(a),Qa=c(a,"P",{});var Ru=s(Qa);Ml=n(Ru,"2) Set the following properties:"),Ru.forEach(r),Sn=v(a),Po=qa(a,!1),zo=v(a),Ja=c(a,"P",{});var Su=s(Ja);Gl=n(Su,"3) Reboot your Raspberry Pi, so that the changes are taken into account, e.g.:"),Su.forEach(r),An=v(a),Lo=qa(a,!1),to=v(a),aa=c(a,"P",{});var Hi=s(aa);Rl=n(Hi,"You can then run shaders from the "),Mo=c(Hi,"CODE",{});var Au=s(Mo);Sl=n(Au,"examples"),Au.forEach(r),Al=n(Hi," directory, e.g.:"),Hi.forEach(r),In=v(a),Go=qa(a,!1),Ro=v(a),oa=c(a,"P",{});var Wi=s(oa);Il=n(Wi,"And check that "),So=c(Wi,"CODE",{});var Iu=s(So);Ul=n(Iu,'renderer: "V3D 4.2"'),Iu.forEach(r),jl=n(Wi," is present in the console output, to confirm it’s setup correctly."),Wi.forEach(r),Un=v(a),eo=c(a,"P",{});var Uu=s(eo);Cl=n(Uu,`Soon after I started testing, I realized the framerate was fluctuating, and the V3D GPU frequency was dropping well below 500 MHz.
This can be observed by running the following command from a separate terminal:`),Uu.forEach(r),jn=v(a),Ao=qa(a,!1),Io=v(a),Ye=c(a,"P",{});var vs=s(Ye);Ua=c(vs,"SPAN",{class:!0});var Xp=s(Ua);ro=c(Xp,"SPAN",{class:!0});var ju=s(ro);Dl=n(ju,"11"),ju.forEach(r),Tl=n(Xp,"This is not optimal, as it increases power consumption, while the GPU is idle."),Xp.forEach(r),Dn=n(vs,"This issue has been reported in "),ja=c(vs,"A",{href:!0,rel:!0});var Cu=s(ja);Ol=n(Cu,"raspberrypi/linux#3935"),Cu.forEach(r),Tn=n(vs,`.
It seems the default `),Uo=c(vs,"EM",{});var Du=s(Uo);ql=n(Du,"governor"),Du.forEach(r),Bl=n(vs,` scales the GPU frequency down, despite instructions being scheduled into the GPU workload queue.
A solution to prevent GPU frequency down-scaling, is to set the minimum frequency, by adding `),jo=c(vs,"CODE",{});var Tu=s(jo);so=n(Tu,"v3d_freq_min=500"),Tu.forEach(r),Xl=n(vs," to the "),Co=c(vs,"CODE",{});var Ou=s(Co);$l=n(Ou,"/boot/config.txt"),Ou.forEach(r),Vl=n(vs," file"),ds=c(vs,"SPAN",{class:!0});var qu=s(ds);Yl=n(qu,"11"),qu.forEach(r),Nl=n(vs,"."),vs.forEach(r),On=v(a),na=c(a,"P",{});var Ki=s(na);Fl=n(Ki,"This can also be used to "),qn=c(Ki,"A",{href:!0,rel:!0});var Bu=s(qn);tp=n(Bu,"overclock"),Bu.forEach(r),ep=n(Ki,` the GPU.
I’ve successfully tested overclocking the V3D GPU to 600 MHz, which results in a noticeable FPS improvement.`),Ki.forEach(r),Li=v(a),Do=c(a,"H2",{id:!0});var $p=s(Do);ao=c($p,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var Xu=s(ao);To=i(Xu,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var $u=s(To);si=i($u,"path",{d:!0}),s(si).forEach(r),$u.forEach(r),Xu.forEach(r),rp=n($p,"The Future"),$p.forEach(r),Mi=v(a),Jr=c(a,"P",{});var Ca=s(Jr);sp=n(Ca,"The "),ai=c(Ca,"CODE",{});var Vu=s(ai);ap=n(Vu,"vc4-fkms-v3d"),Vu.forEach(r),op=n(Ca," driver is known as the "),oi=c(Ca,"EM",{});var Yu=s(oi);np=n(Yu,"fake/firmware"),Yu.forEach(r),lp=n(Ca,` DRM/KMS driver, where the kernel driver still delegates the interactions with the display controller to the firmware.
A newer `),ni=c(Ca,"CODE",{});var Nu=s(ni);ip=n(Nu,"vc4-kms-v3d"),Nu.forEach(r),pp=n(Ca," driver, known as the "),li=c(Ca,"EM",{});var Fu=s(li);cp=n(Fu,"full"),Fu.forEach(r),up=n(Ca," DRM/KMS driver, is now available, where the kernel drives the display controller directly."),Ca.forEach(r),Gi=v(a),Hl=c(a,"P",{});var Hu=s(Hl);hp=n(Hu,"I gave it a try, after an upgrade to the latest kernel version available (as of March 2021):"),Hu.forEach(r),Ri=v(a),ii=qa(a,!1),pi=v(a),ts=c(a,"P",{});var Da=s(ts);fp=n(Da,"Unfortunately, I faced the issue reported in "),Bn=c(Da,"A",{href:!0,rel:!0});var Wu=s(Bn);kp=n(Wu,"raspberrypi/linux#4020"),Wu.forEach(r),dp=n(Da,`.
I plan to try it again, once it’s fixed.
It seems `),Xn=c(Da,"A",{href:!0,rel:!0});var Ku=s(Xn);yp=n(Ku,"it may be possible"),Ku.forEach(r),vp=n(Da,` to use it in combination with the touchscreen driver for the DSI display.
So it could possibly enable `),ci=c(Da,"STRONG",{});var Zu=s(ci);mp=n(Zu,"interactivity"),Zu.forEach(r),xp=n(Da,", by feeding the mouse uniform, with touchscreen events from "),$n=c(Da,"A",{href:!0,rel:!0});var Qu=s($n);wp=n(Qu,"tslib"),Qu.forEach(r),gp=n(Da,"."),Da.forEach(r),Si=v(a),Wl=c(a,"P",{});var Ju=s(Wl);bp=n(Ju,"There are also few things that, I think, would be logical additions:"),Ju.forEach(r),Ai=v(a),es=c(a,"UL",{});var Ta=s(es);ui=c(Ta,"LI",{});var th=s(ui);Ep=n(th,"Forward keyboard events to the input keyboard texture"),th.forEach(r),_p=v(Ta),hi=c(Ta,"LI",{});var eh=s(hi);Pp=n(eh,"Feed audio / video inputs to microphone / camera textures"),eh.forEach(r),zp=v(Ta),fi=c(Ta,"LI",{});var rh=s(fi);Lp=n(rh,"Package Shadertoy default media files"),rh.forEach(r),Mp=v(Ta),ki=c(Ta,"LI",{});var sh=s(ki);Gp=n(sh,"Load arbitrary input texture files"),sh.forEach(r),Rp=v(Ta),di=c(Ta,"LI",{});var ah=s(di);Sp=n(ah,"…"),ah.forEach(r),Ta.forEach(r),Ii=v(a),Kl=c(a,"P",{});var oh=s(Kl);Ap=n(oh,`What started as a toy project, to end year 2020 light-heartedly, turned out to be a small, yet very rewarding, journey into the world of open-source GPU programming.
I think I can safely say it: mission accomplished!`),oh.forEach(r),Ui=v(a),Oo=c(a,"P",{});var Zi=s(Oo);Ip=n(Zi,"I’d be happy to hear your feedback at "),Vn=c(Zi,"A",{href:!0,rel:!0});var nh=s(Vn);Up=n(nh,"https://github.com/astefanutti/kms-glsl"),nh.forEach(r),jp=n(Zi,"!"),Zi.forEach(r),this.h()},h(){t(Xt,"href","https://www.shadertoy.com/view/MsX3Wj"),t(Ct,"href","https://www.shadertoy.com"),t(k,"class","fullwidth"),t(D,"href","https://github.com/astefanutti/kms-glsl"),t(D,"rel","nofollow"),t(Rt,"class","note marginnote"),t(q,"class","sidenote-number"),t(A,"class","note sidenote"),t(B,"class","sidenote-number"),t(X,"class","sidenote-number"),t(be,"href","https://www.iquilezles.org"),t(be,"rel","nofollow"),t(_,"class","note sidenote"),t(P,"href","https://en.wikipedia.org/wiki/OpenGL_Shading_Language"),t(P,"rel","nofollow"),t(z,"href","https://www.shadertoy.com/"),t(z,"rel","nofollow"),t(ke,"class","sidenote-number"),t(de,"class","sidenote-number"),t(G,"href","https://www.shadertoy.com/view/MddGzf"),t(G,"rel","nofollow"),t(R,"href","https://www.shadertoy.com/view/Ms3XWN"),t(R,"rel","nofollow"),t(S,"href","https://www.shadertoy.com/view/wllSRs"),t(S,"rel","nofollow"),t(T,"class","note sidenote"),t(L,"href","/anatomy-of-my-kubernetes-cluster"),f(St,"white-space","nowrap"),t(M,"class","sidenote-number"),t(oe,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(At,"viewBox","0 0 16 16"),t(At,"version","1.1"),t(At,"aria-hidden","true"),t(ut,"class","anchor"),t(ut,"aria-hidden","true"),t(ut,"tabindex","-1"),t(ut,"href","#the-linux-graphics-stack"),t(Z,"id","the-linux-graphics-stack"),t(It,"href","https://www.raspberrypi.org/software/operating-systems"),t(It,"rel","nofollow"),t(F,"class","liquid"),t(De,"href","https://en.wikipedia.org/wiki/Proprietary_device_driver"),t(De,"rel","nofollow"),t(Ht,"class","sidenote-number"),t(Xr,"class","note sidenote"),t(fr,"class","sidenote-number"),t(Te,"href","https://en.wikipedia.org/wiki/Direct_Rendering_Manager"),t(Te,"rel","nofollow"),t(Vr,"href","https://en.wikipedia.org/wiki/Direct_Rendering_Manager#Kernel_Mode_Setting"),t(Vr,"rel","nofollow"),t(Oe,"href","https://en.wikipedia.org/wiki/Mode-setting"),t(Oe,"rel","nofollow"),t(ar,"href","https://en.wikipedia.org/wiki/Multiple_buffering#Page_flipping"),t(ar,"rel","nofollow"),t(Ze,"href","https://docs.mesa3d.org/systems.html"),t(Ze,"rel","nofollow"),t(Be,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(gs,"viewBox","0 0 16 16"),t(gs,"version","1.1"),t(gs,"aria-hidden","true"),t(qe,"class","anchor"),t(qe,"aria-hidden","true"),t(qe,"tabindex","-1"),t(qe,"href","#the-rapsberry-pi"),t(Ar,"id","the-rapsberry-pi"),t(Lr,"class","sidenote-number"),t(Cs,"href","https://github.com/raspberrypi/firmware"),t(Cs,"rel","nofollow"),t(ss,"class","note sidenote"),t(Nr,"class","sidenote-number"),t(Ge,"class","sidenote-number"),t(Bs,"href","https://docs.broadcom.com/docs/12358545"),t(Bs,"rel","nofollow"),t(ns,"class","note sidenote"),t(Zt,"class","sidenote-number"),t(Mr,"href","https://github.com/raspberrypi/userland"),t(Mr,"rel","nofollow"),t(ls,"class","note sidenote"),t(wa,"class","sidenote-number"),t(Gr,"href","https://gitlab.freedesktop.org/mesa/mesa"),t(Gr,"rel","nofollow"),t(Re,"class","note sidenote"),t(ga,"class","sidenote-number"),t(ba,"class","sidenote-number"),t(Fr,"class","sidenote-number"),t(Ea,"class","sidenote-number"),t(jr,"href","https://gitlab.freedesktop.org/mesa/mesa"),t(jr,"rel","nofollow"),t(Ve,"class","note sidenote"),t(_a,"class","sidenote-number"),t(qt,"href","https://www.khronos.org/conformance/adopters/conformant-products/opengles#submission_882"),t(qt,"rel","nofollow"),t(Ba,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(Rr,"viewBox","0 0 16 16"),t(Rr,"version","1.1"),t(Rr,"aria-hidden","true"),t(Gt,"class","anchor"),t(Gt,"aria-hidden","true"),t(Gt,"tabindex","-1"),t(Gt,"href","#the-programming"),t(Gs,"id","the-programming"),t(Kr,"class","sidenote-number"),t(Cr,"href","https://www.kernel.org/doc/html/v5.10/gpu/introduction.html"),t(Cr,"rel","nofollow"),t(fs,"class","note sidenote"),t(Dr,"href","https://en.wikipedia.org/wiki/Direct_Rendering_Manager"),t(Dr,"rel","nofollow"),t(Ks,"href","https://en.wikipedia.org/wiki/Direct_Rendering_Manager#Kernel_Mode_Setting"),t(Ks,"rel","nofollow"),t(za,"class","sidenote-number"),t(La,"href","https://gitlab.freedesktop.org/mesa/kmscube/"),t(La,"rel","nofollow"),t(Ma,"href","https://en.wikipedia.org/wiki/Mode-setting"),t(Ma,"rel","nofollow"),t(Ga,"href","https://en.wikipedia.org/wiki/Multiple_buffering#Page_flipping"),t(Ga,"rel","nofollow"),ho.a=fo,Ie.a=Ya,ko.a=yo,t(Ra,"href","https://github.com/astefanutti/kms-glsl"),t(Ra,"rel","nofollow"),t(vo,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(ta,"viewBox","0 0 16 16"),t(ta,"version","1.1"),t(ta,"aria-hidden","true"),t(Zr,"class","anchor"),t(Zr,"aria-hidden","true"),t(Zr,"tabindex","-1"),t(Zr,"href","#the-fun"),t(Js,"id","the-fun"),t(Ha,"href","https://github.com/astefanutti/kms-glsl"),mo.a=xo,t(Aa,"href","https://www.raspberrypi.org/software/operating-systems"),t(Aa,"rel","nofollow"),t(Ia,"href","https://www.raspberrypi.org/documentation/configuration/config-txt/"),t(Ia,"rel","nofollow"),Eo.a=_o,Po.a=zo,Lo.a=to,Go.a=Ro,Ao.a=Io,t(ro,"class","sidenote-number"),t(Ua,"class","note sidenote"),t(ja,"href","https://github.com/raspberrypi/linux/issues/3935"),t(ja,"rel","nofollow"),t(ds,"class","sidenote-number"),t(qn,"href","https://www.raspberrypi.org/documentation/configuration/config-txt/overclocking.md"),t(qn,"rel","nofollow"),t(si,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(To,"viewBox","0 0 16 16"),t(To,"version","1.1"),t(To,"aria-hidden","true"),t(ao,"class","anchor"),t(ao,"aria-hidden","true"),t(ao,"tabindex","-1"),t(ao,"href","#the-future"),t(Do,"id","the-future"),ii.a=pi,t(Bn,"href","https://github.com/raspberrypi/linux/issues/4020"),t(Bn,"rel","nofollow"),t(Xn,"href","https://www.raspberrypi.org/forums/viewtopic.php?t=293877#p1775592"),t(Xn,"rel","nofollow"),t($n,"href","http://www.tslib.org"),t($n,"rel","nofollow"),t(Vn,"href","https://github.com/astefanutti/kms-glsl"),t(Vn,"rel","nofollow")},m(a,u){h(a,k,u),Zn(w,k,null),e(k,Bt),e(k,jt),e(jt,d),e(jt,Xt),e(Xt,ue),e(jt,Ue),e(jt,nt),e(jt,Qt),e(jt,Ct),e(Ct,Dt),e(jt,ge),h(a,Jt,u),h(a,_t,u),e(_t,Rt),e(Rt,H),e(H,te),e(Rt,he),e(Rt,C),e(C,D),e(D,Q),e(C,lt),e(_t,A),e(A,q),e(q,J),e(A,W),e(W,tt),e(A,it),e(_t,et),e(_t,B),e(B,rt),e(_t,pt),h(a,K,u),h(a,E,u),e(E,_),e(_,X),e(X,st),e(_,ct),e(_,$),e($,V),e(_,ee),e(_,be),e(be,Y),e(_,fe),e(E,I),e(E,P),e(P,$t),e(E,Ne),e(E,z),e(z,Vt),e(E,ke),e(ke,j),e(E,Yt),h(a,Ce,u),h(a,g,u),e(g,T),e(T,de),e(de,O),e(T,Nt),e(T,Fe),e(T,G),Zn(vt,G,null),e(T,He),e(T,R),Zn(mt,R,null),e(T,We),e(T,S),Zn(xt,S,null),e(g,Pt),e(g,L),e(L,re),e(g,Qe),e(g,St),e(St,Je),e(g,M),e(M,se),e(g,tr),h(a,Ft,u),h(a,ae,u),e(ae,b),e(ae,Tt),e(Tt,er),e(ae,Ee),h(a,at,u),h(a,Z,u),e(Z,ut),e(ut,At),e(At,oe),e(Z,wt),h(a,ye,u),h(a,ot,u),e(ot,_e),e(ot,kt),e(kt,ve),e(ot,gt),e(ot,It),e(It,bt),e(ot,zt),h(a,ne,u),h(a,qr,u),e(qr,Et),h(a,me,u),h(a,N,u),e(N,wr),h(a,rr,u),h(a,F,u),Zn(Lt,F,null),e(F,As),e(F,sr),e(sr,ms),e(sr,dt),e(sr,le),e(le,la),h(a,Br,u),h(a,m,u),e(m,xs),h(a,Is,u),h(a,ht,u),e(ht,Ke),e(Ke,Us),e(Ke,De),e(De,ia),e(Ke,gr),e(ht,pa),e(ht,ft),e(ft,Xr),e(Xr,Ht),e(Ht,$r),e(Xr,ca),e(ft,ie),e(ft,fr),e(fr,ua),e(ft,Wt),e(ft,Te),e(Te,ha),e(ft,br),e(ft,Vr),e(Vr,Er),e(ft,fa),e(ft,Oe),e(Oe,ka),e(ft,Kt),e(ft,ar),e(ar,da),e(ft,Yr),h(a,ws,u),h(a,Pe,u),e(Pe,ya),e(Pe,Ze),e(Ze,va),e(Pe,ze),e(Pe,or),e(or,ma),e(Pe,Le),h(a,_r,u),h(a,rs,u),e(rs,pe),h(a,Sr,u),h(a,Ar,u),e(Ar,qe),e(qe,gs),e(gs,Be),e(Ar,bs),h(a,io,u),h(a,Xe,u),e(Xe,js),h(a,po,u),h(a,Ut,u),Zn(Pr,Ut,null),e(Ut,Yo),e(Ut,zr),e(zr,No),e(zr,nr),e(zr,Ir),e(Ir,Fo),h(a,Me,u),h(a,xe,u),e(xe,ss),e(ss,Lr),e(Lr,Ho),e(ss,as),e(ss,Cs),e(Cs,lr),e(ss,Es),e(xe,Wo),e(xe,Ot),e(Ot,Ds),e(xe,Ko),e(xe,os),e(os,Ts),e(xe,Zo),e(xe,Nr),e(Nr,Os),e(xe,Qo),h(a,_s,u),h(a,Mt,u),e(Mt,ns),e(ns,Ge),e(Ge,qs),e(ns,xa),e(ns,Bs),e(Bs,ir),e(ns,Xs),e(Mt,ls),e(ls,Zt),e(Zt,Ps),e(ls,Jo),e(ls,Mr),e(Mr,tn),e(ls,pr),e(Mt,Re),e(Re,wa),e(wa,cr),e(Re,$s),e(Re,zs),e(zs,en),e(Re,kr),e(Re,Gr),e(Gr,rn),e(Re,$e),e(Mt,Ls),e(Mt,ga),e(ga,dr),e(Mt,is),e(Mt,ba),e(ba,Vs),e(Mt,yr),e(Mt,ps),e(ps,sn),e(Mt,ur),e(Mt,Fr),e(Fr,an),e(Mt,vr),e(Mt,hr),e(hr,on),e(Mt,ce),h(a,cs,u),h(a,Ur,u),e(Ur,Ve),e(Ve,Ea),e(Ea,Ms),e(Ve,nn),e(Ve,Hr),e(Hr,ln),e(Ve,mr),e(Ve,jr),e(jr,pn),e(Ve,Se),e(Ur,Ys),e(Ur,_a),e(_a,us),e(Ur,cn),e(Ur,qt),e(qt,Ns),e(Ur,un),h(a,Wr,u),h(a,Pa,u),e(Pa,xr),h(a,hs,u),h(a,Gs,u),e(Gs,Gt),e(Gt,Rr),e(Rr,Ba),e(Gs,Fs),h(a,co,u),h(a,Ae,u),e(Ae,fs),e(fs,Kr),e(Kr,hn),e(fs,we),e(fs,Cr),e(Cr,fn),e(fs,Hs),e(Ae,kn),e(Ae,Dr),e(Dr,dn),e(Ae,Ws),e(Ae,Ks),e(Ks,Zs),e(Ae,yn),e(Ae,za),e(za,uo),e(Ae,Tr),h(a,x,u),h(a,U,u),e(U,el),e(U,La),e(La,rl),e(U,sl),e(U,Ma),e(Ma,al),e(U,ol),e(U,Ga),e(Ga,nl),e(U,ll),h(a,vn,u),h(a,Xa,u),e(Xa,il),h(a,mn,u),h(a,$a,u),e($a,pl),h(a,xn,u),ho.m(bi,a,u),h(a,fo,u),h(a,Va,u),e(Va,cl),h(a,yt,u),Ie.m(Rs,a,u),h(a,Ya,u),h(a,Na,u),e(Na,wn),h(a,gn,u),ko.m(Ei,a,u),h(a,yo,u),h(a,Qs,u),e(Qs,bn),e(Qs,Ra),e(Ra,ul),e(Qs,En),h(a,_n,u),h(a,Js,u),e(Js,Zr),e(Zr,ta),e(ta,vo),e(Js,Fa),h(a,Pn,u),h(a,ea,u),Zn(Sa,ea,null),e(ea,hl),e(ea,Qr),e(Qr,fl),e(Qr,kl),e(Qr,dl),e(Qr,ra),e(ra,yl),e(Qr,vl),e(Qr,Ha),e(Ha,ml),e(Qr,Wa),h(a,zn,u),h(a,Ka,u),e(Ka,xl),h(a,Ln,u),h(a,Za,u),e(Za,wl),h(a,Mn,u),mo.m(ri,a,u),h(a,xo,u),h(a,sa,u),e(sa,gl),e(sa,Aa),e(Aa,bl),e(sa,El),h(a,wo,u),h(a,ks,u),e(ks,_l),e(ks,go),e(go,Pl),e(ks,bo),e(ks,Ia),e(Ia,zl),e(ks,Ll),h(a,Gn,u),Eo.m(Rn,a,u),h(a,_o,u),h(a,Qa,u),e(Qa,Ml),h(a,Sn,u),Po.m(_i,a,u),h(a,zo,u),h(a,Ja,u),e(Ja,Gl),h(a,An,u),Lo.m(Pi,a,u),h(a,to,u),h(a,aa,u),e(aa,Rl),e(aa,Mo),e(Mo,Sl),e(aa,Al),h(a,In,u),Go.m(zi,a,u),h(a,Ro,u),h(a,oa,u),e(oa,Il),e(oa,So),e(So,Ul),e(oa,jl),h(a,Un,u),h(a,eo,u),e(eo,Cl),h(a,jn,u),Ao.m(Cn,a,u),h(a,Io,u),h(a,Ye,u),e(Ye,Ua),e(Ua,ro),e(ro,Dl),e(Ua,Tl),e(Ye,Dn),e(Ye,ja),e(ja,Ol),e(Ye,Tn),e(Ye,Uo),e(Uo,ql),e(Ye,Bl),e(Ye,jo),e(jo,so),e(Ye,Xl),e(Ye,Co),e(Co,$l),e(Ye,Vl),e(Ye,ds),e(ds,Yl),e(Ye,Nl),h(a,On,u),h(a,na,u),e(na,Fl),e(na,qn),e(qn,tp),e(na,ep),h(a,Li,u),h(a,Do,u),e(Do,ao),e(ao,To),e(To,si),e(Do,rp),h(a,Mi,u),h(a,Jr,u),e(Jr,sp),e(Jr,ai),e(ai,ap),e(Jr,op),e(Jr,oi),e(oi,np),e(Jr,lp),e(Jr,ni),e(ni,ip),e(Jr,pp),e(Jr,li),e(li,cp),e(Jr,up),h(a,Gi,u),h(a,Hl,u),e(Hl,hp),h(a,Ri,u),ii.m(ph,a,u),h(a,pi,u),h(a,ts,u),e(ts,fp),e(ts,Bn),e(Bn,kp),e(ts,dp),e(ts,Xn),e(Xn,yp),e(ts,vp),e(ts,ci),e(ci,mp),e(ts,xp),e(ts,$n),e($n,wp),e(ts,gp),h(a,Si,u),h(a,Wl,u),e(Wl,bp),h(a,Ai,u),h(a,es,u),e(es,ui),e(ui,Ep),e(es,_p),e(es,hi),e(hi,Pp),e(es,zp),e(es,fi),e(fi,Lp),e(es,Mp),e(es,ki),e(ki,Gp),e(es,Rp),e(es,di),e(di,Sp),h(a,Ii,u),h(a,Kl,u),e(Kl,Ap),h(a,Ui,u),h(a,Oo,u),e(Oo,Ip),e(Oo,Vn),e(Vn,Up),e(Oo,jp),ji=!0},p:gi,i(a){ji||(Qn(w.$$.fragment,a),Qn(vt.$$.fragment,a),Qn(mt.$$.fragment,a),Qn(xt.$$.fragment,a),Qn(Lt.$$.fragment,a),Qn(Pr.$$.fragment,a),Qn(Sa.$$.fragment,a),ji=!0)},o(a){Jn(w.$$.fragment,a),Jn(vt.$$.fragment,a),Jn(mt.$$.fragment,a),Jn(xt.$$.fragment,a),Jn(Lt.$$.fragment,a),Jn(Pr.$$.fragment,a),Jn(Sa.$$.fragment,a),ji=!1},d(a){a&&r(k),tl(w),a&&r(Jt),a&&r(_t),a&&r(K),a&&r(E),a&&r(Ce),a&&r(g),tl(vt),tl(mt),tl(xt),a&&r(Ft),a&&r(ae),a&&r(at),a&&r(Z),a&&r(ye),a&&r(ot),a&&r(ne),a&&r(qr),a&&r(me),a&&r(N),a&&r(rr),a&&r(F),tl(Lt),a&&r(Br),a&&r(m),a&&r(Is),a&&r(ht),a&&r(ws),a&&r(Pe),a&&r(_r),a&&r(rs),a&&r(Sr),a&&r(Ar),a&&r(io),a&&r(Xe),a&&r(po),a&&r(Ut),tl(Pr),a&&r(Me),a&&r(xe),a&&r(_s),a&&r(Mt),a&&r(cs),a&&r(Ur),a&&r(Wr),a&&r(Pa),a&&r(hs),a&&r(Gs),a&&r(co),a&&r(Ae),a&&r(x),a&&r(U),a&&r(vn),a&&r(Xa),a&&r(mn),a&&r($a),a&&r(xn),a&&ho.d(),a&&r(fo),a&&r(Va),a&&r(yt),a&&Ie.d(),a&&r(Ya),a&&r(Na),a&&r(gn),a&&ko.d(),a&&r(yo),a&&r(Qs),a&&r(_n),a&&r(Js),a&&r(Pn),a&&r(ea),tl(Sa),a&&r(zn),a&&r(Ka),a&&r(Ln),a&&r(Za),a&&r(Mn),a&&mo.d(),a&&r(xo),a&&r(sa),a&&r(wo),a&&r(ks),a&&r(Gn),a&&Eo.d(),a&&r(_o),a&&r(Qa),a&&r(Sn),a&&Po.d(),a&&r(zo),a&&r(Ja),a&&r(An),a&&Lo.d(),a&&r(to),a&&r(aa),a&&r(In),a&&Go.d(),a&&r(Ro),a&&r(oa),a&&r(Un),a&&r(eo),a&&r(jn),a&&Ao.d(),a&&r(Io),a&&r(Ye),a&&r(On),a&&r(na),a&&r(Li),a&&r(Do),a&&r(Mi),a&&r(Jr),a&&r(Gi),a&&r(Hl),a&&r(Ri),a&&ii.d(),a&&r(pi),a&&r(ts),a&&r(Si),a&&r(Wl),a&&r(Ai),a&&r(es),a&&r(Ii),a&&r(Kl),a&&r(Ui),a&&r(Oo)}}}const jh={title:"Running OpenGL Shaders on the Raspberry Pi",date:"2021-03-08T00:00:00.000Z",published:!0,image:"./torus.jpg",slug:"glsl-raspberry-pi",tags:["OpenGL","Raspberry Pi"]},Vp="(max-width: calc(1.4 * 800px)) 25vw, 400px";class Ch extends Yp{constructor(k){super(),Np(this,k,null,Sh,Fp,{})}}export{Ch as default,jh as metadata};
