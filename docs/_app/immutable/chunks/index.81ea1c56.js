import{S as up,i as hp,s as fp,V as Vi,T as o,q as i,U as n,m as s,h as r,r as l,n as t,W as iu,p as f,X as Al,b as h,E as e,Y as lu,F as el,Z as Ul,k as p,y as jn,a as y,H as Da,l as c,z as Cn,c as v,D as Ta,A as Dn,g as Tn,d as On,B as qn}from"./index.39ce08e8.js";import{I as tl}from"./Image.9576d2d4.js";function pu(As){let k,w,$t,It,d,Vt,ye,Oe,qe,st,oe,At,Ut,ze,ne,gt,Mt,$,ie,ve,j,C,W,at,K,V,S,Y,Z,ot,Q,J,_,nt,I,it,tt,D,et,F,z,B,jt,ur,X,Gt,R,A,Yt,Be,g,Ft,me,U,Nt,xe,T,Rt,ht,O,Ht,le,L,Wt,pe,P,Kt,ce,M,Zt,ft,E,ue,Xe,he,rr,G,kt,Qt,dt,$e,b,Jt,Ct,Le,N,bt,te,Dt,Pe,yt,we,Et,Me,vt,Tt,mt,fe,q,rt,ge,Ur,xt,Ge,H,Er,sr,lt,ke,hs,Ze,_r,pt,Ot,ya,Kr,m,qt,va,_t,ar,Us,zr,Br,Lr,ma,Re,xa,Se,or,wa,de,nr,ga,ee,hr,fr,Pr,Xr,Mr,ba,ir,Ea,re,jr,Zr,$r,fs,Qe,Gr,Ve,ks,Ie,kr,Qr,Ae,Rr,Cr,zt,Vr,Yr,Fr,Qo,Ye,ds,no,Lt,js,Oa,Ue,ys,qa,vs,Jo,Fe,lr,tn,se,ms,en,Jr,io,ct,rn,Ne,dr,sn,Pt,Cs,an,Ds,ts,xs,Ts,Dr,on,Os,qs,Ba,pr,Bs,ws,Nr,cr,es,nn,je,Sr,ln,gs,pn,He,rs,cn,Je,tr,_a,Xa,ae,bs,$a,We,Es,Xs,yr,ss,un,Tr,vr,$s,lo,Ce,Vs,po,be,Ee,_s,Bt,zs,co,_e,hn,Ir,fn,Ls,Ys,mr,Fs,Va,St,Ns,Hs,as,kn,De,Ps,Ar,os,Ws,xr,Ms,Ks,Te,Zs,Qs,Js,dn,Gs,za,ta,uo,Xt,ea,ho,ns,Yi,is,La,ra,fo,ls,Fi,Ya=[{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{viewBox:"0 0 1280 720"},As[0]],sa={};for(let Or=0;Or<Ya.length;Or+=1)sa=Vi(sa,Ya[Or]);return{c(){k=o("svg"),w=o("defs"),$t=o("marker"),It=o("path"),d=o("marker"),Vt=o("path"),ye=o("marker"),Oe=o("path"),qe=o("marker"),st=o("path"),oe=o("marker"),At=o("path"),Ut=o("marker"),ze=o("path"),ne=o("marker"),gt=o("path"),Mt=o("marker"),$=o("path"),ie=o("marker"),ve=o("path"),j=o("marker"),C=o("path"),W=o("marker"),at=o("path"),K=o("marker"),V=o("path"),S=o("marker"),Y=o("path"),Z=o("marker"),ot=o("path"),Q=o("marker"),J=o("path"),_=o("marker"),nt=o("path"),I=o("marker"),it=o("path"),tt=o("marker"),D=o("path"),et=o("marker"),F=o("path"),z=o("marker"),B=o("path"),jt=o("marker"),ur=o("path"),X=o("marker"),Gt=o("path"),R=o("g"),A=o("rect"),Yt=o("rect"),Be=o("rect"),g=o("rect"),Ft=o("rect"),me=o("rect"),U=o("rect"),Nt=o("rect"),xe=o("rect"),T=o("rect"),Rt=o("rect"),ht=o("rect"),O=o("rect"),Ht=o("rect"),le=o("rect"),L=o("rect"),Wt=o("rect"),pe=o("rect"),P=o("rect"),Kt=o("rect"),ce=o("rect"),M=o("rect"),Zt=o("rect"),ft=o("g"),E=o("path"),ue=o("path"),Xe=o("path"),he=o("path"),rr=o("path"),G=o("path"),kt=o("path"),Qt=o("path"),dt=o("path"),$e=o("path"),b=o("path"),Jt=o("path"),Ct=o("path"),Le=o("use"),N=o("text"),bt=o("tspan"),te=o("tspan"),Dt=i("Mesa"),Pe=i(":APIs+DRI/Gallium3D driver"),yt=o("tspan"),we=i("libGL-mesa-swx11 "),Et=o("tspan"),Me=i("(libGL)"),vt=o("tspan"),Tt=i("libGL-mesa-glx"),mt=o("tspan"),fe=i("libOpenVG-mesa"),q=o("tspan"),rt=i("libGLES-mesa"),ge=o("tspan"),Ur=i("libEGL-mesa"),xt=o("tspan"),Ge=i("libEGL-mesa-drivers "),H=o("tspan"),Er=i("(Wayland)"),sr=o("tspan"),lt=i("libGBM"),ke=o("tspan"),hs=i("libGL-mesa-DRI "),Ze=o("tspan"),_r=i("(Modules)"),pt=o("text"),Ot=o("tspan"),ya=i("X-server "),Kr=o("tspan"),m=i("("),qt=o("tspan"),va=i("X.Org)"),_t=o("text"),ar=o("tspan"),Us=i("X.Org Server display driver"),zr=o("tspan"),Br=i("xserver-xorg-video-nouveau"),Lr=o("tspan"),ma=i("xserver-xorg-video-nvidia"),Re=o("tspan"),xa=i("xserver-xorg-video-radeon"),Se=o("text"),or=o("tspan"),wa=i("DRM"),de=o("text"),nr=o("tspan"),ga=i("Linux kernel"),ee=o("text"),hr=o("tspan"),fr=i("libDRM-intel"),Pr=o("tspan"),Xr=i("libDRM-radeon"),Mr=o("tspan"),ba=i("libDRM-nouveau"),ir=o("tspan"),Ea=i("libDRM-freedreno"),re=o("text"),jr=o("tspan"),Zr=i("hardware specific"),$r=o("tspan"),fs=i("Userspace interface to"),Qe=o("tspan"),Gr=i("hardware specific"),Ve=o("tspan"),ks=i("direct rendering manager"),Ie=o("text"),kr=o("tspan"),Qr=i("CPU & registers & L1 & L2 & L3 & L4 & main memory"),Ae=o("text"),Rr=o("tspan"),Cr=i("GPU & registers & L1 & L2 (& graphic memory)"),zt=o("text"),Vr=o("tspan"),Yr=i("Applications"),Fr=o("tspan"),Qo=i("Toolkits"),Ye=o("text"),ds=o("tspan"),no=i("libDRM"),Lt=o("text"),js=o("tspan"),Oa=i("3D-game engine"),Ue=o("text"),ys=o("tspan"),qa=i("DDX-"),vs=o("tspan"),Jo=i("driver"),Fe=o("text"),lr=o("tspan"),tn=i("libX / libXCB"),se=o("text"),ms=o("tspan"),en=i("Proprietary OpenGL 4.2 driver"),Jr=o("tspan"),io=i("libGL-nvidia-glx"),ct=o("tspan"),rn=i("libGL-fglrx-glx"),Ne=o("text"),dr=o("tspan"),sn=i('"libGL"'),Pt=o("text"),Cs=o("tspan"),an=i("Rendering APIs: "),Ds=o("tspan"),ts=o("tspan"),xs=i("OpenGL"),Ts=o("tspan"),Dr=o("tspan"),on=i("OpenGL|ES"),Os=o("tspan"),qs=o("tspan"),Ba=i("OpenVG"),pr=o("text"),Bs=o("tspan"),ws=o("tspan"),Nr=i("X 11R7.8"),cr=o("text"),es=o("tspan"),nn=i("blob"),je=o("text"),Sr=o("tspan"),ln=i("Display"),gs=o("tspan"),pn=i("server"),He=o("text"),rs=o("tspan"),cn=i("libwayland-client"),Je=o("text"),tr=o("tspan"),_a=o("tspan"),Xa=i("Wayland 1.5"),ae=o("text"),bs=o("tspan"),$a=i("framebuffer"),We=o("text"),Es=o("tspan"),Xs=i("DIX driver"),yr=o("text"),ss=o("tspan"),un=i("hardware-specific"),Tr=o("path"),vr=o("text"),$s=o("tspan"),lo=i("by Shmuel Csaba Otto Traian; CC-BY-SA 4.0 intl; created 2013-08-24; last updated 2014-03-25"),Ce=o("text"),Vs=o("tspan"),po=i("KMS"),be=o("text"),Ee=o("tspan"),_s=i("Kernel Mode Setting"),Bt=o("text"),zs=o("tspan"),co=i("Wayland"),_e=o("tspan"),hn=i("obsoletes"),Ir=o("tspan"),fn=i("2D drivers in"),Ls=o("tspan"),Ys=i("display server"),mr=o("text"),Fs=o("tspan"),Va=i("Wayland compositor"),St=o("text"),Ns=o("tspan"),Hs=i("API: "),as=o("tspan"),kn=i("EGL"),De=o("text"),Ps=o("tspan"),Ar=i("API: "),os=o("tspan"),Ws=i("EGL"),xr=o("text"),Ms=o("tspan"),Ks=i("Window manager"),Te=o("text"),Zs=o("tspan"),Qs=i("KWin"),Js=o("tspan"),dn=i("Mutter"),Gs=o("tspan"),za=i("Weston"),ta=o("tspan"),uo=i("Enlightment"),Xt=o("text"),ea=o("tspan"),ho=i("KWin"),ns=o("tspan"),Yi=i("Compiz"),is=o("tspan"),La=i("OpenBox"),ra=o("tspan"),fo=i("Metacity"),ls=o("tspan"),Fi=i("Mutter"),this.h()},l(Or){k=n(Or,"svg",{xmlns:!0,"xmlns:xlink":!0,viewBox:!0});var x=s(k);w=n(x,"defs",{});var ut=s(w);$t=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var rl=s($t);It=n(rl,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(It).forEach(r),rl.forEach(r),d=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var ko=s(d);Vt=n(ko,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(Vt).forEach(r),ko.forEach(r),ye=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var aa=s(ye);Oe=n(aa,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(Oe).forEach(r),aa.forEach(r),qe=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Bn=s(qe);st=n(Bn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(st).forEach(r),Bn.forEach(r),oe=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Pa=s(oe);At=n(Pa,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(At).forEach(r),Pa.forEach(r),Ut=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Xn=s(Ut);ze=n(Xn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(ze).forEach(r),Xn.forEach(r),ne=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var $n=s(ne);gt=n($n,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(gt).forEach(r),$n.forEach(r),Mt=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var yn=s(Mt);$=n(yn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s($).forEach(r),yn.forEach(r),ie=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var oa=s(ie);ve=n(oa,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(ve).forEach(r),oa.forEach(r),j=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Rs=s(j);C=n(Rs,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(C).forEach(r),Rs.forEach(r),W=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var na=s(W);at=n(na,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(at).forEach(r),na.forEach(r),K=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var yo=s(K);V=n(yo,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(V).forEach(r),yo.forEach(r),S=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Vn=s(S);Y=n(Vn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(Y).forEach(r),Vn.forEach(r),Z=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var vn=s(Z);ot=n(vn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(ot).forEach(r),vn.forEach(r),Q=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var ia=s(Q);J=n(ia,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(J).forEach(r),ia.forEach(r),_=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Ma=s(_);nt=n(Ma,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(nt).forEach(r),Ma.forEach(r),I=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Yn=s(I);it=n(Yn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(it).forEach(r),Yn.forEach(r),tt=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Hr=s(tt);D=n(Hr,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(D).forEach(r),Hr.forEach(r),et=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Fn=s(et);F=n(Fn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(F).forEach(r),Fn.forEach(r),z=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Nn=s(z);B=n(Nn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(B).forEach(r),Nn.forEach(r),jt=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var Hn=s(jt);ur=n(Hn,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(ur).forEach(r),Hn.forEach(r),X=n(ut,"marker",{id:!0,orient:!0,overflow:!0,refX:!0,refY:!0});var vo=s(X);Gt=n(vo,"path",{fill:!0,"fill-rule":!0,stroke:!0,"stroke-width":!0,d:!0}),s(Gt).forEach(r),vo.forEach(r),ut.forEach(r),R=n(x,"g",{transform:!0});var wt=s(R);A=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(A).forEach(r),Yt=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Yt).forEach(r),Be=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Be).forEach(r),g=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(g).forEach(r),Ft=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Ft).forEach(r),me=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(me).forEach(r),U=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(U).forEach(r),Nt=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Nt).forEach(r),xe=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(xe).forEach(r),T=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(T).forEach(r),Rt=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Rt).forEach(r),ht=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(ht).forEach(r),O=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(O).forEach(r),Ht=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Ht).forEach(r),le=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(le).forEach(r),L=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(L).forEach(r),Wt=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Wt).forEach(r),pe=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(pe).forEach(r),P=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(P).forEach(r),Kt=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Kt).forEach(r),ce=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(ce).forEach(r),M=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(M).forEach(r),Zt=n(wt,"rect",{width:!0,height:!0,x:!0,y:!0,fill:!0,rx:!0,ry:!0}),s(Zt).forEach(r),wt.forEach(r),ft=n(x,"g",{transform:!0});var er=s(ft);E=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(E).forEach(r),ue=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(ue).forEach(r),Xe=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(Xe).forEach(r),he=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(he).forEach(r),rr=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(rr).forEach(r),G=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(G).forEach(r),kt=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(kt).forEach(r),Qt=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(Qt).forEach(r),dt=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(dt).forEach(r),$e=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s($e).forEach(r),b=n(er,"path",{id:!0,fill:!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0,display:!0}),s(b).forEach(r),Jt=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(Jt).forEach(r),Ct=n(er,"path",{fill:!0,stroke:!0,"stroke-width":!0,"marker-end":!0,"marker-start":!0,d:!0}),s(Ct).forEach(r),Le=n(er,"use",{"xlink:href":!0,width:!0,height:!0,transform:!0}),s(Le).forEach(r),er.forEach(r),N=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var wr=s(N);bt=n(wr,"tspan",{x:!0,y:!0,"font-size":!0});var mn=s(bt);te=n(mn,"tspan",{"font-weight":!0});var Wn=s(te);Dt=l(Wn,"Mesa"),Wn.forEach(r),Pe=l(mn,":APIs+DRI/Gallium3D driver"),mn.forEach(r),yt=n(wr,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var mo=s(yt);we=l(mo,"libGL-mesa-swx11 "),Et=n(mo,"tspan",{"font-weight":!0});var Fa=s(Et);Me=l(Fa,"(libGL)"),Fa.forEach(r),mo.forEach(r),vt=n(wr,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Kn=s(vt);Tt=l(Kn,"libGL-mesa-glx"),Kn.forEach(r),mt=n(wr,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var xn=s(mt);fe=l(xn,"libOpenVG-mesa"),xn.forEach(r),q=n(wr,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Na=s(q);rt=l(Na,"libGLES-mesa"),Na.forEach(r),ge=n(wr,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Zn=s(ge);Ur=l(Zn,"libEGL-mesa"),Zn.forEach(r),xt=n(wr,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var xo=s(xt);Ge=l(xo,"libEGL-mesa-drivers "),H=n(xo,"tspan",{"font-weight":!0});var wo=s(H);Er=l(wo,"(Wayland)"),wo.forEach(r),xo.forEach(r),sr=n(wr,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var sl=s(sr);lt=l(sl,"libGBM"),sl.forEach(r),ke=n(wr,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var Ha=s(ke);hs=l(Ha,"libGL-mesa-DRI "),Ze=n(Ha,"tspan",{"font-weight":!0});var la=s(Ze);_r=l(la,"(Modules)"),la.forEach(r),Ha.forEach(r),wr.forEach(r),pt=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Qn=s(pt);Ot=n(Qn,"tspan",{x:!0,y:!0});var Ss=s(Ot);ya=l(Ss,"X-server "),Kr=n(Ss,"tspan",{"font-weight":!0});var Jn=s(Kr);m=l(Jn,"("),Jn.forEach(r),qt=n(Ss,"tspan",{});var ti=s(qt);va=l(ti,"X.Org)"),ti.forEach(r),Ss.forEach(r),Qn.forEach(r),_t=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Ga=s(_t);ar=n(Ga,"tspan",{x:!0,y:!0,style:!0});var ps=s(ar);Us=l(ps,"X.Org Server display driver"),ps.forEach(r),zr=n(Ga,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var ei=s(zr);Br=l(ei,"xserver-xorg-video-nouveau"),ei.forEach(r),Lr=n(Ga,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var go=s(Lr);ma=l(go,"xserver-xorg-video-nvidia"),go.forEach(r),Re=n(Ga,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var ri=s(Re);xa=l(ri,"xserver-xorg-video-radeon"),ri.forEach(r),Ga.forEach(r),Se=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var si=s(Se);or=n(si,"tspan",{x:!0,y:!0});var Ra=s(or);wa=l(Ra,"DRM"),Ra.forEach(r),si.forEach(r),de=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var ai=s(de);nr=n(ai,"tspan",{x:!0,y:!0});var oi=s(nr);ga=l(oi,"Linux kernel"),oi.forEach(r),ai.forEach(r),ee=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Sa=s(ee);hr=n(Sa,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var bo=s(hr);fr=l(bo,"libDRM-intel"),bo.forEach(r),Pr=n(Sa,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var al=s(Pr);Xr=l(al,"libDRM-radeon"),al.forEach(r),Mr=n(Sa,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var Eo=s(Mr);ba=l(Eo,"libDRM-nouveau"),Eo.forEach(r),ir=n(Sa,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var Wa=s(ir);Ea=l(Wa,"libDRM-freedreno"),Wa.forEach(r),Sa.forEach(r),re=n(x,"text",{x:!0,y:!0,class:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Ka=s(re);jr=n(Ka,"tspan",{x:!0,y:!0});var wn=s(jr);Zr=l(wn,"hardware specific"),wn.forEach(r),$r=n(Ka,"tspan",{x:!0,y:!0});var _o=s($r);fs=l(_o,"Userspace interface to"),_o.forEach(r),Qe=n(Ka,"tspan",{x:!0,y:!0});var ol=s(Qe);Gr=l(ol,"hardware specific"),ol.forEach(r),Ve=n(Ka,"tspan",{x:!0,y:!0});var zo=s(Ve);ks=l(zo,"direct rendering manager"),zo.forEach(r),Ka.forEach(r),Ie=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Za=s(Ie);kr=n(Za,"tspan",{x:!0,y:!0,"font-size":!0});var ni=s(kr);Qr=l(ni,"CPU & registers & L1 & L2 & L3 & L4 & main memory"),ni.forEach(r),Za.forEach(r),Ae=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var gn=s(Ae);Rr=n(gn,"tspan",{x:!0,y:!0,"font-size":!0});var Lo=s(Rr);Cr=l(Lo,"GPU & registers & L1 & L2 (& graphic memory)"),Lo.forEach(r),gn.forEach(r),zt=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Ni=s(zt);Vr=n(Ni,"tspan",{x:!0,y:!0});var Po=s(Vr);Yr=l(Po,"Applications"),Po.forEach(r),Fr=n(Ni,"tspan",{x:!0,y:!0});var pa=s(Fr);Qo=l(pa,"Toolkits"),pa.forEach(r),Ni.forEach(r),Ye=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ii=s(Ye);ds=n(ii,"tspan",{x:!0,y:!0,style:!0});var Mo=s(ds);no=l(Mo,"libDRM"),Mo.forEach(r),ii.forEach(r),Lt=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var li=s(Lt);js=n(li,"tspan",{x:!0,y:!0});var pi=s(js);Oa=l(pi,"3D-game engine"),pi.forEach(r),li.forEach(r),Ue=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Go=s(Ue);ys=n(Go,"tspan",{x:!0,y:!0,style:!0});var Ro=s(ys);qa=l(Ro,"DDX-"),Ro.forEach(r),vs=n(Go,"tspan",{x:!0,y:!0,style:!0});var nl=s(vs);Jo=l(nl,"driver"),nl.forEach(r),Go.forEach(r),Fe=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var So=s(Fe);lr=n(So,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var ca=s(lr);tn=l(ca,"libX / libXCB"),ca.forEach(r),So.forEach(r),se=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Io=s(se);ms=n(Io,"tspan",{x:!0,y:!0,"font-size":!0});var Ao=s(ms);en=l(Ao,"Proprietary OpenGL 4.2 driver"),Ao.forEach(r),Jr=n(Io,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var ci=s(Jr);io=l(ci,"libGL-nvidia-glx"),ci.forEach(r),ct=n(Io,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var ui=s(ct);rn=l(ui,"libGL-fglrx-glx"),ui.forEach(r),Io.forEach(r),Ne=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var bn=s(Ne);dr=n(bn,"tspan",{x:!0,y:!0,style:!0});var Qa=s(dr);sn=l(Qa,'"libGL"'),Qa.forEach(r),bn.forEach(r),Pt=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Ja=s(Pt);Cs=n(Ja,"tspan",{x:!0,y:!0});var En=s(Cs);an=l(En,"Rendering APIs: "),En.forEach(r),Ds=n(Ja,"tspan",{x:!0,y:!0});var Uo=s(Ds);ts=n(Uo,"tspan",{"font-weight":!0,style:!0});var il=s(ts);xs=l(il,"OpenGL"),il.forEach(r),Uo.forEach(r),Ts=n(Ja,"tspan",{x:!0,y:!0});var jo=s(Ts);Dr=n(jo,"tspan",{"font-weight":!0,style:!0});var Ke=s(Dr);on=l(Ke,"OpenGL|ES"),Ke.forEach(r),jo.forEach(r),Os=n(Ja,"tspan",{x:!0,y:!0});var hi=s(Os);qs=n(hi,"tspan",{"font-weight":!0,style:!0});var Ia=s(qs);Ba=l(Ia,"OpenVG"),Ia.forEach(r),hi.forEach(r),Ja.forEach(r),pr=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var fi=s(pr);Bs=n(fi,"tspan",{x:!0,y:!0});var ki=s(Bs);ws=n(ki,"tspan",{"font-weight":!0});var Co=s(ws);Nr=l(Co,"X 11R7.8"),Co.forEach(r),ki.forEach(r),fi.forEach(r),cr=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var di=s(cr);es=n(di,"tspan",{x:!0,y:!0});var yi=s(es);nn=l(yi,"blob"),yi.forEach(r),di.forEach(r),je=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var to=s(je);Sr=n(to,"tspan",{x:!0,y:!0,style:!0});var vi=s(Sr);ln=l(vi,"Display"),vi.forEach(r),gs=n(to,"tspan",{x:!0,y:!0,style:!0});var mi=s(gs);pn=l(mi,"server"),mi.forEach(r),to.forEach(r),He=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Do=s(He);rs=n(Do,"tspan",{x:!0,y:!0,"font-size":!0,"font-weight":!0});var xi=s(rs);cn=l(xi,"libwayland-client"),xi.forEach(r),Do.forEach(r),Je=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var wi=s(Je);tr=n(wi,"tspan",{x:!0,y:!0});var To=s(tr);_a=n(To,"tspan",{"font-weight":!0});var eo=s(_a);Xa=l(eo,"Wayland 1.5"),eo.forEach(r),To.forEach(r),wi.forEach(r),ae=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var gi=s(ae);bs=n(gi,"tspan",{x:!0,y:!0,"font-size":!0});var bi=s(bs);$a=l(bi,"framebuffer"),bi.forEach(r),gi.forEach(r),We=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var _n=s(We);Es=n(_n,"tspan",{x:!0,y:!0,style:!0});var ua=s(Es);Xs=l(ua,"DIX driver"),ua.forEach(r),_n.forEach(r),yr=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Ei=s(yr);ss=n(Ei,"tspan",{x:!0,y:!0,fill:!0,"font-size":!0});var Aa=s(ss);un=l(Aa,"hardware-specific"),Aa.forEach(r),Ei.forEach(r),Tr=n(x,"path",{fill:!0,stroke:!0,d:!0}),s(Tr).forEach(r),vr=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var _i=s(vr);$s=n(_i,"tspan",{x:!0,y:!0});var zi=s($s);lo=l(zi,"by Shmuel Csaba Otto Traian; CC-BY-SA 4.0 intl; created 2013-08-24; last updated 2014-03-25"),zi.forEach(r),_i.forEach(r),Ce=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var zn=s(Ce);Vs=n(zn,"tspan",{x:!0,y:!0});var ha=s(Vs);po=l(ha,"KMS"),ha.forEach(r),zn.forEach(r),be=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Is=s(be);Ee=n(Is,"tspan",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,style:!0,"text-anchor":!0});var fa=s(Ee);_s=l(fa,"Kernel Mode Setting"),fa.forEach(r),Is.forEach(r),Bt=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var ka=s(Bt);zs=n(ka,"tspan",{x:!0,y:!0,style:!0});var Li=s(zs);co=l(Li,"Wayland"),Li.forEach(r),_e=n(ka,"tspan",{x:!0,y:!0,style:!0});var Ln=s(_e);hn=l(Ln,"obsoletes"),Ln.forEach(r),Ir=n(ka,"tspan",{x:!0,y:!0,style:!0});var gr=s(Ir);fn=l(gr,"2D drivers in"),gr.forEach(r),Ls=n(ka,"tspan",{x:!0,y:!0,style:!0});var Pi=s(Ls);Ys=l(Pi,"display server"),Pi.forEach(r),ka.forEach(r),mr=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Oo=s(mr);Fs=n(Oo,"tspan",{x:!0,y:!0});var Mi=s(Fs);Va=l(Mi,"Wayland compositor"),Mi.forEach(r),Oo.forEach(r),St=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Pn=s(St);Ns=n(Pn,"tspan",{x:!0,y:!0});var qo=s(Ns);Hs=l(qo,"API: "),qo.forEach(r),as=n(Pn,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var Gi=s(as);kn=l(Gi,"EGL"),Gi.forEach(r),Pn.forEach(r),De=n(x,"text",{x:!0,y:!0,fill:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,"text-anchor":!0,transform:!0,"word-spacing":!0});var Mn=s(De);Ps=n(Mn,"tspan",{x:!0,y:!0});var Bo=s(Ps);Ar=l(Bo,"API: "),Bo.forEach(r),os=n(Mn,"tspan",{x:!0,y:!0,"font-weight":!0,style:!0});var Ri=s(os);Ws=l(Ri,"EGL"),Ri.forEach(r),Mn.forEach(r),xr=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Si=s(xr);Ms=n(Si,"tspan",{x:!0,y:!0,"font-weight":!0});var Xo=s(Ms);Ks=l(Xo,"Window manager"),Xo.forEach(r),Si.forEach(r),Te=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ro=s(Te);Zs=n(ro,"tspan",{x:!0,y:!0});var Ii=s(Zs);Qs=l(Ii,"KWin"),Ii.forEach(r),Js=n(ro,"tspan",{x:!0,y:!0});var Gn=s(Js);dn=l(Gn,"Mutter"),Gn.forEach(r),Gs=n(ro,"tspan",{x:!0,y:!0});var so=s(Gs);za=l(so,"Weston"),so.forEach(r),ta=n(ro,"tspan",{x:!0,y:!0});var Ai=s(ta);uo=l(Ai,"Enlightment"),Ai.forEach(r),ro.forEach(r),Xt=n(x,"text",{x:!0,y:!0,"font-size":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var da=s(Xt);ea=n(da,"tspan",{x:!0,y:!0});var $o=s(ea);ho=l($o,"KWin"),$o.forEach(r),ns=n(da,"tspan",{x:!0,y:!0});var ll=s(ns);Yi=l(ll,"Compiz"),ll.forEach(r),is=n(da,"tspan",{x:!0,y:!0});var Vo=s(is);La=l(Vo,"OpenBox"),Vo.forEach(r),ra=n(da,"tspan",{x:!0,y:!0});var br=s(ra);fo=l(br,"Metacity"),br.forEach(r),ls=n(da,"tspan",{x:!0,y:!0});var Ui=s(ls);Fi=l(Ui,"Mutter"),Ui.forEach(r),da.forEach(r),x.forEach(r),this.h()},h(){t(It,"fill","green"),t(It,"fill-rule","evenodd"),t(It,"stroke","green"),t(It,"stroke-width",".2pt"),t(It,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t($t,"id","h"),t($t,"orient","auto"),t($t,"overflow","visible"),t($t,"refX","0"),t($t,"refY","0"),t(Vt,"fill","green"),t(Vt,"fill-rule","evenodd"),t(Vt,"stroke","green"),t(Vt,"stroke-width",".2pt"),t(Vt,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(d,"id","g"),t(d,"orient","auto"),t(d,"overflow","visible"),t(d,"refX","0"),t(d,"refY","0"),t(Oe,"fill","navy"),t(Oe,"fill-rule","evenodd"),t(Oe,"stroke","navy"),t(Oe,"stroke-width",".2pt"),t(Oe,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(ye,"id","p"),t(ye,"orient","auto"),t(ye,"overflow","visible"),t(ye,"refX","0"),t(ye,"refY","0"),t(st,"fill","navy"),t(st,"fill-rule","evenodd"),t(st,"stroke","navy"),t(st,"stroke-width",".2pt"),t(st,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(qe,"id","o"),t(qe,"orient","auto"),t(qe,"overflow","visible"),t(qe,"refX","0"),t(qe,"refY","0"),t(At,"fill","navy"),t(At,"fill-rule","evenodd"),t(At,"stroke","navy"),t(At,"stroke-width",".2pt"),t(At,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(oe,"id","n"),t(oe,"orient","auto"),t(oe,"overflow","visible"),t(oe,"refX","0"),t(oe,"refY","0"),t(ze,"fill","navy"),t(ze,"fill-rule","evenodd"),t(ze,"stroke","navy"),t(ze,"stroke-width",".2pt"),t(ze,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(Ut,"id","m"),t(Ut,"orient","auto"),t(Ut,"overflow","visible"),t(Ut,"refX","0"),t(Ut,"refY","0"),t(gt,"fill","green"),t(gt,"fill-rule","evenodd"),t(gt,"stroke","green"),t(gt,"stroke-width",".2pt"),t(gt,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(ne,"id","r"),t(ne,"orient","auto"),t(ne,"overflow","visible"),t(ne,"refX","0"),t(ne,"refY","0"),t($,"fill","green"),t($,"fill-rule","evenodd"),t($,"stroke","green"),t($,"stroke-width",".2pt"),t($,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(Mt,"id","q"),t(Mt,"orient","auto"),t(Mt,"overflow","visible"),t(Mt,"refX","0"),t(Mt,"refY","0"),t(ve,"fill","#0197fd"),t(ve,"fill-rule","evenodd"),t(ve,"stroke","#0197fd"),t(ve,"stroke-width",".2pt"),t(ve,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(ie,"id","f"),t(ie,"orient","auto"),t(ie,"overflow","visible"),t(ie,"refX","0"),t(ie,"refY","0"),t(C,"fill","#0197fd"),t(C,"fill-rule","evenodd"),t(C,"stroke","#0197fd"),t(C,"stroke-width",".2pt"),t(C,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(j,"id","e"),t(j,"orient","auto"),t(j,"overflow","visible"),t(j,"refX","0"),t(j,"refY","0"),t(at,"fill","#0197fd"),t(at,"fill-rule","evenodd"),t(at,"stroke","#0197fd"),t(at,"stroke-width",".2pt"),t(at,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(W,"id","t"),t(W,"orient","auto"),t(W,"overflow","visible"),t(W,"refX","0"),t(W,"refY","0"),t(V,"fill","#0197fd"),t(V,"fill-rule","evenodd"),t(V,"stroke","#0197fd"),t(V,"stroke-width",".2pt"),t(V,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(K,"id","s"),t(K,"orient","auto"),t(K,"overflow","visible"),t(K,"refX","0"),t(K,"refY","0"),t(Y,"fill","#0197fd"),t(Y,"fill-rule","evenodd"),t(Y,"stroke","#0197fd"),t(Y,"stroke-width",".2pt"),t(Y,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(S,"id","d"),t(S,"orient","auto"),t(S,"overflow","visible"),t(S,"refX","0"),t(S,"refY","0"),t(ot,"fill","#0197fd"),t(ot,"fill-rule","evenodd"),t(ot,"stroke","#0197fd"),t(ot,"stroke-width",".2pt"),t(ot,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(Z,"id","c"),t(Z,"orient","auto"),t(Z,"overflow","visible"),t(Z,"refX","0"),t(Z,"refY","0"),t(J,"fill","#0197fd"),t(J,"fill-rule","evenodd"),t(J,"stroke","#0197fd"),t(J,"stroke-width",".2pt"),t(J,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(Q,"id","v"),t(Q,"orient","auto"),t(Q,"overflow","visible"),t(Q,"refX","0"),t(Q,"refY","0"),t(nt,"fill","#0197fd"),t(nt,"fill-rule","evenodd"),t(nt,"stroke","#0197fd"),t(nt,"stroke-width",".2pt"),t(nt,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(_,"id","u"),t(_,"orient","auto"),t(_,"overflow","visible"),t(_,"refX","0"),t(_,"refY","0"),t(it,"fill","#0197fd"),t(it,"fill-rule","evenodd"),t(it,"stroke","#0197fd"),t(it,"stroke-width",".2pt"),t(it,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(I,"id","b"),t(I,"orient","auto"),t(I,"overflow","visible"),t(I,"refX","0"),t(I,"refY","0"),t(D,"fill","#0197fd"),t(D,"fill-rule","evenodd"),t(D,"stroke","#0197fd"),t(D,"stroke-width",".2pt"),t(D,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(tt,"id","a"),t(tt,"orient","auto"),t(tt,"overflow","visible"),t(tt,"refX","0"),t(tt,"refY","0"),t(F,"fill","#0197fd"),t(F,"fill-rule","evenodd"),t(F,"stroke","#0197fd"),t(F,"stroke-width",".2pt"),t(F,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(et,"id","j"),t(et,"orient","auto"),t(et,"overflow","visible"),t(et,"refX","0"),t(et,"refY","0"),t(B,"fill","#0197fd"),t(B,"fill-rule","evenodd"),t(B,"stroke","#0197fd"),t(B,"stroke-width",".2pt"),t(B,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(z,"id","i"),t(z,"orient","auto"),t(z,"overflow","visible"),t(z,"refX","0"),t(z,"refY","0"),t(ur,"fill","#0197fd"),t(ur,"fill-rule","evenodd"),t(ur,"stroke","#0197fd"),t(ur,"stroke-width",".2pt"),t(ur,"d","m-1.154 0 1.73-1v2l-1.73-1z"),t(jt,"id","l"),t(jt,"orient","auto"),t(jt,"overflow","visible"),t(jt,"refX","0"),t(jt,"refY","0"),t(Gt,"fill","#0197fd"),t(Gt,"fill-rule","evenodd"),t(Gt,"stroke","#0197fd"),t(Gt,"stroke-width",".2pt"),t(Gt,"d","m1.154 0-1.73 1v-2l1.73 1z"),t(X,"id","k"),t(X,"orient","auto"),t(X,"overflow","visible"),t(X,"refX","0"),t(X,"refY","0"),t(A,"width","740"),t(A,"height","75"),t(A,"x","285.092"),t(A,"y","-370.066"),t(A,"fill","#e9b96e"),t(A,"rx","18.031"),t(A,"ry","18.031"),t(Yt,"width","1280"),t(Yt,"height","70"),t(Yt,"x","-254.908"),t(Yt,"y","219.934"),t(Yt,"fill","#c1504f"),t(Yt,"rx","18.031"),t(Yt,"ry","18.031"),t(Be,"width","660"),t(Be,"height","150"),t(Be,"x","180.092"),t(Be,"y","-270.066"),t(Be,"fill","#8e8ed7"),t(Be,"rx","18.031"),t(Be,"ry","18.031"),t(g,"width","290"),t(g,"height","140"),t(g,"x","545.092"),t(g,"y","-265.066"),t(g,"fill","#504fc1"),t(g,"rx","18.031"),t(g,"ry","18.031"),t(Ft,"width","280"),t(Ft,"height","80"),t(Ft,"x","550.092"),t(Ft,"y","-210.066"),t(Ft,"fill","#0197fd"),t(Ft,"rx","18.031"),t(Ft,"ry","18.031"),t(me,"width","1280"),t(me,"height","25"),t(me,"x","-254.908"),t(me,"y","299.934"),t(me,"fill","#333"),t(me,"rx","0"),t(me,"ry","0"),t(U,"width","150"),t(U,"height","50"),t(U,"x","50.092"),t(U,"y","229.934"),t(U,"fill","#0197fd"),t(U,"rx","18.031"),t(U,"ry","18.031"),t(Nt,"width","230"),t(Nt,"height","90"),t(Nt,"x","10.092"),t(Nt,"y","99.934"),t(Nt,"fill","#0197fd"),t(Nt,"rx","18.031"),t(Nt,"ry","18.031"),t(xe,"width","280"),t(xe,"height","25"),t(xe,"x","290.092"),t(xe,"y","-325.066"),t(xe,"fill","#504fc1"),t(xe,"rx","10"),t(xe,"ry","10"),t(T,"width","530"),t(T,"height","50"),t(T,"x","-254.908"),t(T,"y","-370.066"),t(T,"fill","#e9b96e"),t(T,"rx","18.031"),t(T,"ry","18.031"),t(Rt,"width","530"),t(Rt,"height","165"),t(Rt,"x","-254.908"),t(Rt,"y","-90.066"),t(Rt,"fill","#8ed78e"),t(Rt,"rx","18.031"),t(Rt,"ry","18.031"),t(ht,"width","250"),t(ht,"height","105"),t(ht,"x","20.092"),t(ht,"y","-85.066"),t(ht,"fill","green"),t(ht,"rx","18.031"),t(ht,"ry","18.031"),t(O,"width","240"),t(O,"height","155"),t(O,"x","-229.908"),t(O,"y","-85.066"),t(O,"fill","green"),t(O,"rx","18.031"),t(O,"ry","18.031"),t(Ht,"width","130"),t(Ht,"height","40"),t(Ht,"x","-169.908"),t(Ht,"y","234.934"),t(Ht,"fill","#0197fd"),t(Ht,"rx","18.031"),t(Ht,"ry","18.031"),t(le,"width","1280"),t(le,"height","25"),t(le,"x","-254.908"),t(le,"y","324.934"),t(le,"fill","#0197fd"),t(le,"rx","0"),t(le,"ry","0"),t(L,"width","280"),t(L,"height","25"),t(L,"x","740.092"),t(L,"y","-325.066"),t(L,"fill","#504fc1"),t(L,"rx","10"),t(L,"ry","10"),t(Wt,"width","130"),t(Wt,"height","20"),t(Wt,"x","881.663"),t(Wt,"y","327.434"),t(Wt,"fill","#0ff"),t(Wt,"rx","6.25"),t(Wt,"ry","6.25"),t(pe,"width","280"),t(pe,"height","37"),t(pe,"x","550.092"),t(pe,"y","-247.066"),t(pe,"fill","#0197fd"),t(pe,"rx","18.031"),t(pe,"ry","18.031"),t(P,"width","250"),t(P,"height","50"),t(P,"x","20.092"),t(P,"y","19.934"),t(P,"fill","green"),t(P,"rx","18.031"),t(P,"ry","18.031"),t(Kt,"width","150"),t(Kt,"height","50"),t(Kt,"x","476.791"),t(Kt,"y","229.826"),t(Kt,"fill","#0197fd"),t(Kt,"rx","18.031"),t(Kt,"ry","18.031"),t(ce,"width","280"),t(ce,"height","140"),t(ce,"x","185.092"),t(ce,"y","-265.066"),t(ce,"fill","#504fc1"),t(ce,"rx","18.031"),t(ce,"ry","18.031"),t(M,"width","150"),t(M,"height","100"),t(M,"x","310.092"),t(M,"y","-230.066"),t(M,"fill","#0197fd"),t(M,"rx","18.031"),t(M,"ry","18.031"),t(Zt,"width","160"),t(Zt,"height","140"),t(Zt,"x","865.092"),t(Zt,"y","-265.066"),t(Zt,"fill","#8e8ed7"),t(Zt,"rx","18.031"),t(Zt,"ry","18.031"),t(R,"transform","translate(254.908 370.066)"),t(E,"fill","none"),t(E,"stroke","#0197fd"),t(E,"stroke-width","5"),t(E,"marker-end","url(#a)"),t(E,"marker-start","url(#b)"),t(E,"d","M125 239.931v15.137"),t(ue,"fill","none"),t(ue,"stroke","#0197fd"),t(ue,"stroke-width","5"),t(ue,"marker-end","url(#c)"),t(ue,"marker-start","url(#d)"),t(ue,"d","M125 354.536v29.963"),t(Xe,"fill","none"),t(Xe,"stroke","#0197fd"),t(Xe,"stroke-width","5"),t(Xe,"marker-end","url(#e)"),t(Xe,"marker-start","url(#f)"),t(Xe,"d","M544.054.019h-23.75v312.153H245.355"),t(he,"fill","none"),t(he,"stroke","green"),t(he,"stroke-width","5"),t(he,"marker-end","url(#g)"),t(he,"marker-start","url(#h)"),t(he,"d","M10-153.8V63.431"),t(rr,"fill","none"),t(rr,"stroke","#0197fd"),t(rr,"stroke-width","5"),t(rr,"marker-end","url(#i)"),t(rr,"marker-start","url(#j)"),t(rr,"d","M-105 227.477v158.381"),t(G,"fill","none"),t(G,"stroke","#0197fd"),t(G,"stroke-width","5"),t(G,"marker-end","url(#k)"),t(G,"marker-start","url(#l)"),t(G,"d","M-105 440.19v39.286"),t(kt,"fill","none"),t(kt,"stroke","navy"),t(kt,"stroke-width","5"),t(kt,"marker-end","url(#m)"),t(kt,"marker-start","url(#n)"),t(kt,"d","M415-135.985v21.97"),t(Qt,"fill","none"),t(Qt,"stroke","navy"),t(Qt,"stroke-width","5"),t(Qt,"marker-end","url(#o)"),t(Qt,"marker-start","url(#p)"),t(Qt,"d","M793.582-133.605v21.97"),t(dt,"fill","none"),t(dt,"stroke","green"),t(dt,"stroke-width","5"),t(dt,"marker-end","url(#q)"),t(dt,"marker-start","url(#r)"),t(dt,"d","M385.032-131.558v12.348H161.255V63.47"),t($e,"fill","none"),t($e,"stroke","#0197fd"),t($e,"stroke-width","5"),t($e,"marker-end","url(#s)"),t($e,"marker-start","url(#t)"),t($e,"d","M551.699 46.395v337.047"),t(b,"id","w"),t(b,"fill","none"),t(b,"stroke","#0197fd"),t(b,"stroke-dasharray","none"),t(b,"stroke-linecap","butt"),t(b,"stroke-linejoin","miter"),t(b,"stroke-miterlimit","4"),t(b,"stroke-opacity","1"),t(b,"stroke-width","5"),t(b,"marker-end","url(#u)"),t(b,"marker-start","url(#v)"),t(b,"d","M125 445.292v32.991"),t(b,"display","inline"),t(Jt,"fill","none"),t(Jt,"stroke","green"),t(Jt,"stroke-width","5"),t(Jt,"marker-end","url(#q)"),t(Jt,"marker-start","url(#r)"),t(Jt,"d","M366.875 41.395v12.098H186.848v10.5"),t(Ct,"fill","none"),t(Ct,"stroke","navy"),t(Ct,"stroke-width","5"),t(Ct,"marker-end","url(#o)"),t(Ct,"marker-start","url(#p)"),t(Ct,"d","M858.183-38.504h-16.366"),iu(Le,"xlink:href","#w"),t(Le,"width","1280"),t(Le,"height","720"),t(Le,"transform","translate(426.699 .994)"),t(ft,"transform","translate(255 210)"),t(te,"font-weight","700"),t(bt,"x","27.248"),t(bt,"y","-72.382"),t(bt,"font-size","13"),t(Et,"font-weight","400"),t(yt,"x","27.248"),t(yt,"y","-54.882"),t(yt,"font-size","14"),t(yt,"font-weight","700"),t(vt,"x","27.248"),t(vt,"y","-37.382"),t(vt,"font-size","14"),t(vt,"font-weight","700"),t(mt,"x","27.248"),t(mt,"y","-19.882"),t(mt,"font-size","14"),t(mt,"font-weight","700"),t(q,"x","27.248"),t(q,"y","-2.382"),t(q,"font-size","14"),t(q,"font-weight","700"),t(ge,"x","27.248"),t(ge,"y","15.118"),t(ge,"font-size","14"),t(ge,"font-weight","700"),t(H,"font-weight","400"),t(xt,"x","27.248"),t(xt,"y","32.618"),t(xt,"font-size","14"),t(xt,"font-weight","700"),t(sr,"x","27.248"),t(sr,"y","50.118"),t(sr,"font-size","14"),t(sr,"font-weight","700"),t(Ze,"font-weight","400"),t(ke,"x","27.248"),t(ke,"y","67.618"),t(ke,"font-size","14"),t(ke,"font-weight","700"),t(N,"x","27.248"),t(N,"y","-72.382"),t(N,"fill","#fff"),t(N,"font-size","16"),t(N,"font-weight","400"),t(N,"letter-spacing","0"),f(N,"line-height","125%"),t(N,"transform","translate(254.908 370.066)"),t(N,"word-spacing","0"),t(Kr,"font-weight","600"),t(Ot,"x","620.536"),t(Ot,"y","-250.266"),t(pt,"x","620.536"),t(pt,"y","-250.266"),t(pt,"font-size","16"),t(pt,"font-weight","700"),t(pt,"letter-spacing","0"),f(pt,"line-height","125%"),t(pt,"transform","translate(254.908 370.066)"),t(pt,"word-spacing","0"),t(ar,"x","601.856"),t(ar,"y","-191.913"),f(ar,"text-align","start"),t(zr,"x","601.856"),t(zr,"y","-173.907"),t(zr,"font-weight","700"),f(zr,"text-align","start"),t(Lr,"x","601.856"),t(Lr,"y","-156.407"),t(Lr,"font-weight","700"),f(Lr,"text-align","start"),t(Re,"x","601.856"),t(Re,"y","-138.907"),t(Re,"font-weight","700"),f(Re,"text-align","start"),t(_t,"x","601.856"),t(_t,"y","-191.913"),t(_t,"fill","#fff"),t(_t,"font-size","14"),t(_t,"font-weight","400"),t(_t,"letter-spacing","0"),f(_t,"text-align","start"),f(_t,"line-height","125%"),t(_t,"transform","translate(254.908 370.066)"),t(_t,"word-spacing","0"),t(or,"x","109.561"),t(or,"y","254.736"),t(Se,"x","109.561"),t(Se,"y","254.736"),t(Se,"fill","#fff"),t(Se,"font-size","14"),t(Se,"font-weight","700"),t(Se,"letter-spacing","0"),f(Se,"line-height","125%"),t(Se,"transform","translate(254.908 370.066)"),t(Se,"word-spacing","0"),t(nr,"x","821.302"),t(nr,"y","263.136"),t(de,"x","821.302"),t(de,"y","263.136"),t(de,"fill","#fff"),t(de,"font-size","22"),t(de,"font-weight","700"),t(de,"letter-spacing","0"),f(de,"text-align","center"),f(de,"line-height","125%"),t(de,"text-anchor","middle"),t(de,"transform","translate(254.908 370.066)"),t(de,"word-spacing","0"),t(hr,"x","53.376"),t(hr,"y","120.866"),t(hr,"font-weight","700"),f(hr,"text-align","start"),t(Pr,"x","53.376"),t(Pr,"y","140.866"),t(Pr,"font-weight","700"),f(Pr,"text-align","start"),t(Mr,"x","53.376"),t(Mr,"y","160.866"),t(Mr,"font-weight","700"),f(Mr,"text-align","start"),t(ir,"x","53.376"),t(ir,"y","180.866"),t(ir,"font-weight","700"),f(ir,"text-align","start"),t(ee,"x","53.376"),t(ee,"y","120.866"),t(ee,"fill","#fff"),t(ee,"font-size","16"),t(ee,"font-weight","400"),t(ee,"letter-spacing","0"),f(ee,"line-height","125%"),t(ee,"transform","translate(254.908 370.066)"),t(ee,"word-spacing","0"),t(jr,"x","275.561"),t(jr,"y","84.085"),t($r,"x","275.561"),t($r,"y","101.585"),t(Qe,"x","275.561"),t(Qe,"y","119.085"),t(Ve,"x","275.561"),t(Ve,"y","136.585"),t(re,"x","275.561"),t(re,"y","84.085"),t(re,"class","themed"),t(re,"font-size","14"),t(re,"font-weight","400"),t(re,"letter-spacing","0"),f(re,"line-height","125%"),t(re,"transform","translate(254.908 370.066)"),t(re,"word-spacing","0"),t(kr,"x","85.209"),t(kr,"y","317.33"),t(kr,"font-size","18"),t(Ie,"x","85.209"),t(Ie,"y","317.33"),t(Ie,"fill","#fff"),t(Ie,"font-size","20"),t(Ie,"font-weight","700"),t(Ie,"letter-spacing","0"),f(Ie,"line-height","125%"),t(Ie,"transform","translate(254.908 370.066)"),t(Ie,"word-spacing","0"),t(Rr,"x","128.232"),t(Rr,"y","342.33"),t(Rr,"font-size","18"),t(Ae,"x","128.232"),t(Ae,"y","342.33"),t(Ae,"fill","#fff"),t(Ae,"font-size","20"),t(Ae,"font-weight","700"),t(Ae,"letter-spacing","0"),f(Ae,"line-height","125%"),t(Ae,"transform","translate(254.908 370.066)"),t(Ae,"word-spacing","0"),t(Vr,"x","655.565"),t(Vr,"y","-338.114"),t(Fr,"x","655.565"),t(Fr,"y","-310.614"),t(zt,"x","655.565"),t(zt,"y","-338.114"),t(zt,"font-size","22"),t(zt,"font-weight","700"),t(zt,"letter-spacing","0"),f(zt,"text-align","center"),f(zt,"line-height","125%"),t(zt,"text-anchor","middle"),t(zt,"transform","translate(254.908 370.066)"),t(zt,"word-spacing","0"),t(ds,"x","-176.86"),t(ds,"y","36.25"),f(ds,"text-align","start"),t(Ye,"x","-176.86"),t(Ye,"y","36.25"),t(Ye,"fill","#fff"),t(Ye,"font-size","16"),t(Ye,"font-weight","700"),t(Ye,"letter-spacing","0"),f(Ye,"line-height","125%"),t(Ye,"transform","rotate(-90 312.487 57.579)"),t(Ye,"word-spacing","0"),t(js,"x","-92.018"),t(js,"y","-339.082"),t(Lt,"x","-92.018"),t(Lt,"y","-339.082"),t(Lt,"font-size","22"),t(Lt,"font-weight","700"),t(Lt,"letter-spacing","0"),f(Lt,"line-height","125%"),t(Lt,"transform","translate(254.908 370.066)"),t(Lt,"word-spacing","0"),t(ys,"x","169.737"),t(ys,"y","571.479"),f(ys,"text-align","center"),t(vs,"x","169.737"),t(vs,"y","591.479"),f(vs,"text-align","center"),t(Ue,"x","169.737"),t(Ue,"y","571.479"),t(Ue,"fill","#fff"),t(Ue,"font-size","16"),t(Ue,"font-weight","700"),t(Ue,"letter-spacing","0"),f(Ue,"text-align","center"),f(Ue,"line-height","125%"),t(Ue,"text-anchor","middle"),t(Ue,"transform","rotate(-90 312.487 57.579)"),t(Ue,"word-spacing","0"),t(lr,"x","825.292"),t(lr,"y","-307.524"),t(lr,"font-size","14"),t(lr,"font-weight","700"),t(Fe,"x","825.292"),t(Fe,"y","-307.524"),t(Fe,"fill","#fff"),t(Fe,"font-size","16"),t(Fe,"font-weight","400"),t(Fe,"letter-spacing","0"),f(Fe,"line-height","125%"),t(Fe,"transform","translate(254.908 370.066)"),t(Fe,"word-spacing","0"),t(ms,"x","-217.554"),t(ms,"y","-21.17"),t(ms,"font-size","13"),t(Jr,"x","-215.554"),t(Jr,"y","-3.67"),t(Jr,"font-size","14"),t(Jr,"font-weight","700"),t(ct,"x","-215.554"),t(ct,"y","13.83"),t(ct,"font-size","14"),t(ct,"font-weight","700"),t(se,"x","-217.554"),t(se,"y","-21.17"),t(se,"fill","#fff"),t(se,"font-size","16"),t(se,"font-weight","400"),t(se,"letter-spacing","0"),f(se,"line-height","125%"),t(se,"transform","translate(254.908 370.066)"),t(se,"word-spacing","0"),t(dr,"x","-15.782"),t(dr,"y","-236.764"),f(dr,"text-align","start"),t(Ne,"x","-15.782"),t(Ne,"y","-236.764"),t(Ne,"fill","green"),t(Ne,"font-size","16"),t(Ne,"font-weight","700"),t(Ne,"letter-spacing","0"),f(Ne,"line-height","125%"),t(Ne,"transform","rotate(-90 312.487 57.579)"),t(Ne,"word-spacing","0"),t(Cs,"x","-4.725"),t(Cs,"y","-235.652"),t(ts,"font-weight","700"),f(ts,"text-align","end"),t(Ds,"x","-9.819"),t(Ds,"y","-215.652"),t(Dr,"font-weight","700"),f(Dr,"text-align","end"),t(Ts,"x","-9.819"),t(Ts,"y","-195.652"),t(qs,"font-weight","700"),f(qs,"text-align","end"),t(Os,"x","-9.819"),t(Os,"y","-175.652"),t(Pt,"x","-9.819"),t(Pt,"y","-235.652"),t(Pt,"fill","green"),t(Pt,"font-size","16"),t(Pt,"font-weight","400"),t(Pt,"letter-spacing","0"),f(Pt,"text-align","end"),f(Pt,"line-height","125%"),t(Pt,"text-anchor","end"),t(Pt,"transform","translate(254.908 370.066)"),t(Pt,"word-spacing","0"),t(ws,"font-weight","700"),t(Bs,"x","808.684"),t(Bs,"y","-279.241"),t(pr,"x","808.684"),t(pr,"y","-279.241"),t(pr,"fill","navy"),t(pr,"font-size","16"),t(pr,"font-weight","400"),t(pr,"letter-spacing","0"),f(pr,"line-height","125%"),t(pr,"transform","translate(254.908 370.066)"),t(pr,"word-spacing","0"),t(es,"x","-122.428"),t(es,"y","260.154"),t(cr,"x","-122.428"),t(cr,"y","260.154"),t(cr,"fill","#fff"),t(cr,"font-size","14"),t(cr,"font-weight","700"),t(cr,"letter-spacing","0"),f(cr,"line-height","125%"),t(cr,"transform","translate(254.908 370.066)"),t(cr,"word-spacing","0"),t(Sr,"x","503.676"),t(Sr,"y","-201.222"),f(Sr,"text-align","center"),t(gs,"x","503.676"),t(gs,"y","-181.222"),f(gs,"text-align","center"),t(je,"x","503.676"),t(je,"y","-201.222"),t(je,"fill","#fff"),t(je,"font-size","16"),t(je,"font-weight","700"),t(je,"letter-spacing","0"),f(je,"text-align","center"),f(je,"line-height","125%"),t(je,"text-anchor","middle"),t(je,"transform","translate(254.908 370.066)"),t(je,"word-spacing","0"),t(rs,"x","358.742"),t(rs,"y","-308.324"),t(rs,"font-size","14"),t(rs,"font-weight","700"),t(He,"x","358.742"),t(He,"y","-308.324"),t(He,"fill","#fff"),t(He,"font-size","16"),t(He,"font-weight","400"),t(He,"letter-spacing","0"),f(He,"line-height","125%"),t(He,"transform","translate(254.908 370.066)"),t(He,"word-spacing","0"),t(_a,"font-weight","700"),t(tr,"x","435.118"),t(tr,"y","-278.714"),t(Je,"x","435.118"),t(Je,"y","-278.714"),t(Je,"fill","navy"),t(Je,"font-size","16"),t(Je,"font-weight","400"),t(Je,"letter-spacing","0"),f(Je,"line-height","125%"),t(Je,"transform","translate(254.908 370.066)"),t(Je,"word-spacing","0"),t(bs,"x","898.837"),t(bs,"y","342.654"),t(bs,"font-size","14"),t(ae,"x","898.837"),t(ae,"y","342.654"),t(ae,"font-size","16"),t(ae,"font-weight","400"),t(ae,"letter-spacing","0"),f(ae,"line-height","125%"),t(ae,"transform","translate(254.908 370.066)"),t(ae,"word-spacing","0"),t(Es,"x","689.436"),t(Es,"y","-222.601"),f(Es,"text-align","center"),t(We,"x","689.436"),t(We,"y","-222.601"),t(We,"fill","#fff"),t(We,"font-size","16"),t(We,"font-weight","700"),t(We,"letter-spacing","0"),f(We,"text-align","center"),f(We,"line-height","125%"),t(We,"text-anchor","middle"),t(We,"transform","translate(254.908 370.066)"),t(We,"word-spacing","0"),t(ss,"x","53.503"),t(ss,"y","270.901"),t(ss,"fill","#fff"),t(ss,"font-size","14"),t(yr,"x","53.503"),t(yr,"y","270.901"),t(yr,"font-size","22"),t(yr,"font-weight","400"),t(yr,"letter-spacing","0"),f(yr,"line-height","125%"),t(yr,"transform","translate(254.908 370.066)"),t(yr,"word-spacing","0"),t(Tr,"fill","none"),t(Tr,"stroke","#000"),t(Tr,"d","M.5 577.5h1279"),t($s,"x","-255.957"),t($s,"y","-382.556"),t(vr,"x","-255.957"),t(vr,"y","-382.556"),t(vr,"font-size","12"),t(vr,"font-weight","400"),t(vr,"letter-spacing","0"),f(vr,"line-height","125%"),t(vr,"transform","translate(254.908 370.066)"),t(vr,"word-spacing","0"),t(Vs,"x","538.587"),t(Vs,"y","251.409"),t(Ce,"x","538.587"),t(Ce,"y","251.409"),t(Ce,"fill","#fff"),t(Ce,"font-size","14"),t(Ce,"font-weight","700"),t(Ce,"letter-spacing","0"),f(Ce,"line-height","125%"),t(Ce,"transform","translate(254.908 370.066)"),t(Ce,"word-spacing","0"),t(Ee,"x","552.125"),t(Ee,"y","270.839"),t(Ee,"fill","#fff"),t(Ee,"font-size","12"),t(Ee,"font-weight","400"),f(Ee,"text-align","center"),t(Ee,"text-anchor","middle"),t(be,"x","552.125"),t(be,"y","270.839"),t(be,"font-size","22"),t(be,"font-weight","700"),t(be,"letter-spacing","0"),f(be,"line-height","125%"),t(be,"transform","translate(254.908 370.066)"),t(be,"word-spacing","0"),t(zs,"x","384.885"),t(zs,"y","-205.651"),f(zs,"text-align","center"),t(_e,"x","384.885"),t(_e,"y","-185.651"),f(_e,"text-align","center"),t(Ir,"x","384.885"),t(Ir,"y","-165.651"),f(Ir,"text-align","center"),t(Ls,"x","384.885"),t(Ls,"y","-145.651"),f(Ls,"text-align","center"),t(Bt,"x","384.885"),t(Bt,"y","-205.651"),t(Bt,"fill","#ccc"),t(Bt,"font-size","16"),t(Bt,"font-weight","400"),t(Bt,"letter-spacing","0"),f(Bt,"text-align","center"),f(Bt,"line-height","125%"),t(Bt,"text-anchor","middle"),t(Bt,"transform","translate(254.908 370.066)"),t(Bt,"word-spacing","0"),t(Fs,"x","196.344"),t(Fs,"y","-250.519"),t(mr,"x","196.344"),t(mr,"y","-250.519"),t(mr,"font-size","16"),t(mr,"font-weight","700"),t(mr,"letter-spacing","0"),f(mr,"line-height","125%"),t(mr,"transform","translate(254.908 370.066)"),t(mr,"word-spacing","0"),t(Ns,"x","155.722"),t(Ns,"y","-215.152"),t(as,"x","150.628"),t(as,"y","-195.152"),t(as,"font-weight","700"),f(as,"text-align","end"),t(St,"x","150.628"),t(St,"y","-215.152"),t(St,"fill","green"),t(St,"font-size","16"),t(St,"font-weight","400"),t(St,"letter-spacing","0"),f(St,"text-align","end"),f(St,"line-height","125%"),t(St,"text-anchor","end"),t(St,"transform","translate(254.908 370.066)"),t(St,"word-spacing","0"),t(Ps,"x","334.469"),t(Ps,"y","-85.119"),t(os,"x","329.376"),t(os,"y","-65.119"),t(os,"font-weight","700"),f(os,"text-align","end"),t(De,"x","329.376"),t(De,"y","-85.119"),t(De,"fill","green"),t(De,"font-size","16"),t(De,"font-weight","400"),t(De,"letter-spacing","0"),f(De,"text-align","end"),f(De,"line-height","125%"),t(De,"text-anchor","end"),t(De,"transform","translate(254.908 370.066)"),t(De,"word-spacing","0"),t(Ms,"x","875.229"),t(Ms,"y","-243.73"),t(Ms,"font-weight","600"),t(xr,"x","875.229"),t(xr,"y","-243.73"),t(xr,"font-size","16"),t(xr,"font-weight","700"),t(xr,"letter-spacing","0"),f(xr,"line-height","125%"),t(xr,"transform","translate(254.908 370.066)"),t(xr,"word-spacing","0"),t(Zs,"x","195.519"),t(Zs,"y","-214.337"),t(Js,"x","195.519"),t(Js,"y","-194.337"),t(Gs,"x","195.519"),t(Gs,"y","-174.337"),t(ta,"x","195.519"),t(ta,"y","-154.337"),t(Te,"x","195.519"),t(Te,"y","-214.337"),t(Te,"font-size","16"),t(Te,"font-weight","400"),t(Te,"letter-spacing","0"),f(Te,"text-align","start"),f(Te,"line-height","125%"),t(Te,"transform","translate(254.908 370.066)"),t(Te,"word-spacing","-7.92"),t(ea,"x","895.201"),t(ea,"y","-219.286"),t(ns,"x","895.201"),t(ns,"y","-199.286"),t(is,"x","895.201"),t(is,"y","-179.286"),t(ra,"x","895.201"),t(ra,"y","-159.286"),t(ls,"x","895.201"),t(ls,"y","-139.286"),t(Xt,"x","895.201"),t(Xt,"y","-219.286"),t(Xt,"font-size","16"),t(Xt,"font-weight","400"),t(Xt,"letter-spacing","0"),f(Xt,"text-align","start"),f(Xt,"line-height","125%"),t(Xt,"transform","translate(254.908 370.066)"),t(Xt,"word-spacing","-7.92"),Al(k,sa)},m(Or,x){h(Or,k,x),e(k,w),e(w,$t),e($t,It),e(w,d),e(d,Vt),e(w,ye),e(ye,Oe),e(w,qe),e(qe,st),e(w,oe),e(oe,At),e(w,Ut),e(Ut,ze),e(w,ne),e(ne,gt),e(w,Mt),e(Mt,$),e(w,ie),e(ie,ve),e(w,j),e(j,C),e(w,W),e(W,at),e(w,K),e(K,V),e(w,S),e(S,Y),e(w,Z),e(Z,ot),e(w,Q),e(Q,J),e(w,_),e(_,nt),e(w,I),e(I,it),e(w,tt),e(tt,D),e(w,et),e(et,F),e(w,z),e(z,B),e(w,jt),e(jt,ur),e(w,X),e(X,Gt),e(k,R),e(R,A),e(R,Yt),e(R,Be),e(R,g),e(R,Ft),e(R,me),e(R,U),e(R,Nt),e(R,xe),e(R,T),e(R,Rt),e(R,ht),e(R,O),e(R,Ht),e(R,le),e(R,L),e(R,Wt),e(R,pe),e(R,P),e(R,Kt),e(R,ce),e(R,M),e(R,Zt),e(k,ft),e(ft,E),e(ft,ue),e(ft,Xe),e(ft,he),e(ft,rr),e(ft,G),e(ft,kt),e(ft,Qt),e(ft,dt),e(ft,$e),e(ft,b),e(ft,Jt),e(ft,Ct),e(ft,Le),e(k,N),e(N,bt),e(bt,te),e(te,Dt),e(bt,Pe),e(N,yt),e(yt,we),e(yt,Et),e(Et,Me),e(N,vt),e(vt,Tt),e(N,mt),e(mt,fe),e(N,q),e(q,rt),e(N,ge),e(ge,Ur),e(N,xt),e(xt,Ge),e(xt,H),e(H,Er),e(N,sr),e(sr,lt),e(N,ke),e(ke,hs),e(ke,Ze),e(Ze,_r),e(k,pt),e(pt,Ot),e(Ot,ya),e(Ot,Kr),e(Kr,m),e(Ot,qt),e(qt,va),e(k,_t),e(_t,ar),e(ar,Us),e(_t,zr),e(zr,Br),e(_t,Lr),e(Lr,ma),e(_t,Re),e(Re,xa),e(k,Se),e(Se,or),e(or,wa),e(k,de),e(de,nr),e(nr,ga),e(k,ee),e(ee,hr),e(hr,fr),e(ee,Pr),e(Pr,Xr),e(ee,Mr),e(Mr,ba),e(ee,ir),e(ir,Ea),e(k,re),e(re,jr),e(jr,Zr),e(re,$r),e($r,fs),e(re,Qe),e(Qe,Gr),e(re,Ve),e(Ve,ks),e(k,Ie),e(Ie,kr),e(kr,Qr),e(k,Ae),e(Ae,Rr),e(Rr,Cr),e(k,zt),e(zt,Vr),e(Vr,Yr),e(zt,Fr),e(Fr,Qo),e(k,Ye),e(Ye,ds),e(ds,no),e(k,Lt),e(Lt,js),e(js,Oa),e(k,Ue),e(Ue,ys),e(ys,qa),e(Ue,vs),e(vs,Jo),e(k,Fe),e(Fe,lr),e(lr,tn),e(k,se),e(se,ms),e(ms,en),e(se,Jr),e(Jr,io),e(se,ct),e(ct,rn),e(k,Ne),e(Ne,dr),e(dr,sn),e(k,Pt),e(Pt,Cs),e(Cs,an),e(Pt,Ds),e(Ds,ts),e(ts,xs),e(Pt,Ts),e(Ts,Dr),e(Dr,on),e(Pt,Os),e(Os,qs),e(qs,Ba),e(k,pr),e(pr,Bs),e(Bs,ws),e(ws,Nr),e(k,cr),e(cr,es),e(es,nn),e(k,je),e(je,Sr),e(Sr,ln),e(je,gs),e(gs,pn),e(k,He),e(He,rs),e(rs,cn),e(k,Je),e(Je,tr),e(tr,_a),e(_a,Xa),e(k,ae),e(ae,bs),e(bs,$a),e(k,We),e(We,Es),e(Es,Xs),e(k,yr),e(yr,ss),e(ss,un),e(k,Tr),e(k,vr),e(vr,$s),e($s,lo),e(k,Ce),e(Ce,Vs),e(Vs,po),e(k,be),e(be,Ee),e(Ee,_s),e(k,Bt),e(Bt,zs),e(zs,co),e(Bt,_e),e(_e,hn),e(Bt,Ir),e(Ir,fn),e(Bt,Ls),e(Ls,Ys),e(k,mr),e(mr,Fs),e(Fs,Va),e(k,St),e(St,Ns),e(Ns,Hs),e(St,as),e(as,kn),e(k,De),e(De,Ps),e(Ps,Ar),e(De,os),e(os,Ws),e(k,xr),e(xr,Ms),e(Ms,Ks),e(k,Te),e(Te,Zs),e(Zs,Qs),e(Te,Js),e(Js,dn),e(Te,Gs),e(Gs,za),e(Te,ta),e(ta,uo),e(k,Xt),e(Xt,ea),e(ea,ho),e(Xt,ns),e(ns,Yi),e(Xt,is),e(is,La),e(Xt,ra),e(ra,fo),e(Xt,ls),e(ls,Fi)},p(Or,[x]){Al(k,sa=lu(Ya,[{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{viewBox:"0 0 1280 720"},x&1&&Or[0]]))},i:el,o:el,d(Or){Or&&r(k)}}}function cu(As,k,w){return As.$$set=$t=>{w(0,k=Vi(Vi({},k),Ul($t)))},k=Ul(k),[k]}let uu=class extends up{constructor(k){super(),hp(this,k,cu,pu,fp,{})}};function hu(As){let k,w,$t,It,d,Vt,ye,Oe,qe,st,oe,At,Ut,ze,ne,gt,Mt,$,ie,ve,j,C,W,at,K,V,S,Y,Z,ot,Q,J,_,nt,I,it,tt,D,et,F,z,B,jt,ur,X,Gt,R,A,Yt,Be,g,Ft,me,U,Nt,xe,T,Rt,ht,O,Ht,le,L,Wt,pe,P,Kt,ce,M,Zt,ft,E,ue,Xe,he,rr,G,kt,Qt,dt,$e,b,Jt,Ct,Le,N,bt,te,Dt,Pe,yt,we,Et,Me,vt,Tt,mt,fe,q,rt,ge,Ur,xt,Ge,H,Er,sr,lt,ke,hs,Ze=[{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{id:"raspberrypi_video_api"},{version:"1.1"},{viewBox:"0 0 707.107 659.024"},As[0]],_r={};for(let pt=0;pt<Ze.length;pt+=1)_r=Vi(_r,Ze[pt]);return{c(){k=o("svg"),w=o("defs"),$t=o("style"),It=i("svg#raspberrypi_video_api text{font-size:27px}"),d=o("g"),Vt=o("g"),ye=o("g"),Oe=o("g"),qe=o("g"),st=o("g"),oe=o("path"),At=o("path"),Ut=o("use"),ze=o("g"),ne=o("g"),gt=o("g"),Mt=o("g"),$=o("g"),ie=o("path"),ve=o("path"),j=o("path"),C=o("path"),W=o("path"),at=o("path"),K=o("path"),V=o("path"),S=o("path"),Y=o("path"),Z=o("path"),ot=o("path"),Q=o("path"),J=o("path"),_=o("path"),nt=o("path"),I=o("path"),it=o("path"),tt=o("path"),D=o("path"),et=o("path"),F=o("path"),z=o("path"),B=o("text"),jt=o("tspan"),ur=i("application"),X=o("text"),Gt=o("tspan"),R=i("OpenGL ES"),A=o("text"),Yt=o("tspan"),Be=i("application"),g=o("text"),Ft=o("tspan"),me=i("application"),U=o("text"),Nt=o("tspan"),xe=i("Media"),T=o("text"),Rt=o("tspan"),ht=i("OpenMax"),O=o("text"),Ht=o("tspan"),le=i("OpenVG"),L=o("text"),Wt=o("tspan"),pe=i("EGL"),P=o("text"),Kt=o("tspan"),ce=i("Kernel driver"),M=o("text"),Zt=o("tspan"),ft=i("Videocore IV GPU"),E=o("text"),ue=o("tspan"),Xe=i("Open"),he=o("tspan"),rr=i("source"),G=o("text"),kt=o("tspan"),Qt=i("Closed"),dt=o("tspan"),$e=i("source"),b=o("text"),Jt=o("tspan"),Ct=i("Binary"),Le=o("tspan"),N=i("blob"),bt=o("path"),te=o("path"),Dt=o("path"),Pe=o("path"),yt=o("path"),we=o("path"),Et=o("path"),Me=o("path"),vt=o("path"),Tt=o("path"),mt=o("path"),fe=o("path"),q=o("path"),rt=o("text"),ge=o("tspan"),Ur=i("ARM"),xt=o("path"),Ge=o("path"),H=o("text"),Er=o("tspan"),sr=i("3D"),lt=o("text"),ke=o("tspan"),hs=i("2D"),this.h()},l(pt){k=n(pt,"svg",{xmlns:!0,"xmlns:xlink":!0,id:!0,version:!0,viewBox:!0});var Ot=s(k);w=n(Ot,"defs",{});var ya=s(w);$t=n(ya,"style",{});var Kr=s($t);It=l(Kr,"svg#raspberrypi_video_api text{font-size:27px}"),Kr.forEach(r),ya.forEach(r),d=n(Ot,"g",{id:!0,transform:!0});var m=s(d);Vt=n(m,"g",{id:!0,transform:!0});var qt=s(Vt);ye=n(qt,"g",{id:!0,transform:!0});var va=s(ye);Oe=n(va,"g",{id:!0});var _t=s(Oe);qe=n(_t,"g",{id:!0});var ar=s(qe);st=n(ar,"g",{id:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,transform:!0});var Us=s(st);oe=n(Us,"path",{id:!0,fill:!0,"stroke-width":!0,d:!0}),s(oe).forEach(r),At=n(Us,"path",{id:!0,fill:!0,"stroke-width":!0,d:!0}),s(At).forEach(r),Us.forEach(r),ar.forEach(r),_t.forEach(r),va.forEach(r),qt.forEach(r),Ut=n(m,"use",{"xlink:href":!0,id:!0,width:!0,height:!0,x:!0,y:!0}),s(Ut).forEach(r),ze=n(m,"g",{id:!0,transform:!0});var zr=s(ze);ne=n(zr,"g",{id:!0,transform:!0});var Br=s(ne);gt=n(Br,"g",{id:!0});var Lr=s(gt);Mt=n(Lr,"g",{id:!0});var ma=s(Mt);$=n(ma,"g",{id:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,transform:!0});var Re=s($);ie=n(Re,"path",{id:!0,fill:!0,"stroke-width":!0,d:!0}),s(ie).forEach(r),ve=n(Re,"path",{id:!0,fill:!0,"stroke-width":!0,d:!0}),s(ve).forEach(r),Re.forEach(r),ma.forEach(r),Lr.forEach(r),Br.forEach(r),zr.forEach(r),j=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(j).forEach(r),C=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(C).forEach(r),W=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(W).forEach(r),at=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(at).forEach(r),K=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(K).forEach(r),V=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(V).forEach(r),S=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(S).forEach(r),Y=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(Y).forEach(r),Z=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(Z).forEach(r),ot=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(ot).forEach(r),Q=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(Q).forEach(r),J=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(J).forEach(r),_=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(_).forEach(r),nt=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(nt).forEach(r),I=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(I).forEach(r),it=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(it).forEach(r),tt=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(tt).forEach(r),D=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(D).forEach(r),et=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(et).forEach(r),F=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(F).forEach(r),z=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,"fill-rule":!0,stroke:!0,"stroke-dasharray":!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-miterlimit":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0}),s(z).forEach(r),B=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var xa=s(B);jt=n(xa,"tspan",{id:!0,x:!0,y:!0});var Se=s(jt);ur=l(Se,"application"),Se.forEach(r),xa.forEach(r),X=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var or=s(X);Gt=n(or,"tspan",{id:!0,x:!0,y:!0});var wa=s(Gt);R=l(wa,"OpenGL ES"),wa.forEach(r),or.forEach(r),A=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var de=s(A);Yt=n(de,"tspan",{id:!0,x:!0,y:!0});var nr=s(Yt);Be=l(nr,"application"),nr.forEach(r),de.forEach(r),g=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ga=s(g);Ft=n(ga,"tspan",{id:!0,x:!0,y:!0});var ee=s(Ft);me=l(ee,"application"),ee.forEach(r),ga.forEach(r),U=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var hr=s(U);Nt=n(hr,"tspan",{id:!0,x:!0,y:!0});var fr=s(Nt);xe=l(fr,"Media"),fr.forEach(r),hr.forEach(r),T=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Pr=s(T);Rt=n(Pr,"tspan",{id:!0,x:!0,y:!0});var Xr=s(Rt);ht=l(Xr,"OpenMax"),Xr.forEach(r),Pr.forEach(r),O=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Mr=s(O);Ht=n(Mr,"tspan",{id:!0,x:!0,y:!0});var ba=s(Ht);le=l(ba,"OpenVG"),ba.forEach(r),Mr.forEach(r),L=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var ir=s(L);Wt=n(ir,"tspan",{id:!0,x:!0,y:!0});var Ea=s(Wt);pe=l(Ea,"EGL"),Ea.forEach(r),ir.forEach(r),P=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var re=s(P);Kt=n(re,"tspan",{id:!0,x:!0,y:!0});var jr=s(Kt);ce=l(jr,"Kernel driver"),jr.forEach(r),re.forEach(r),M=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Zr=s(M);Zt=n(Zr,"tspan",{id:!0,x:!0,y:!0});var $r=s(Zt);ft=l($r,"Videocore IV GPU"),$r.forEach(r),Zr.forEach(r),E=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,class:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var fs=s(E);ue=n(fs,"tspan",{id:!0,x:!0,y:!0});var Qe=s(ue);Xe=l(Qe,"Open"),Qe.forEach(r),he=n(fs,"tspan",{id:!0,x:!0,y:!0});var Gr=s(he);rr=l(Gr,"source"),Gr.forEach(r),fs.forEach(r),G=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,class:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Ve=s(G);kt=n(Ve,"tspan",{id:!0,x:!0,y:!0});var ks=s(kt);Qt=l(ks,"Closed"),ks.forEach(r),dt=n(Ve,"tspan",{id:!0,x:!0,y:!0});var Ie=s(dt);$e=l(Ie,"source"),Ie.forEach(r),Ve.forEach(r),b=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,class:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var kr=s(b);Jt=n(kr,"tspan",{id:!0,x:!0,y:!0});var Qr=s(Jt);Ct=l(Qr,"Binary"),Qr.forEach(r),Le=n(kr,"tspan",{id:!0,x:!0,y:!0});var Ae=s(Le);N=l(Ae,"blob"),Ae.forEach(r),kr.forEach(r),bt=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(bt).forEach(r),te=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(te).forEach(r),Dt=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(Dt).forEach(r),Pe=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(Pe).forEach(r),yt=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(yt).forEach(r),we=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(we).forEach(r),Et=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(Et).forEach(r),Me=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(Me).forEach(r),vt=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(vt).forEach(r),Tt=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(Tt).forEach(r),mt=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(mt).forEach(r),fe=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(fe).forEach(r),q=n(m,"path",{id:!0,fill:!0,"fill-opacity":!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(q).forEach(r),rt=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,class:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Rr=s(rt);ge=n(Rr,"tspan",{id:!0,x:!0,y:!0});var Cr=s(ge);Ur=l(Cr,"ARM"),Cr.forEach(r),Rr.forEach(r),xt=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(xt).forEach(r),Ge=n(m,"path",{id:!0,fill:!0,stroke:!0,"stroke-linecap":!0,"stroke-linejoin":!0,"stroke-opacity":!0,"stroke-width":!0,d:!0,class:!0}),s(Ge).forEach(r),H=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var zt=s(H);Er=n(zt,"tspan",{id:!0,x:!0,y:!0});var Vr=s(Er);sr=l(Vr,"3D"),Vr.forEach(r),zt.forEach(r),lt=n(m,"text",{"xml:space":!0,id:!0,x:!0,y:!0,fill:!0,"fill-opacity":!0,stroke:!0,"font-style":!0,"font-weight":!0,"letter-spacing":!0,style:!0,transform:!0,"word-spacing":!0});var Yr=s(lt);ke=n(Yr,"tspan",{id:!0,x:!0,y:!0});var Fr=s(ke);hs=l(Fr,"2D"),Fr.forEach(r),Yr.forEach(r),m.forEach(r),Ot.forEach(r),this.h()},h(){t(oe,"id","rect5362"),t(oe,"fill","#594d44"),t(oe,"stroke-width",".987"),t(oe,"d","M96.689 153.431h150.56v86.485H96.689z"),t(At,"id","rect5366"),t(At,"fill","#eeee0a"),t(At,"stroke-width",".982"),t(At,"d","M89.871 146.36h150.56v85.741H89.871z"),t(st,"id","g5358"),t(st,"fill-opacity","1"),t(st,"fill-rule","evenodd"),t(st,"stroke","#000"),t(st,"stroke-dasharray","none"),t(st,"stroke-linecap","butt"),t(st,"stroke-linejoin","miter"),t(st,"stroke-miterlimit","4"),t(st,"stroke-opacity","1"),t(st,"transform","translate(-9.596 -17.172)"),t(qe,"id","g5356"),t(Oe,"id","g5354"),t(ye,"id","g5352"),t(ye,"transform","translate(13.636 -25.758)"),t(Vt,"id","use4061"),t(Vt,"transform","translate(-51.476 -43.937)"),iu(Ut,"xlink:href","#use4061"),t(Ut,"id","use4081"),t(Ut,"width","744.094"),t(Ut,"height","1052.362"),t(Ut,"x","0"),t(Ut,"y","0"),t(ie,"id","rect4097"),t(ie,"fill","#594d44"),t(ie,"stroke-width",".987"),t(ie,"d","M96.689 153.431h150.56v86.485H96.689z"),t(ve,"id","rect4101"),t(ve,"fill","#eeee0a"),t(ve,"stroke-width",".982"),t(ve,"d","M89.871 146.36h150.56v85.741H89.871z"),t($,"id","g4093"),t($,"fill-opacity","1"),t($,"fill-rule","evenodd"),t($,"stroke","#000"),t($,"stroke-dasharray","none"),t($,"stroke-linecap","butt"),t($,"stroke-linejoin","miter"),t($,"stroke-miterlimit","4"),t($,"stroke-opacity","1"),t($,"transform","translate(-9.596 -17.172)"),t(Mt,"id","g4091"),t(gt,"id","g4089"),t(ne,"id","g4087"),t(ne,"transform","translate(13.636 -25.758)"),t(ze,"id","use4083"),t(ze,"transform","translate(-51.476 -43.937)"),t(j,"id","rect4117"),t(j,"fill","#594d44"),t(j,"fill-opacity","1"),t(j,"fill-rule","evenodd"),t(j,"stroke","#000"),t(j,"stroke-dasharray","none"),t(j,"stroke-linecap","butt"),t(j,"stroke-linejoin","miter"),t(j,"stroke-miterlimit","4"),t(j,"stroke-opacity","1"),t(j,"stroke-width",".987"),t(j,"d","M49.254 66.565h150.56v86.485H49.254z"),t(C,"id","rect4121"),t(C,"fill","#eeee0a"),t(C,"fill-opacity","1"),t(C,"fill-rule","evenodd"),t(C,"stroke","#000"),t(C,"stroke-dasharray","none"),t(C,"stroke-linecap","butt"),t(C,"stroke-linejoin","miter"),t(C,"stroke-miterlimit","4"),t(C,"stroke-opacity","1"),t(C,"stroke-width",".982"),t(C,"d","M42.436 59.494h150.56v85.741H42.436z"),t(W,"id","rect4117-9"),t(W,"fill","#594d44"),t(W,"fill-opacity","1"),t(W,"fill-rule","evenodd"),t(W,"stroke","#000"),t(W,"stroke-dasharray","none"),t(W,"stroke-linecap","butt"),t(W,"stroke-linejoin","miter"),t(W,"stroke-miterlimit","4"),t(W,"stroke-opacity","1"),t(W,"stroke-width",".987"),t(W,"d","M242.436 66.193h150.56v86.485h-150.56z"),t(at,"id","rect4117-6"),t(at,"fill","#594d44"),t(at,"fill-opacity","1"),t(at,"fill-rule","evenodd"),t(at,"stroke","#000"),t(at,"stroke-dasharray","none"),t(at,"stroke-linecap","butt"),t(at,"stroke-linejoin","miter"),t(at,"stroke-miterlimit","4"),t(at,"stroke-opacity","1"),t(at,"stroke-width",".987"),t(at,"d","M430.82 66.193h150.56v86.485H430.82z"),t(K,"id","rect4117-7"),t(K,"fill","#594d44"),t(K,"fill-opacity","1"),t(K,"fill-rule","evenodd"),t(K,"stroke","#000"),t(K,"stroke-dasharray","none"),t(K,"stroke-linecap","butt"),t(K,"stroke-linejoin","miter"),t(K,"stroke-miterlimit","4"),t(K,"stroke-opacity","1"),t(K,"stroke-width",".987"),t(K,"d","M431.325 206.597h150.56v86.485h-150.56z"),t(V,"id","rect4117-2"),t(V,"fill","#594d44"),t(V,"fill-opacity","1"),t(V,"fill-rule","evenodd"),t(V,"stroke","#000"),t(V,"stroke-dasharray","none"),t(V,"stroke-linecap","butt"),t(V,"stroke-linejoin","miter"),t(V,"stroke-miterlimit","4"),t(V,"stroke-opacity","1"),t(V,"stroke-width",".987"),t(V,"d","M239.911 206.092h150.56v86.485h-150.56z"),t(S,"id","rect4117-0"),t(S,"fill","#594d44"),t(S,"fill-opacity","1"),t(S,"fill-rule","evenodd"),t(S,"stroke","#000"),t(S,"stroke-dasharray","none"),t(S,"stroke-linecap","butt"),t(S,"stroke-linejoin","miter"),t(S,"stroke-miterlimit","4"),t(S,"stroke-opacity","1"),t(S,"stroke-width",".987"),t(S,"d","M50.517 205.082h150.56v86.485H50.517z"),t(Y,"id","rect4121-9"),t(Y,"fill","#eeee0a"),t(Y,"fill-opacity","1"),t(Y,"fill-rule","evenodd"),t(Y,"stroke","#000"),t(Y,"stroke-dasharray","none"),t(Y,"stroke-linecap","butt"),t(Y,"stroke-linejoin","miter"),t(Y,"stroke-miterlimit","4"),t(Y,"stroke-opacity","1"),t(Y,"stroke-width",".982"),t(Y,"d","M235.365 58.989h150.56v85.741h-150.56z"),t(Z,"id","rect4121-91"),t(Z,"fill","#eeee0a"),t(Z,"fill-opacity","1"),t(Z,"fill-rule","evenodd"),t(Z,"stroke","#000"),t(Z,"stroke-dasharray","none"),t(Z,"stroke-linecap","butt"),t(Z,"stroke-linejoin","miter"),t(Z,"stroke-miterlimit","4"),t(Z,"stroke-opacity","1"),t(Z,"stroke-width",".982"),t(Z,"d","M422.739 59.494h150.56v85.741h-150.56z"),t(ot,"id","rect4121-2"),t(ot,"fill","#ee610a"),t(ot,"fill-opacity","1"),t(ot,"fill-rule","evenodd"),t(ot,"stroke","#000"),t(ot,"stroke-dasharray","none"),t(ot,"stroke-linecap","butt"),t(ot,"stroke-linejoin","miter"),t(ot,"stroke-miterlimit","4"),t(ot,"stroke-opacity","1"),t(ot,"stroke-width",".982"),t(ot,"d","M42.436 199.393h150.56v85.741H42.436z"),t(Q,"id","rect4121-2-6"),t(Q,"fill","#ee610a"),t(Q,"fill-opacity","1"),t(Q,"fill-rule","evenodd"),t(Q,"stroke","#000"),t(Q,"stroke-dasharray","none"),t(Q,"stroke-linecap","butt"),t(Q,"stroke-linejoin","miter"),t(Q,"stroke-miterlimit","4"),t(Q,"stroke-opacity","1"),t(Q,"stroke-width",".982"),t(Q,"d","M235.87 197.878h150.56v85.741H235.87z"),t(J,"id","rect4121-2-5"),t(J,"fill","#ee610a"),t(J,"fill-opacity","1"),t(J,"fill-rule","evenodd"),t(J,"stroke","#000"),t(J,"stroke-dasharray","none"),t(J,"stroke-linecap","butt"),t(J,"stroke-linejoin","miter"),t(J,"stroke-miterlimit","4"),t(J,"stroke-opacity","1"),t(J,"stroke-width",".982"),t(J,"d","M423.244 199.393h150.56v85.741h-150.56z"),t(_,"id","rect4117-0-7"),t(_,"fill","#594d44"),t(_,"fill-opacity","1"),t(_,"fill-rule","evenodd"),t(_,"stroke","#000"),t(_,"stroke-dasharray","none"),t(_,"stroke-linecap","butt"),t(_,"stroke-linejoin","miter"),t(_,"stroke-miterlimit","4"),t(_,"stroke-opacity","1"),t(_,"stroke-width",".868"),t(_,"d","M247.111 331.585h338.545v29.761H247.111z"),t(nt,"id","rect4117-0-7-3"),t(nt,"fill","#ee610a"),t(nt,"fill-opacity","1"),t(nt,"fill-rule","evenodd"),t(nt,"stroke","#000"),t(nt,"stroke-dasharray","none"),t(nt,"stroke-linecap","butt"),t(nt,"stroke-linejoin","miter"),t(nt,"stroke-miterlimit","4"),t(nt,"stroke-opacity","1"),t(nt,"stroke-width",".868"),t(nt,"d","M238.723 324.562h338.545v29.761H238.723z"),t(I,"id","rect4117-7-4"),t(I,"fill","#594d44"),t(I,"fill-opacity","1"),t(I,"fill-rule","evenodd"),t(I,"stroke","#000"),t(I,"stroke-dasharray","none"),t(I,"stroke-linecap","butt"),t(I,"stroke-linejoin","miter"),t(I,"stroke-miterlimit","4"),t(I,"stroke-opacity","1"),t(I,"stroke-width","1.342"),t(I,"d","M45.644 407.28h539.094v44.715H45.644z"),t(it,"id","rect4117-7-4-0"),t(it,"fill","#594d44"),t(it,"fill-opacity","1"),t(it,"fill-rule","evenodd"),t(it,"stroke","#000"),t(it,"stroke-dasharray","none"),t(it,"stroke-linecap","butt"),t(it,"stroke-linejoin","miter"),t(it,"stroke-miterlimit","4"),t(it,"stroke-opacity","1"),t(it,"stroke-width","1.342"),t(it,"d","M46.149 524.957h539.094v44.715H46.149z"),t(tt,"id","rect4117-7-4-3"),t(tt,"fill","#eeee0a"),t(tt,"fill-opacity","1"),t(tt,"fill-rule","evenodd"),t(tt,"stroke","#000"),t(tt,"stroke-dasharray","none"),t(tt,"stroke-linecap","butt"),t(tt,"stroke-linejoin","miter"),t(tt,"stroke-miterlimit","4"),t(tt,"stroke-opacity","1"),t(tt,"stroke-width","1.342"),t(tt,"d","M39.079 400.714h539.094v44.715H39.079z"),t(D,"id","rect4117-7-4-0-6"),t(D,"fill","#a00"),t(D,"fill-opacity","1"),t(D,"fill-rule","evenodd"),t(D,"stroke","#000"),t(D,"stroke-dasharray","none"),t(D,"stroke-linecap","butt"),t(D,"stroke-linejoin","miter"),t(D,"stroke-miterlimit","4"),t(D,"stroke-opacity","1"),t(D,"stroke-width","1.342"),t(D,"d","M40.089 518.896h539.094v44.715H40.089z"),t(et,"id","rect4121-4"),t(et,"fill","#eeee0a"),t(et,"fill-opacity","1"),t(et,"fill-rule","evenodd"),t(et,"stroke","#000"),t(et,"stroke-dasharray","none"),t(et,"stroke-linecap","butt"),t(et,"stroke-linejoin","miter"),t(et,"stroke-miterlimit","4"),t(et,"stroke-opacity","1"),t(et,"stroke-width",".381"),t(et,"d","M46.715 633.397h43.31v44.916h-43.31z"),t(F,"id","rect4121-4-3"),t(F,"fill","#ee610a"),t(F,"fill-opacity","1"),t(F,"fill-rule","evenodd"),t(F,"stroke","#000"),t(F,"stroke-dasharray","none"),t(F,"stroke-linecap","butt"),t(F,"stroke-linejoin","miter"),t(F,"stroke-miterlimit","4"),t(F,"stroke-opacity","1"),t(F,"stroke-width",".381"),t(F,"d","M257.776 633.397h43.31v44.916h-43.31z"),t(z,"id","rect4121-4-8"),t(z,"fill","#a00"),t(z,"fill-opacity","1"),t(z,"fill-rule","evenodd"),t(z,"stroke","#000"),t(z,"stroke-dasharray","none"),t(z,"stroke-linecap","butt"),t(z,"stroke-linejoin","miter"),t(z,"stroke-miterlimit","4"),t(z,"stroke-opacity","1"),t(z,"stroke-width",".381"),t(z,"d","M458.48 633.397h43.31v44.916h-43.31z"),t(jt,"id","tspan4804"),t(jt,"x","49.529"),t(jt,"y","120.622"),t(B,"xml:space","preserve"),t(B,"id","text4802"),t(B,"x","49.529"),t(B,"y","120.622"),t(B,"fill","#000"),t(B,"fill-opacity","1"),t(B,"stroke","none"),t(B,"font-style","normal"),t(B,"font-weight","400"),t(B,"letter-spacing","0"),f(B,"font-size","22px"),f(B,"line-height","125%"),t(B,"transform","scale(.96204 1.03945)"),t(B,"word-spacing","0"),t(Gt,"id","tspan4822"),t(Gt,"x","282.1"),t(Gt,"y","218.601"),t(X,"xml:space","preserve"),t(X,"id","text4820"),t(X,"x","282.1"),t(X,"y","218.601"),t(X,"fill","#000"),t(X,"fill-opacity","1"),t(X,"stroke","none"),t(X,"font-style","normal"),t(X,"font-weight","400"),t(X,"letter-spacing","0"),f(X,"line-height","125%"),t(X,"transform","scale(.87228 1.14642)"),t(X,"word-spacing","0"),t(Yt,"id","tspan4804-8"),t(Yt,"x","250.488"),t(Yt,"y","122.305"),t(A,"xml:space","preserve"),t(A,"id","text4802-3"),t(A,"x","250.488"),t(A,"y","122.305"),t(A,"fill","#000"),t(A,"fill-opacity","1"),t(A,"stroke","none"),t(A,"font-style","normal"),t(A,"font-weight","400"),t(A,"letter-spacing","0"),f(A,"font-size","22px"),f(A,"line-height","125%"),t(A,"transform","scale(.96204 1.03945)"),t(A,"word-spacing","0"),t(Ft,"id","tspan4804-5"),t(Ft,"x","445.004"),t(Ft,"y","122.305"),t(g,"xml:space","preserve"),t(g,"id","text4802-1"),t(g,"x","445.004"),t(g,"y","122.305"),t(g,"fill","#000"),t(g,"fill-opacity","1"),t(g,"stroke","none"),t(g,"font-style","normal"),t(g,"font-weight","400"),t(g,"letter-spacing","0"),f(g,"font-size","22px"),f(g,"line-height","125%"),t(g,"transform","scale(.96204 1.03945)"),t(g,"word-spacing","0"),t(Nt,"id","tspan4804-4"),t(Nt,"x","87.699"),t(Nt,"y","94.133"),t(U,"xml:space","preserve"),t(U,"id","text4802-35"),t(U,"x","87.699"),t(U,"y","94.133"),t(U,"fill","#000"),t(U,"fill-opacity","1"),t(U,"stroke","none"),t(U,"font-style","normal"),t(U,"font-weight","400"),t(U,"letter-spacing","0"),f(U,"font-size","22px"),f(U,"line-height","125%"),t(U,"transform","scale(.96204 1.03945)"),t(U,"word-spacing","0"),t(Rt,"id","tspan4822-6"),t(Rt,"x","77.945"),t(Rt,"y","219.197"),t(T,"xml:space","preserve"),t(T,"id","text4820-3"),t(T,"x","77.945"),t(T,"y","219.197"),t(T,"fill","#000"),t(T,"fill-opacity","1"),t(T,"stroke","none"),t(T,"font-style","normal"),t(T,"font-weight","400"),t(T,"letter-spacing","0"),f(T,"line-height","125%"),t(T,"transform","scale(.87228 1.14642)"),t(T,"word-spacing","0"),t(Ht,"id","tspan4822-5"),t(Ht,"x","522.483"),t(Ht,"y","217.328"),t(O,"xml:space","preserve"),t(O,"id","text4820-9"),t(O,"x","522.483"),t(O,"y","217.328"),t(O,"fill","#000"),t(O,"fill-opacity","1"),t(O,"stroke","none"),t(O,"font-style","normal"),t(O,"font-weight","400"),t(O,"letter-spacing","0"),f(O,"line-height","125%"),t(O,"transform","scale(.87228 1.14642)"),t(O,"word-spacing","0"),t(Wt,"id","tspan4822-5-1"),t(Wt,"x","440.118"),t(Wt,"y","305.798"),t(L,"xml:space","preserve"),t(L,"id","text4820-9-9"),t(L,"x","440.118"),t(L,"y","305.798"),t(L,"fill","#000"),t(L,"fill-opacity","1"),t(L,"stroke","none"),t(L,"font-style","normal"),t(L,"font-weight","400"),t(L,"letter-spacing","0"),f(L,"line-height","125%"),t(L,"transform","scale(.87228 1.14642)"),t(L,"word-spacing","0"),t(Kt,"id","tspan4822-5-1-5"),t(Kt,"x","262.241"),t(Kt,"y","378.196"),t(P,"xml:space","preserve"),t(P,"id","text4820-9-9-5"),t(P,"x","262.241"),t(P,"y","378.196"),t(P,"fill","#000"),t(P,"fill-opacity","1"),t(P,"stroke","none"),t(P,"font-style","normal"),t(P,"font-weight","400"),t(P,"letter-spacing","0"),f(P,"line-height","125%"),t(P,"transform","scale(.87228 1.14642)"),t(P,"word-spacing","0"),t(Zt,"id","tspan4822-5-1-8"),t(Zt,"x","223.756"),t(Zt,"y","480.995"),t(M,"xml:space","preserve"),t(M,"id","text4820-9-9-1"),t(M,"x","223.756"),t(M,"y","480.995"),t(M,"fill","#000"),t(M,"fill-opacity","1"),t(M,"stroke","none"),t(M,"font-style","normal"),t(M,"font-weight","400"),t(M,"letter-spacing","0"),f(M,"line-height","125%"),t(M,"transform","scale(.87228 1.14642)"),t(M,"word-spacing","0"),t(ue,"id","tspan4822-5-1-52"),t(ue,"x","115.834"),t(ue,"y","568.355"),t(he,"id","tspan5043"),t(he,"x","115.834"),t(he,"y","590.134"),t(E,"xml:space","preserve"),t(E,"id","text4820-9-9-3"),t(E,"x","115.834"),t(E,"y","564.355"),t(E,"fill","#000"),t(E,"fill-opacity","1"),t(E,"stroke","none"),t(E,"class","themed"),t(E,"font-style","normal"),t(E,"font-weight","400"),t(E,"letter-spacing","0"),f(E,"font-size","20px"),f(E,"line-height","125%"),t(E,"transform","scale(.87228 1.14642)"),t(E,"word-spacing","0"),t(kt,"id","tspan4822-5-1-52-6"),t(kt,"x","356.071"),t(kt,"y","568.412"),t(dt,"id","tspan5043-7"),t(dt,"x","356.071"),t(dt,"y","590.191"),t(G,"xml:space","preserve"),t(G,"id","text4820-9-9-3-6"),t(G,"x","356.071"),t(G,"y","568.412"),t(G,"fill","#000"),t(G,"fill-opacity","1"),t(G,"stroke","none"),t(G,"class","themed"),t(G,"font-style","normal"),t(G,"font-weight","400"),t(G,"letter-spacing","0"),f(G,"font-size","20px"),f(G,"line-height","125%"),t(G,"transform","scale(.87228 1.14642)"),t(G,"word-spacing","0"),t(Jt,"id","tspan4822-5-1-52-1"),t(Jt,"x","591.731"),t(Jt,"y","568.658"),t(Le,"id","tspan5043-71"),t(Le,"x","591.731"),t(Le,"y","590.437"),t(b,"xml:space","preserve"),t(b,"id","text4820-9-9-3-4"),t(b,"x","591.731"),t(b,"y","568.658"),t(b,"fill","#000"),t(b,"fill-opacity","1"),t(b,"stroke","none"),t(b,"class","themed"),t(b,"font-style","normal"),t(b,"font-weight","400"),t(b,"letter-spacing","0"),f(b,"font-size","20px"),f(b,"line-height","125%"),t(b,"transform","scale(.87228 1.14642)"),t(b,"word-spacing","0"),t(bt,"id","path5104"),t(bt,"fill","none"),t(bt,"stroke","#000"),t(bt,"stroke-linecap","butt"),t(bt,"stroke-linejoin","miter"),t(bt,"stroke-opacity","1"),t(bt,"stroke-width","1"),t(bt,"d","m115.868 153.023.714 45.712"),t(bt,"class","themed"),t(te,"id","path5106"),t(te,"fill","none"),t(te,"stroke","#000"),t(te,"stroke-linecap","butt"),t(te,"stroke-linejoin","miter"),t(te,"stroke-opacity","1"),t(te,"stroke-width","1"),t(te,"d","M310.144 153.023v43.57"),t(te,"class","themed"),t(Dt,"id","path5108"),t(Dt,"fill","none"),t(Dt,"stroke","#000"),t(Dt,"stroke-linecap","butt"),t(Dt,"stroke-linejoin","miter"),t(Dt,"stroke-opacity","1"),t(Dt,"stroke-width","1"),t(Dt,"d","M116.582 292.302v107.137"),t(Dt,"class","themed"),t(Pe,"id","path5112"),t(Pe,"fill","none"),t(Pe,"stroke","#000"),t(Pe,"stroke-linecap","butt"),t(Pe,"stroke-linejoin","miter"),t(Pe,"stroke-opacity","1"),t(Pe,"stroke-width","1"),t(Pe,"d","M499.42 153.737v44.998"),t(Pe,"class","themed"),t(yt,"id","path5114"),t(yt,"fill","none"),t(yt,"stroke","#000"),t(yt,"stroke-linecap","butt"),t(yt,"stroke-linejoin","miter"),t(yt,"stroke-opacity","1"),t(yt,"stroke-width","1"),t(yt,"d","m309.43 293.73.714 12.142"),t(yt,"class","themed"),t(we,"id","path5116"),t(we,"fill","none"),t(we,"stroke","#000"),t(we,"stroke-linecap","butt"),t(we,"stroke-linejoin","miter"),t(we,"stroke-opacity","1"),t(we,"stroke-width","1"),t(we,"d","m499.42 306.587-.714-12.857"),t(we,"class","themed"),t(Et,"id","path5118"),t(Et,"fill","none"),t(Et,"stroke","#000"),t(Et,"stroke-linecap","butt"),t(Et,"stroke-linejoin","miter"),t(Et,"stroke-opacity","1"),t(Et,"stroke-width","1"),t(Et,"d","m407.996 305.872.714 17.857"),t(Et,"class","themed"),t(Me,"id","path5120"),t(Me,"fill","none"),t(Me,"stroke","#000"),t(Me,"stroke-linecap","butt"),t(Me,"stroke-linejoin","miter"),t(Me,"stroke-opacity","1"),t(Me,"stroke-width","1"),t(Me,"d","m310.144 305.872 189.276.715"),t(Me,"class","themed"),t(vt,"id","path5122"),t(vt,"fill","none"),t(vt,"stroke","#000"),t(vt,"stroke-linecap","butt"),t(vt,"stroke-linejoin","miter"),t(vt,"stroke-opacity","1"),t(vt,"stroke-width","1"),t(vt,"d","m407.282 362.298 1.428 37.141"),t(vt,"class","themed"),t(Tt,"id","path5154-7-4"),t(Tt,"fill","#070000"),t(Tt,"fill-opacity","1"),t(Tt,"stroke","#000"),t(Tt,"stroke-linecap","butt"),t(Tt,"stroke-linejoin","miter"),t(Tt,"stroke-opacity","1"),t(Tt,"stroke-width","1"),t(Tt,"d","M401.176 383.962h13.889l-6.44 16.856"),t(Tt,"class","themed"),t(mt,"id","path5154-7-4-9"),t(mt,"fill","#070000"),t(mt,"fill-opacity","1"),t(mt,"stroke","#000"),t(mt,"stroke-linecap","butt"),t(mt,"stroke-linejoin","miter"),t(mt,"stroke-opacity","1"),t(mt,"stroke-width","1"),t(mt,"d","M108.878 382.573h13.889l-6.44 16.856"),t(mt,"class","themed"),t(fe,"id","path5154-7-4-1"),t(fe,"fill","#070000"),t(fe,"fill-opacity","1"),t(fe,"stroke","#000"),t(fe,"stroke-linecap","butt"),t(fe,"stroke-linejoin","miter"),t(fe,"stroke-opacity","1"),t(fe,"stroke-width","1"),t(fe,"d","M300.525 501.413h13.888l-6.439 16.856"),t(fe,"class","themed"),t(q,"id","path5154-7-4-5"),t(q,"fill","#070000"),t(q,"fill-opacity","1"),t(q,"stroke","#000"),t(q,"stroke-linecap","butt"),t(q,"stroke-linejoin","miter"),t(q,"stroke-opacity","1"),t(q,"stroke-width","1"),t(q,"d","m315.222 469.284-13.89.015 7.137-16.863"),t(q,"class","themed"),t(ge,"id","tspan4822-5-5"),t(ge,"x","762.717"),t(ge,"y","233.517"),t(rt,"xml:space","preserve"),t(rt,"id","text4820-9-5"),t(rt,"x","762.717"),t(rt,"y","233.517"),t(rt,"fill","#000"),t(rt,"fill-opacity","1"),t(rt,"stroke","none"),t(rt,"class","themed"),t(rt,"font-style","normal"),t(rt,"font-weight","400"),t(rt,"letter-spacing","0"),f(rt,"line-height","125%"),t(rt,"transform","scale(.87228 1.14642)"),t(rt,"word-spacing","0"),t(xt,"id","path5317"),t(xt,"fill","none"),t(xt,"stroke","#000"),t(xt,"stroke-linecap","butt"),t(xt,"stroke-linejoin","miter"),t(xt,"stroke-opacity","1"),t(xt,"stroke-width","1"),t(xt,"d","m613.676 61.455 21.212 16.162 1.01 160.606 18.182 18.182-18.182 18.182v152.525l-19.192 21.212"),t(xt,"class","themed"),t(Ge,"id","path3142"),t(Ge,"fill","none"),t(Ge,"stroke","#000"),t(Ge,"stroke-linecap","butt"),t(Ge,"stroke-linejoin","miter"),t(Ge,"stroke-opacity","1"),t(Ge,"stroke-width","1"),t(Ge,"d","m308.358 452.83-.714 65.353"),t(Ge,"class","themed"),t(Er,"id","tspan4804-8-2"),t(Er,"x","302.543"),t(Er,"y","94.233"),t(H,"xml:space","preserve"),t(H,"id","text4802-3-0"),t(H,"x","302.543"),t(H,"y","94.233"),t(H,"fill","#000"),t(H,"fill-opacity","1"),t(H,"stroke","none"),t(H,"font-style","normal"),t(H,"font-weight","400"),t(H,"letter-spacing","0"),f(H,"font-size","22px"),f(H,"line-height","125%"),t(H,"transform","scale(.96204 1.03945)"),t(H,"word-spacing","0"),t(ke,"id","tspan4804-8-8"),t(ke,"x","500.92"),t(ke,"y","96.02"),t(lt,"xml:space","preserve"),t(lt,"id","text4802-3-4"),t(lt,"x","500.92"),t(lt,"y","96.02"),t(lt,"fill","#000"),t(lt,"fill-opacity","1"),t(lt,"stroke","none"),t(lt,"font-style","normal"),t(lt,"font-weight","400"),t(lt,"letter-spacing","0"),f(lt,"font-size","22px"),f(lt,"line-height","125%"),t(lt,"transform","scale(.96204 1.03945)"),t(lt,"word-spacing","0"),t(d,"id","layer1"),t(d,"transform","translate(-25.456 -45.442)"),Al(k,_r)},m(pt,Ot){h(pt,k,Ot),e(k,w),e(w,$t),e($t,It),e(k,d),e(d,Vt),e(Vt,ye),e(ye,Oe),e(Oe,qe),e(qe,st),e(st,oe),e(st,At),e(d,Ut),e(d,ze),e(ze,ne),e(ne,gt),e(gt,Mt),e(Mt,$),e($,ie),e($,ve),e(d,j),e(d,C),e(d,W),e(d,at),e(d,K),e(d,V),e(d,S),e(d,Y),e(d,Z),e(d,ot),e(d,Q),e(d,J),e(d,_),e(d,nt),e(d,I),e(d,it),e(d,tt),e(d,D),e(d,et),e(d,F),e(d,z),e(d,B),e(B,jt),e(jt,ur),e(d,X),e(X,Gt),e(Gt,R),e(d,A),e(A,Yt),e(Yt,Be),e(d,g),e(g,Ft),e(Ft,me),e(d,U),e(U,Nt),e(Nt,xe),e(d,T),e(T,Rt),e(Rt,ht),e(d,O),e(O,Ht),e(Ht,le),e(d,L),e(L,Wt),e(Wt,pe),e(d,P),e(P,Kt),e(Kt,ce),e(d,M),e(M,Zt),e(Zt,ft),e(d,E),e(E,ue),e(ue,Xe),e(E,he),e(he,rr),e(d,G),e(G,kt),e(kt,Qt),e(G,dt),e(dt,$e),e(d,b),e(b,Jt),e(Jt,Ct),e(b,Le),e(Le,N),e(d,bt),e(d,te),e(d,Dt),e(d,Pe),e(d,yt),e(d,we),e(d,Et),e(d,Me),e(d,vt),e(d,Tt),e(d,mt),e(d,fe),e(d,q),e(d,rt),e(rt,ge),e(ge,Ur),e(d,xt),e(d,Ge),e(d,H),e(H,Er),e(Er,sr),e(d,lt),e(lt,ke),e(ke,hs)},p(pt,[Ot]){Al(k,_r=lu(Ze,[{xmlns:"http://www.w3.org/2000/svg"},{"xmlns:xlink":"http://www.w3.org/1999/xlink"},{id:"raspberrypi_video_api"},{version:"1.1"},{viewBox:"0 0 707.107 659.024"},Ot&1&&pt[0]]))},i:el,o:el,d(pt){pt&&r(k)}}}function fu(As,k,w){return As.$$set=$t=>{w(0,k=Vi(Vi({},k),Ul($t)))},k=Ul(k),[k]}class ku extends up{constructor(k){super(),hp(this,k,fu,hu,fp,{})}}const du={avif:[{src:""+new URL("../assets/examples.a9b965a7.avif",import.meta.url).href,w:600},{src:""+new URL("../assets/examples.16a02448.avif",import.meta.url).href,w:1e3},{src:""+new URL("../assets/examples.df482c56.avif",import.meta.url).href,w:1400}],webp:[{src:""+new URL("../assets/examples.079c9903.webp",import.meta.url).href,w:600},{src:""+new URL("../assets/examples.a05fa244.webp",import.meta.url).href,w:1e3},{src:""+new URL("../assets/examples.6821f1ce.webp",import.meta.url).href,w:1400}],png:[{src:""+new URL("../assets/examples.c76c78b6.png",import.meta.url).href,w:600},{src:""+new URL("../assets/examples.d5e5f696.png",import.meta.url).href,w:1e3},{src:""+new URL("../assets/examples.267b009b.png",import.meta.url).href,w:1400}]},yu={src:""+new URL("../assets/examples.267b009b.png",import.meta.url).href,w:1400,h:783.3333333333334},vu={sources:du,fallback:yu},mu={avif:[{src:""+new URL("../assets/torus.8ce61482.avif",import.meta.url).href,w:600},{src:""+new URL("../assets/torus.c13e5232.avif",import.meta.url).href,w:1e3},{src:""+new URL("../assets/torus.9d412eab.avif",import.meta.url).href,w:1400}],webp:[{src:""+new URL("../assets/torus.c124f11d.webp",import.meta.url).href,w:600},{src:""+new URL("../assets/torus.60f67e11.webp",import.meta.url).href,w:1e3},{src:""+new URL("../assets/torus.43fc5b1f.webp",import.meta.url).href,w:1400}],jpeg:[{src:""+new URL("../assets/torus.c37f974a.jpg",import.meta.url).href,w:600},{src:""+new URL("../assets/torus.b7380dbe.jpg",import.meta.url).href,w:1e3},{src:""+new URL("../assets/torus.f8607484.jpg",import.meta.url).href,w:1400}]},xu={src:""+new URL("../assets/torus.f8607484.jpg",import.meta.url).href,w:1400,h:1050},wu={sources:mu,fallback:xu},gu={avif:[{src:""+new URL("../assets/arkanoid.a66f68ec.avif",import.meta.url).href,w:400},{src:""+new URL("../assets/arkanoid.9e91b0c1.avif",import.meta.url).href,w:800}],webp:[{src:""+new URL("../assets/arkanoid.579989b3.webp",import.meta.url).href,w:400},{src:""+new URL("../assets/arkanoid.f37e6078.webp",import.meta.url).href,w:800}],png:[{src:""+new URL("../assets/arkanoid.7a3c59d7.png",import.meta.url).href,w:400},{src:""+new URL("../assets/arkanoid.92ab3b24.png",import.meta.url).href,w:800}]},bu={src:""+new URL("../assets/arkanoid.92ab3b24.png",import.meta.url).href,w:800,h:450},Eu={sources:gu,fallback:bu},_u={avif:[{src:""+new URL("../assets/pacman.a6d9df40.avif",import.meta.url).href,w:400},{src:""+new URL("../assets/pacman.682adc06.avif",import.meta.url).href,w:800}],webp:[{src:""+new URL("../assets/pacman.5545a119.webp",import.meta.url).href,w:400},{src:""+new URL("../assets/pacman.fb1b47c5.webp",import.meta.url).href,w:800}],png:[{src:""+new URL("../assets/pacman.36895afb.png",import.meta.url).href,w:400},{src:""+new URL("../assets/pacman.1f323cd4.png",import.meta.url).href,w:800}]},zu={src:""+new URL("../assets/pacman.1f323cd4.png",import.meta.url).href,w:800,h:450},Lu={sources:_u,fallback:zu},Pu={avif:[{src:""+new URL("../assets/space_invaders.4d003604.avif",import.meta.url).href,w:400},{src:""+new URL("../assets/space_invaders.3a907053.avif",import.meta.url).href,w:800}],webp:[{src:""+new URL("../assets/space_invaders.0f9c55b2.webp",import.meta.url).href,w:400},{src:""+new URL("../assets/space_invaders.5cf800d6.webp",import.meta.url).href,w:800}],png:[{src:""+new URL("../assets/space_invaders.a84ad572.png",import.meta.url).href,w:400},{src:""+new URL("../assets/space_invaders.f571c843.png",import.meta.url).href,w:800}]},Mu={src:""+new URL("../assets/space_invaders.f571c843.png",import.meta.url).href,w:800,h:450},Gu={sources:Pu,fallback:Mu};function Ru(As){let k,w,$t,It,d,Vt,ye,Oe,qe=" ",st,oe,At,Ut,ze,ne,gt,Mt,$,ie,ve,j,C,W,at,K,V,S,Y,Z,ot,Q,J,_,nt,I,it,tt,D,et,F,z,B,jt,ur,X,Gt,R,A,Yt,Be,g,Ft,me,U,Nt,xe,T,Rt,ht,O,Ht,le,L,Wt,pe,P,Kt,ce,M,Zt,ft,E,ue,Xe,he,rr,G,kt,Qt,dt,$e,b,Jt,Ct,Le,N,bt,te,Dt,Pe,yt,we,Et,Me,vt,Tt,mt,fe,q,rt,ge,Ur,xt,Ge,H,Er,sr,lt,ke,hs,Ze,_r,pt,Ot,ya,Kr,m,qt,va,_t,ar,Us,zr,Br,Lr,ma,Re,xa,Se,or,wa,de,nr,ga,ee,hr,fr,Pr,Xr,Mr,ba,ir,Ea,re,jr,Zr,$r,fs,Qe,Gr,Ve,ks,Ie,kr,Qr,Ae,Rr,Cr,zt,Vr,Yr,Fr,Qo,Ye,ds,no,Lt,js,Oa,Ue,ys,qa,vs,Jo,Fe,lr,tn,se,ms,en,Jr,io,ct,rn,Ne,dr,sn,Pt,Cs,an,Ds,ts,xs,Ts,Dr,on,Os,qs,Ba,pr,Bs,ws,Nr,cr,es,nn,je,Sr,ln,gs,pn,He,rs,cn,Je,tr,_a,Xa,ae,bs,$a,We,Es,Xs,yr,ss,un,Tr,vr,$s,lo,Ce,Vs,po,be,Ee,_s,Bt,zs,co,_e,hn,Ir,fn,Ls,Ys,mr,Fs,Va,St,Ns,Hs,as,kn,De,Ps,Ar,os,Ws,xr,Ms,Ks,Te,Zs,Qs,Js,dn,Gs,za,ta,uo,Xt,ea,ho,ns,Yi=`<pre class="shiki  language-c"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// The template used to input uniforms that are automatically added by Shadertoy,</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// and to call the Shadertoy shader main method entrypoint.</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">shadertoy_fs_tmpl </span><span style="color: var(--shiki-token-operator)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;precision mediump float;                                             </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;uniform vec3      iResolution; // viewport resolution (in pixels)    </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;uniform float     iTime;       // shader playback time (in seconds)  </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;uniform int       iFrame;      // current frame number               </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;                                                                     </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-token-constant)">%s</span><span style="color: var(--shiki-token-string)">                                                                   </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;                                                                     </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;void main()                                                          </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;&#123;                                                                    </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;    mainImage(gl_FragColor, gl_FragCoord.xy);                        </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;&#125;                                                                    </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// Creates the fragment shader from a local copy of the Shadertoy shader</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-token-function)">load_shader</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">file</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">struct</span><span style="color: var(--shiki-color-text)"> stat statbuf</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">frag</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">int</span><span style="color: var(--shiki-color-text)"> fd</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> ret</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	fd </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">open</span><span style="color: var(--shiki-color-text)">(file</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">fd </span><span style="color: var(--shiki-token-operator)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-function)">err</span><span style="color: var(--shiki-color-text)">(fd</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;could not open &#39;</span><span style="color: var(--shiki-token-constant)">%s</span><span style="color: var(--shiki-token-string)">&#39;&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> file)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-punctuation)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	ret </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">fstat</span><span style="color: var(--shiki-color-text)">(fd</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">&amp;</span><span style="color: var(--shiki-color-text)">statbuf)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">ret </span><span style="color: var(--shiki-token-operator)">&lt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-function)">err</span><span style="color: var(--shiki-color-text)">(ret</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;could not stat &#39;</span><span style="color: var(--shiki-token-constant)">%s</span><span style="color: var(--shiki-token-string)">&#39;&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> file)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-punctuation)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">text </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">mmap</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">NULL</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">statbuf</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-member)">st_size</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PROT_READ</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">MAP_PRIVATE</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> fd</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">asprintf</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-operator)">&amp;</span><span style="color: var(--shiki-color-text)">frag</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> shadertoy_fs_tmpl</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> text)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> frag</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-punctuation)">&#125;</span></span></code></pre>`,is,La,ra,fo,ls,Fi=`<pre class="shiki  language-c"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// Holds the playback time and frame number uniform locations</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">GLint iTime</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> iFrame</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// The triangles, to be rasterized by sampling the shader for every pixel of the screen.</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// Quads are not supported by OpenGL ES, so we have to use two triangles.</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> GLfloat vertices</span><span style="color: var(--shiki-token-keyword)">[]</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// First triangle:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	 </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Second triangle:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	 </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	 </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-numeric)">1.0</span><span style="color: var(--shiki-token-parameter)">f</span><span style="color: var(--shiki-token-punctuation)">,</span></span>
<span class="line"><span style="color: var(--shiki-token-punctuation)">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// The vertex shader, responsible to position the geometry.</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// We simply need the identity in our case.</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">shadertoy_vs </span><span style="color: var(--shiki-token-operator)">=</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;attribute vec3 position;                </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;void main()                             </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;&#123;                                       </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;    gl_Position = vec4(position, 1.0);  </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-string)">&quot;&#125;                                       </span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">int</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">init_shadertoy</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">struct</span><span style="color: var(--shiki-token-parameter)"> gbm </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">gbm</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">struct</span><span style="color: var(--shiki-token-parameter)"> egl </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">egl</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">file</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">int</span><span style="color: var(--shiki-color-text)"> ret</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">char</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-color-text)">shadertoy_fs</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	GLuint program</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> vbo</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	GLint iResolution</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Loads the Shadertoy shader from the file system, and creates the fragment shader</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	shadertoy_fs </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">load_shader</span><span style="color: var(--shiki-color-text)">(file)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Compiles the fragment and vertex shaders, and attaches them the returned program</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	ret </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">create_program</span><span style="color: var(--shiki-color-text)">(shadertoy_vs</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> shadertoy_fs)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">ret</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-function)">printf</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string)">&quot;failed to create program</span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-punctuation)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	program </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> ret</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Links the program</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	ret </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">link_program</span><span style="color: var(--shiki-color-text)">(program)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">if</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">ret</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-function)">printf</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string)">&quot;failed to link program</span><span style="color: var(--shiki-token-symbol)">&#92;n</span><span style="color: var(--shiki-token-string)">&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">		</span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-punctuation)">&#125;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Matches the viewport width and height to the screen resolution</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glViewport</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">gbm</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">width</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">gbm</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">height</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glUseProgram</span><span style="color: var(--shiki-color-text)">(program)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Initializes the uniform variables</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	iTime </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">glGetUniformLocation</span><span style="color: var(--shiki-color-text)">(program</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;iTime&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	iFrame </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">glGetUniformLocation</span><span style="color: var(--shiki-color-text)">(program</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;iFrame&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	iResolution </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">glGetUniformLocation</span><span style="color: var(--shiki-color-text)">(program</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">&quot;iResolution&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glUniform3f</span><span style="color: var(--shiki-color-text)">(iResolution</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">gbm</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">width</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-variable)">gbm</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">height</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Initializes the vertices buffer that holds the triangles data</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glGenBuffers</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">&amp;</span><span style="color: var(--shiki-color-text)">vbo)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glBindBuffer</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">GL_ARRAY_BUFFER</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> vbo)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glBufferData</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">GL_ARRAY_BUFFER</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">sizeof</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">vertices</span><span style="color: var(--shiki-token-punctuation)">),</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">GL_STATIC_DRAW</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glBufferSubData</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">GL_ARRAY_BUFFER</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">sizeof</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-color-text)">vertices</span><span style="color: var(--shiki-token-punctuation)">),</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">&amp;</span><span style="color: var(--shiki-token-variable)">vertices</span><span style="color: var(--shiki-color-text)">[</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">])</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glVertexAttribPointer</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">2</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">GL_FLOAT</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">GL_FALSE</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> GLvoid </span><span style="color: var(--shiki-token-operator)">*</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">intptr_t</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glEnableVertexAttribArray</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Provides the rendering method to be called for each frame</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-variable)">egl</span><span style="color: var(--shiki-color-text)">-&gt;</span><span style="color: var(--shiki-token-member)">draw</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">=</span><span style="color: var(--shiki-color-text)"> draw_shadertoy</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-punctuation)">&#125;</span></span></code></pre>`,Ya,sa,Or,x,ut,rl=`<pre class="shiki  language-c"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">// This is called to render every frame</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">static</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">void</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">draw_shadertoy</span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">uint64_t</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-color-text)">start_time</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-token-keyword)">unsigned</span><span style="color: var(--shiki-token-parameter)"> </span><span style="color: var(--shiki-color-text)">frame</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Sets the playback time uniform in seconds</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glUniform1f</span><span style="color: var(--shiki-color-text)">(iTime</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-function)">get_time_ns</span><span style="color: var(--shiki-color-text)">() </span><span style="color: var(--shiki-token-operator)">-</span><span style="color: var(--shiki-color-text)"> start_time</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-operator)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-punctuation)">(</span><span style="color: var(--shiki-token-keyword)">double</span><span style="color: var(--shiki-token-punctuation)">)</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">NSEC_PER_SEC</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Sets the current frame number uniform</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glUniform1ui</span><span style="color: var(--shiki-color-text)">(iFrame</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> frame)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// Renders the triangles</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-function)">glDrawArrays</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">GL_TRIANGLES</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-numeric)">6</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-punctuation)">;</span></span>
<span class="line"><span style="color: var(--shiki-token-punctuation)">&#125;</span></span></code></pre>`,ko,aa,Bn,Pa,Xn,$n,yn,oa,Rs,na,yo,Vn,vn,ia,Ma,Yn,Hr,Fn,Nn,Hn,vo,wt,er,wr,mn,Wn,mo,Fa,Kn,xn,Na,Zn,xo,wo,sl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ sudo apt update</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Install the build tools</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ sudo apt install gcc make</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Install the required DRM, GBM, EGL and OpenGL ES API headers</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ sudo apt install libdrm</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">dev libgbm</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">dev libegl</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">dev libgles2</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">mesa</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">dev</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Clone the repository</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ git clone https:</span><span style="color: var(--shiki-token-symbol)">//github.com/</span><span style="color: var(--shiki-color-text)">astefanutti</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">kms</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">glsl.git &amp;&amp; cd kms</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">glsl</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Build the glsl CLI binary</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ make</span></span></code></pre>`,Ha,la,Qn,Ss,Jn,ti,Ga,ps,ei,go,ri,si,Ra,ai,oi,Sa,bo,al='<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ sudo vi </span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">boot</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">config.txt</span></span></code></pre>',Eo,Wa,Ka,wn,_o,ol=`<pre class="shiki  language-ini"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Required: Enable the firmware/fake DRM/KMS VC4/V3D driver</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">dtoverlay</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string)">vc4-fkms-v3d</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Optional: Increase the memory reserved for the GPU</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">#           16MB disables certain GPU features</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">gpu_mem</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string)">64</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Optional: Avoid GPU down-clocking below 500 MHz that slows FPS down</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic">#           Should be set to 250 on the RPi 3</span></span>
<span class="line"><span style="color: var(--shiki-token-keyword)">v3d_freq_min</span><span style="color: var(--shiki-color-text)">=</span><span style="color: var(--shiki-token-string)">500</span></span></code></pre>`,zo,Za,ni,gn,Lo,Ni='<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ sudo reboot</span></span></code></pre>',Po,pa,ii,Mo,li,pi,Go,Ro,nl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ .</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">glsl examples</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">stripey_torus_interior.glsl</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">OpenGL ES </span><span style="color: var(--shiki-token-numeric)">2.</span><span style="color: var(--shiki-color-text)">x information:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  version: </span><span style="color: var(--shiki-token-string)">&quot;OpenGL ES 3.1 Mesa 19.3.2&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  shading language version: </span><span style="color: var(--shiki-token-string)">&quot;OpenGL ES GLSL ES 3.10&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  vendor: </span><span style="color: var(--shiki-token-string)">&quot;Broadcom&quot;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  renderer: </span><span style="color: var(--shiki-token-string)">&quot;V3D 4.2&quot;</span></span></code></pre>`,So,ca,Io,Ao,ci,ui,bn,Qa,Ja,En,Uo,il='<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ watch </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">n </span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-color-text)"> vcgencmd measure_clock v3d</span></span></code></pre>',jo,Ke,hi,Ia,fi,ki,Co,di,yi,to,vi,mi,Do,xi,wi,To,eo,gi,bi,_n,ua,Ei,Aa,_i,zi,zn,ha,Is,fa,ka,Li,Ln,gr,Pi,Oo,Mi,Pn,qo,Gi,Mn,Bo,Ri,Si,Xo,ro,Ii,Gn,so,Ai,da,$o,ll=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ sudo apt full</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">upgrade</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ uname </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">a</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">Linux master </span><span style="color: var(--shiki-token-numeric)">5.10</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-numeric)">17</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">v7l</span><span style="color: var(--shiki-token-symbol)">+</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-comment); font-style: italic">#1403 SMP Mon Feb 22 11:33:35 GMT 2021 armv7l GNU/Linux</span></span></code></pre>`,Vo,br,Ui,Rn,jl,Cl,Sn,Dl,Tl,Hi,Ol,ql,In,Bl,Xl,pl,ji,$l,cl,Wr,Wi,Vl,Yl,Ki,Fl,Nl,Zi,Hl,Wl,Qi,Kl,Zl,Ji,Ql,ul,Ci,Jl,hl,Yo,tp,An,ep,rp,fl;return w=new tl({props:{src:wu,alt:"A shader running on the Raspberry Pi"}}),L=new tl({props:{src:Eu,alt:"Arkanoid",sizes:cp}}),P=new tl({props:{src:Lu,alt:"“Pacman”",sizes:cp+"”"}}),M=new tl({props:{src:Gu,alt:"Space Invaders",sizes:cp}}),rt=new uu({}),zt=new ku({props:{style:"margin: 0 15px 0 60px;"}}),Ma=new tl({props:{src:vu,alt:"Examples"}}),{c(){k=p("figure"),jn(w.$$.fragment),$t=y(),It=p("figcaption"),d=i("A "),Vt=p("a"),ye=i("shader"),Oe=i(" from"),st=i(qe),oe=y(),At=p("a"),Ut=i("Shadertoy"),ze=i(` running fullscreen on the Rapsberry Pi
    official touchscreen`),ne=y(),gt=p("p"),Mt=p("span"),$=p("strong"),ie=i("TL;DR:"),ve=i(" If you just want to try it, you can head to the "),j=p("strong"),C=p("a"),W=i("project repository"),at=i("."),K=i(` As far as I can remember, I’ve always felt attracted by computer graphics.
I guess I approach the field from the angle of my Mathematics background, as I see it as a universal language between machines, arts, and possibly, nature`),V=p("span"),S=p("span"),Y=p("em"),Z=i("“How can it be that mathematics, being after all a product of human thought which is independent of experience, is so admirably appropriate to the objects of reality?”"),ot=i(" – Albert Einstein."),Q=i("."),J=y(),_=p("p"),nt=i("As a projection of that language, I find the "),I=p("a"),it=i("OpenGL Shading Language"),tt=i(` an interesting case, at the intersection of computing and visual arts, that’s concise and expressive enough to demonstrate human ingenuity and creativity.
You can find me browsing for hours on `),D=p("a"),et=i("shadertoy.com"),F=p("span"),z=p("span"),B=i("Shadertoy has been created by "),jt=p("em"),ur=i("Iñigo Quilez"),X=i(", that publishes very interesting articles, tutorials, and other awesome resources at "),Gt=p("a"),R=i("iquilezles.org"),A=i("."),Yt=i(", mesmerized by the visuals."),Be=y(),g=p("p"),Ft=i("Since I built my "),me=p("a"),U=i("Kubernetes cluster with Rapsberry Pi"),Nt=i(" a year ago, I’ve kept somewhere in a corner of my head, the idea I could use the touchscreen monitor to play with OpenGL, making the coolest cluster ever, to begin with 😎, and turning it eventually, into a small gaming device "),xe=p("span"),T=i("🕹👾"),Rt=p("span"),ht=p("span"),O=i("As crazy as it may sounds, it’s possible to develop games in GLSL (click on the images to try it):"),Ht=p("br"),le=p("a"),jn(L.$$.fragment),Wt=p("br"),pe=p("a"),jn(P.$$.fragment),Kt=p("br"),ce=p("a"),jn(M.$$.fragment),Zt=i("."),ft=y(),E=p("p"),ue=i("So I’ve accepted the mission to run shaders from "),Xe=p("em"),he=i("Shadertoy"),rr=i(", on the Raspberry Pi!"),G=y(),kt=p("h2"),Qt=p("a"),dt=o("svg"),$e=o("path"),b=i("The Linux Graphics Stack"),Jt=y(),Ct=p("p"),Le=i("I use a Raspberry Pi 4 as my cluster’s "),N=p("em"),bt=i("main"),te=i(` node, that’s connected to the touchscreen monitor.
It runs the Lite version of `),Dt=p("a"),Pe=i("Raspberry Pi OS"),yt=i(", which means there is no windowing system available, like X11."),we=y(),Et=p("p"),Me=i("I also have some Rapsberry Pi 3, so I wanted to have a solution that would work on these as well, and possibly on any other Linux device with GPU hardware."),vt=y(),Tt=p("p"),mt=i("The following diagram gives a good understanding of the Linux graphics stack:"),fe=y(),q=p("figure"),jn(rt.$$.fragment),ge=y(),Ur=p("figcaption"),xt=i("Illustration of the Linux graphics stack"),Ge=p("br"),H=p("small"),Er=i("(by Shmuel Csaba Otto Traian, CC-BY-SA 4.0)"),sr=y(),lt=p("p"),ke=i("With the requirement to run without any windowing system, like X or Wayland, this implies relying either on:"),hs=y(),Ze=p("ul"),_r=p("li"),pt=i("Proprietary device drivers (the "),Ot=p("a"),ya=i("binary blob"),Kr=i(" at the bottom,left-hand side of the illustation),"),m=y(),qt=p("li"),va=i("Or, Mesa"),_t=p("span"),ar=p("span"),Us=i("The Mesa 3D Graphics Library, is an open source software implementation of the OpenGL specifications. The project also hosts the development of open-source device drivers for graphic chipsets."),zr=i(" open-source device drivers, using the "),Br=p("a"),Lr=i("DRM"),ma=i("/"),Re=p("a"),xa=i("KMS"),Se=i(" Linux kernel sub-system, to implement "),or=p("a"),wa=i("mode-setting"),de=i(" and "),nr=p("a"),ga=i("page-flipping"),ee=i(" operations."),hr=y(),fr=p("p"),Pr=i("While the later option requires more development work, it promises to work across the "),Xr=p("a"),Mr=i("range of GPUs"),ba=i(` that have a Mesa driver available.
It also brings the `),ir=p("em"),Ea=i("a-priori"),re=i(" benefits of the open-source model, with community and freely accessible documentation."),jr=y(),Zr=p("p"),$r=i("Now that the Linux stack is clearer, let’s continue on that mission, and find out what drivers exist for the Raspberry Pi …"),fs=y(),Qe=p("h2"),Gr=p("a"),Ve=o("svg"),ks=o("path"),Ie=i("The Rapsberry Pi"),kr=y(),Qr=p("p"),Ae=i(`The Raspberry Pi 3 Broadcom BCM2837 SoC includes the VideoCore IV GPU, which could initially be used with the corresponding proprietary driver, and closed-source implementation of the graphics libraries.
While some portions of that stack was released as open-source in 2012, most of the work is still done in the closed-source runtime libraries and GPU code, as depicted in this diagram:`),Rr=y(),Cr=p("figure"),jn(zt.$$.fragment),Vr=y(),Yr=p("figcaption"),Fr=i("The VideoCore IV GPU driver stack"),Qo=p("br"),Ye=p("small"),ds=i("(CC BY-SA 3.0)"),no=y(),Lt=p("p"),js=i("The C header files and libraries for these Broadcom specific implementations are located in the "),Oa=p("code"),Ue=i("/opt/vc/include"),ys=i(" and "),qa=p("code"),vs=i("/opt/vc/lib"),Jo=i(" directories"),Fe=p("span"),lr=p("span"),tn=i("These header files and libraries can be found at "),se=p("a"),ms=i("https://github.com/raspberrypi/firmware"),en=i("."),Jr=i("."),io=y(),ct=p("p"),rn=i("In 2014, Broadcom and the Raspberry Pi Foundation announced the documentation release for the VideoCore IV 3D graphics processor"),Ne=p("span"),dr=p("span"),sn=i("The Architecture Reference Guide for the Broadcom VideoCore IV GPU is available at "),Pt=p("a"),Cs=i("https://docs.broadcom.com/docs/12358545"),an=i("."),Ds=i(", as well as the source release of the graphics stack under a BSD license"),ts=p("span"),xs=p("span"),Ts=i("The source code for the userland libraries can be found at "),Dr=p("a"),on=i("https://github.com/raspberrypi/userland"),Os=i("."),qs=i(`.
Few months after the announcement, the source code of a Gallium-based Mesa OpenGL driver for the Broadcom SoC GPU, written from scratch by `),Ba=p("em"),pr=i("Eric Anholt"),Bs=i(", was committed to the Mesa project"),ws=p("span"),Nr=p("span"),cr=i("The source code for the VC4 driver can be found in the "),es=p("code"),nn=i("src/gallium/drivers/vc4"),je=i(" directory of the "),Sr=p("a"),ln=i("Mesa repository"),gs=i("."),pn=i(`.
`),He=p("strong"),rs=i("This paved the way towards open-source drivers for the Rapsberry Pi GPUs"),cn=i("."),Je=y(),tr=p("p"),_a=i("The Raspberry Pi 4 Broadcom BCM2711 SoC (formerly BCM2838) now includes the VideoCore VI GPU, that’s only supported by a Mesa driver"),Xa=p("span"),ae=p("span"),bs=i("The source code for the V3D driver can be found in the "),$a=p("code"),We=i("src/gallium/drivers/v3d"),Es=i(" directory of the "),Xs=p("a"),yr=i("Mesa repository"),ss=i("."),un=i(`.
The original Broadcom proprietary driver, specifically designed for the BCM2837 SoC GPU, does not work on the Rapsberry Pi 4.
This Mesa V3D (VideoCore VI) driver `),Tr=p("a"),vr=i("conforms to OpenGL ES 3.1"),$s=i(" (as of March 2021), while the VideoCore VI GPU is capable of OpenGL ES 3.2."),lo=y(),Ce=p("p"),Vs=i("After this research phase, and its few historical findings, I’m convinced the way forward to succeed in my mission, is to rely on these open-source drivers …"),po=y(),be=p("h2"),Ee=p("a"),_s=o("svg"),Bt=o("path"),zs=i("The Programming"),co=y(),_e=p("p"),hn=i("With these drivers, running OpenGL or OpenGL ES, without X11, is possible using the "),Ir=p("a"),fn=i("DRM"),Ls=i("/"),Ys=p("a"),mr=i("KMS"),Fs=i(" Linux kernel sub-system"),Va=p("span"),St=p("span"),Ns=i("The "),Hs=p("a"),as=i("Linux GPU Driver Developer’s Guide"),kn=i(" provides an extensive documentation of the DRM/KMS sub-system."),De=i(", in combination with the Mesa Generic Buffer Management (GBM) library."),Ps=y(),Ar=p("p"),os=i("Lukily, I stumbled upon "),Ws=p("a"),xr=i("kmscube"),Ms=i(", which is an example application, written in C, that demonstrates how to use the KMS/GBM/EGL APIs to drive bare metal graphics, and provides an implementation of the "),Ks=p("a"),Te=i("mode-setting"),Zs=i(" and "),Qs=p("a"),Js=i("page-flipping"),dn=i(" operations."),Gs=y(),za=p("p"),ta=i(`The basic idea is to use two triangles, covering the entire screen, that are rasterized by sampling the shader for every pixel.
So that left me with:`),uo=y(),Xt=p("p"),ea=i("1) Loading a copy of the Shadertoy shader from the file system:"),ho=y(),ns=new Da(!1),is=y(),La=p("p"),ra=i("2) Compiling the shaders on the GPU, creating the OpenGL program, linking it, and initializing uniform variables and buffers:"),fo=y(),ls=new Da(!1),Ya=y(),sa=p("p"),Or=i("3) Finally, rasterizing the triangles, so that every pixel from the screen gets sampled from the fragment shader:"),x=y(),ut=new Da(!1),ko=y(),aa=p("p"),Bn=i("The complete source code is available at "),Pa=p("a"),Xn=i("https://github.com/astefanutti/kms-glsl"),$n=i("."),yn=y(),oa=p("h2"),Rs=p("a"),na=o("svg"),yo=o("path"),Vn=i("The Fun"),vn=y(),ia=p("figure"),jn(Ma.$$.fragment),Yn=y(),Hr=p("figcaption"),Fn=i("A selection of shaders from Shadertoy, that run successfully on the Rapsberry Pi."),Nn=p("br"),Hn=i(`
    You can find copies of these in the `),vo=p("code"),wt=i("examples"),er=i(" directory of the "),wr=p("a"),mn=i("project repository"),Wn=i("."),mo=y(),Fa=p("p"),Kn=i("I’ve successfully run shaders on the RPi 3B+ and RPi 4, with Raspberry Pi OS Lite 2020-12-02, Linux kernel 5.4.79."),xn=y(),Na=p("p"),Zn=i("You can run the following instructions to build the CLI binary:"),xo=y(),wo=new Da(!1),Ha=y(),la=p("p"),Qn=i(`The VC4/V3D driver kernel module must be activated.
Assuming you’ve installed `),Ss=p("a"),Jn=i("Raspberry Pi OS"),ti=i(", this can be achieved by running the following commands:"),Ga=y(),ps=p("p"),ei=i("1) Edit the "),go=p("code"),ri=i("/boot/config.txt"),si=y(),Ra=p("a"),ai=i("file"),oi=i(", e.g.:"),Sa=y(),bo=new Da(!1),Eo=y(),Wa=p("p"),Ka=i("2) Set the following properties:"),wn=y(),_o=new Da(!1),zo=y(),Za=p("p"),ni=i("3) Reboot your Raspberry Pi, so that the changes are taken into account, e.g.:"),gn=y(),Lo=new Da(!1),Po=y(),pa=p("p"),ii=i("You can then run shaders from the "),Mo=p("code"),li=i("examples"),pi=i(" directory, e.g.:"),Go=y(),Ro=new Da(!1),So=y(),ca=p("p"),Io=i("And check that "),Ao=p("code"),ci=i('renderer: "V3D 4.2"'),ui=i(" is present in the console output, to confirm it’s setup correctly."),bn=y(),Qa=p("p"),Ja=i(`Soon after I started testing, I realized the framerate was fluctuating, and the V3D GPU frequency was dropping well below 500 MHz.
This can be observed by running the following command from a separate terminal:`),En=y(),Uo=new Da(!1),jo=y(),Ke=p("p"),hi=i("This issue has been reported in "),Ia=p("a"),fi=i("raspberrypi/linux#3935"),ki=i(`.
It seems the default `),Co=p("em"),di=i("governor"),yi=i(` scales the GPU frequency down, despite instructions being scheduled into the GPU workload queue.
A solution to prevent GPU frequency down-scaling, is to set the minimum frequency, by adding `),to=p("code"),vi=i("v3d_freq_min=500"),mi=i(" to the "),Do=p("code"),xi=i("/boot/config.txt"),wi=i(" file"),To=p("span"),eo=p("span"),gi=i("This is not optimal, as it increases power consumption, while the GPU is idle."),bi=i("."),_n=y(),ua=p("p"),Ei=i("This can also be used to "),Aa=p("a"),_i=i("overclock"),zi=i(` the GPU.
I’ve successfully tested overclocking the V3D GPU to 600 MHz, which results in a noticeable FPS improvement.`),zn=y(),ha=p("h2"),Is=p("a"),fa=o("svg"),ka=o("path"),Li=i("The Future"),Ln=y(),gr=p("p"),Pi=i("The "),Oo=p("code"),Mi=i("vc4-fkms-v3d"),Pn=i(" driver is known as the "),qo=p("em"),Gi=i("fake/firmware"),Mn=i(` DRM/KMS driver, where the kernel driver still delegates the interactions with the display controller to the firmware.
A newer `),Bo=p("code"),Ri=i("vc4-kms-v3d"),Si=i(" driver, known as the "),Xo=p("em"),ro=i("full"),Ii=i(" DRM/KMS driver, is now available, where the kernel drives the display controller directly."),Gn=y(),so=p("p"),Ai=i("I gave it a try, after an upgrade to the latest kernel version available (as of March 2021):"),da=y(),$o=new Da(!1),Vo=y(),br=p("p"),Ui=i("Unfortunately, I faced the issue reported in "),Rn=p("a"),jl=i("raspberrypi/linux#4020"),Cl=i(`.
I plan to try it again, once it’s fixed.
It seems `),Sn=p("a"),Dl=i("it may be possible"),Tl=i(` to use it in combination with the touchscreen driver for the DSI display.
So it could possibly enable `),Hi=p("strong"),Ol=i("interactivity"),ql=i(", by feeding the mouse uniform, with touchscreen events from "),In=p("a"),Bl=i("tslib"),Xl=i("."),pl=y(),ji=p("p"),$l=i("There are also few things that, I think, would be logical additions:"),cl=y(),Wr=p("ul"),Wi=p("li"),Vl=i("Forward keyboard events to the input keyboard texture"),Yl=y(),Ki=p("li"),Fl=i("Feed audio / video inputs to microphone / camera textures"),Nl=y(),Zi=p("li"),Hl=i("Package Shadertoy default media files"),Wl=y(),Qi=p("li"),Kl=i("Load arbitrary input texture files"),Zl=y(),Ji=p("li"),Ql=i("…"),ul=y(),Ci=p("p"),Jl=i(`What started as a toy project, to end year 2020 light-heartedly, turned out to be a small, yet very rewarding, journey into the world of open-source GPU programming.
I think I can safely say it: mission accomplished!`),hl=y(),Yo=p("p"),tp=i("I’d be happy to hear your feedback at "),An=p("a"),ep=i("https://github.com/astefanutti/kms-glsl"),rp=i("!"),this.h()},l(a){k=c(a,"FIGURE",{class:!0});var u=s(k);Cn(w.$$.fragment,u),$t=v(u),It=c(u,"FIGCAPTION",{});var Fo=s(It);d=l(Fo,"A "),Vt=c(Fo,"A",{href:!0});var kp=s(Vt);ye=l(kp,"shader"),kp.forEach(r),Oe=l(Fo," from"),st=l(Fo,qe),oe=v(Fo),At=c(Fo,"A",{href:!0});var dp=s(At);Ut=l(dp,"Shadertoy"),dp.forEach(r),ze=l(Fo,` running fullscreen on the Rapsberry Pi
    official touchscreen`),Fo.forEach(r),u.forEach(r),ne=v(a),gt=c(a,"P",{});var Di=s(gt);Mt=c(Di,"SPAN",{class:!0});var kl=s(Mt);$=c(kl,"STRONG",{});var yp=s($);ie=l(yp,"TL;DR:"),yp.forEach(r),ve=l(kl," If you just want to try it, you can head to the "),j=c(kl,"STRONG",{});var sp=s(j);C=c(sp,"A",{href:!0,rel:!0});var vp=s(C);W=l(vp,"project repository"),vp.forEach(r),at=l(sp,"."),sp.forEach(r),kl.forEach(r),K=l(Di,` As far as I can remember, I’ve always felt attracted by computer graphics.
I guess I approach the field from the angle of my Mathematics background, as I see it as a universal language between machines, arts, and possibly, nature`),V=c(Di,"SPAN",{class:!0}),s(V).forEach(r),S=c(Di,"SPAN",{class:!0});var ap=s(S);Y=c(ap,"EM",{});var mp=s(Y);Z=l(mp,"“How can it be that mathematics, being after all a product of human thought which is independent of experience, is so admirably appropriate to the objects of reality?”"),mp.forEach(r),ot=l(ap," – Albert Einstein."),ap.forEach(r),Q=l(Di,"."),Di.forEach(r),J=v(a),_=c(a,"P",{});var No=s(_);nt=l(No,"As a projection of that language, I find the "),I=c(No,"A",{href:!0,rel:!0});var xp=s(I);it=l(xp,"OpenGL Shading Language"),xp.forEach(r),tt=l(No,` an interesting case, at the intersection of computing and visual arts, that’s concise and expressive enough to demonstrate human ingenuity and creativity.
You can find me browsing for hours on `),D=c(No,"A",{href:!0,rel:!0});var wp=s(D);et=l(wp,"shadertoy.com"),wp.forEach(r),F=c(No,"SPAN",{class:!0}),s(F).forEach(r),z=c(No,"SPAN",{class:!0});var Ti=s(z);B=l(Ti,"Shadertoy has been created by "),jt=c(Ti,"EM",{});var gp=s(jt);ur=l(gp,"Iñigo Quilez"),gp.forEach(r),X=l(Ti,", that publishes very interesting articles, tutorials, and other awesome resources at "),Gt=c(Ti,"A",{href:!0,rel:!0});var bp=s(Gt);R=l(bp,"iquilezles.org"),bp.forEach(r),A=l(Ti,"."),Ti.forEach(r),Yt=l(No,", mesmerized by the visuals."),No.forEach(r),Be=v(a),g=c(a,"P",{});var Ho=s(g);Ft=l(Ho,"Since I built my "),me=c(Ho,"A",{href:!0});var Ep=s(me);U=l(Ep,"Kubernetes cluster with Rapsberry Pi"),Ep.forEach(r),Nt=l(Ho," a year ago, I’ve kept somewhere in a corner of my head, the idea I could use the touchscreen monitor to play with OpenGL, making the coolest cluster ever, to begin with 😎, and turning it eventually, into a small gaming device "),xe=c(Ho,"SPAN",{style:!0});var _p=s(xe);T=l(_p,"🕹👾"),_p.forEach(r),Rt=c(Ho,"SPAN",{class:!0}),s(Rt).forEach(r),ht=c(Ho,"SPAN",{class:!0});var Wo=s(ht);O=l(Wo,"As crazy as it may sounds, it’s possible to develop games in GLSL (click on the images to try it):"),Ht=c(Wo,"BR",{}),le=c(Wo,"A",{href:!0,rel:!0});var zp=s(le);Cn(L.$$.fragment,zp),zp.forEach(r),Wt=c(Wo,"BR",{}),pe=c(Wo,"A",{href:!0,rel:!0});var Lp=s(pe);Cn(P.$$.fragment,Lp),Lp.forEach(r),Kt=c(Wo,"BR",{}),ce=c(Wo,"A",{href:!0,rel:!0});var Pp=s(ce);Cn(M.$$.fragment,Pp),Pp.forEach(r),Wo.forEach(r),Zt=l(Ho,"."),Ho.forEach(r),ft=v(a),E=c(a,"P",{});var dl=s(E);ue=l(dl,"So I’ve accepted the mission to run shaders from "),Xe=c(dl,"EM",{});var Mp=s(Xe);he=l(Mp,"Shadertoy"),Mp.forEach(r),rr=l(dl,", on the Raspberry Pi!"),dl.forEach(r),G=v(a),kt=c(a,"H2",{id:!0});var op=s(kt);Qt=c(op,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var Gp=s(Qt);dt=n(Gp,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var Rp=s(dt);$e=n(Rp,"path",{d:!0}),s($e).forEach(r),Rp.forEach(r),Gp.forEach(r),b=l(op,"The Linux Graphics Stack"),op.forEach(r),Jt=v(a),Ct=c(a,"P",{});var Oi=s(Ct);Le=l(Oi,"I use a Raspberry Pi 4 as my cluster’s "),N=c(Oi,"EM",{});var Sp=s(N);bt=l(Sp,"main"),Sp.forEach(r),te=l(Oi,` node, that’s connected to the touchscreen monitor.
It runs the Lite version of `),Dt=c(Oi,"A",{href:!0,rel:!0});var Ip=s(Dt);Pe=l(Ip,"Raspberry Pi OS"),Ip.forEach(r),yt=l(Oi,", which means there is no windowing system available, like X11."),Oi.forEach(r),we=v(a),Et=c(a,"P",{});var Ap=s(Et);Me=l(Ap,"I also have some Rapsberry Pi 3, so I wanted to have a solution that would work on these as well, and possibly on any other Linux device with GPU hardware."),Ap.forEach(r),vt=v(a),Tt=c(a,"P",{});var Up=s(Tt);mt=l(Up,"The following diagram gives a good understanding of the Linux graphics stack:"),Up.forEach(r),fe=v(a),q=c(a,"FIGURE",{class:!0});var yl=s(q);Cn(rt.$$.fragment,yl),ge=v(yl),Ur=c(yl,"FIGCAPTION",{});var vl=s(Ur);xt=l(vl,"Illustration of the Linux graphics stack"),Ge=c(vl,"BR",{}),H=c(vl,"SMALL",{});var jp=s(H);Er=l(jp,"(by Shmuel Csaba Otto Traian, CC-BY-SA 4.0)"),jp.forEach(r),vl.forEach(r),yl.forEach(r),sr=v(a),lt=c(a,"P",{});var Cp=s(lt);ke=l(Cp,"With the requirement to run without any windowing system, like X or Wayland, this implies relying either on:"),Cp.forEach(r),hs=v(a),Ze=c(a,"UL",{});var ml=s(Ze);_r=c(ml,"LI",{});var xl=s(_r);pt=l(xl,"Proprietary device drivers (the "),Ot=c(xl,"A",{href:!0,rel:!0});var Dp=s(Ot);ya=l(Dp,"binary blob"),Dp.forEach(r),Kr=l(xl," at the bottom,left-hand side of the illustation),"),xl.forEach(r),m=v(ml),qt=c(ml,"LI",{});var cs=s(qt);va=l(cs,"Or, Mesa"),_t=c(cs,"SPAN",{class:!0}),s(_t).forEach(r),ar=c(cs,"SPAN",{class:!0});var Tp=s(ar);Us=l(Tp,"The Mesa 3D Graphics Library, is an open source software implementation of the OpenGL specifications. The project also hosts the development of open-source device drivers for graphic chipsets."),Tp.forEach(r),zr=l(cs," open-source device drivers, using the "),Br=c(cs,"A",{href:!0,rel:!0});var Op=s(Br);Lr=l(Op,"DRM"),Op.forEach(r),ma=l(cs,"/"),Re=c(cs,"A",{href:!0,rel:!0});var qp=s(Re);xa=l(qp,"KMS"),qp.forEach(r),Se=l(cs," Linux kernel sub-system, to implement "),or=c(cs,"A",{href:!0,rel:!0});var Bp=s(or);wa=l(Bp,"mode-setting"),Bp.forEach(r),de=l(cs," and "),nr=c(cs,"A",{href:!0,rel:!0});var Xp=s(nr);ga=l(Xp,"page-flipping"),Xp.forEach(r),ee=l(cs," operations."),cs.forEach(r),ml.forEach(r),hr=v(a),fr=c(a,"P",{});var qi=s(fr);Pr=l(qi,"While the later option requires more development work, it promises to work across the "),Xr=c(qi,"A",{href:!0,rel:!0});var $p=s(Xr);Mr=l($p,"range of GPUs"),$p.forEach(r),ba=l(qi,` that have a Mesa driver available.
It also brings the `),ir=c(qi,"EM",{});var Vp=s(ir);Ea=l(Vp,"a-priori"),Vp.forEach(r),re=l(qi," benefits of the open-source model, with community and freely accessible documentation."),qi.forEach(r),jr=v(a),Zr=c(a,"P",{});var Yp=s(Zr);$r=l(Yp,"Now that the Linux stack is clearer, let’s continue on that mission, and find out what drivers exist for the Raspberry Pi …"),Yp.forEach(r),fs=v(a),Qe=c(a,"H2",{id:!0});var np=s(Qe);Gr=c(np,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var Fp=s(Gr);Ve=n(Fp,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var Np=s(Ve);ks=n(Np,"path",{d:!0}),s(ks).forEach(r),Np.forEach(r),Fp.forEach(r),Ie=l(np,"The Rapsberry Pi"),np.forEach(r),kr=v(a),Qr=c(a,"P",{});var Hp=s(Qr);Ae=l(Hp,`The Raspberry Pi 3 Broadcom BCM2837 SoC includes the VideoCore IV GPU, which could initially be used with the corresponding proprietary driver, and closed-source implementation of the graphics libraries.
While some portions of that stack was released as open-source in 2012, most of the work is still done in the closed-source runtime libraries and GPU code, as depicted in this diagram:`),Hp.forEach(r),Rr=v(a),Cr=c(a,"FIGURE",{});var wl=s(Cr);Cn(zt.$$.fragment,wl),Vr=v(wl),Yr=c(wl,"FIGCAPTION",{});var gl=s(Yr);Fr=l(gl,"The VideoCore IV GPU driver stack"),Qo=c(gl,"BR",{}),Ye=c(gl,"SMALL",{});var Wp=s(Ye);ds=l(Wp,"(CC BY-SA 3.0)"),Wp.forEach(r),gl.forEach(r),wl.forEach(r),no=v(a),Lt=c(a,"P",{});var ao=s(Lt);js=l(ao,"The C header files and libraries for these Broadcom specific implementations are located in the "),Oa=c(ao,"CODE",{});var Kp=s(Oa);Ue=l(Kp,"/opt/vc/include"),Kp.forEach(r),ys=l(ao," and "),qa=c(ao,"CODE",{});var Zp=s(qa);vs=l(Zp,"/opt/vc/lib"),Zp.forEach(r),Jo=l(ao," directories"),Fe=c(ao,"SPAN",{class:!0}),s(Fe).forEach(r),lr=c(ao,"SPAN",{class:!0});var bl=s(lr);tn=l(bl,"These header files and libraries can be found at "),se=c(bl,"A",{href:!0,rel:!0});var Qp=s(se);ms=l(Qp,"https://github.com/raspberrypi/firmware"),Qp.forEach(r),en=l(bl,"."),bl.forEach(r),Jr=l(ao,"."),ao.forEach(r),io=v(a),ct=c(a,"P",{});var qr=s(ct);rn=l(qr,"In 2014, Broadcom and the Raspberry Pi Foundation announced the documentation release for the VideoCore IV 3D graphics processor"),Ne=c(qr,"SPAN",{class:!0}),s(Ne).forEach(r),dr=c(qr,"SPAN",{class:!0});var El=s(dr);sn=l(El,"The Architecture Reference Guide for the Broadcom VideoCore IV GPU is available at "),Pt=c(El,"A",{href:!0,rel:!0});var Jp=s(Pt);Cs=l(Jp,"https://docs.broadcom.com/docs/12358545"),Jp.forEach(r),an=l(El,"."),El.forEach(r),Ds=l(qr,", as well as the source release of the graphics stack under a BSD license"),ts=c(qr,"SPAN",{class:!0}),s(ts).forEach(r),xs=c(qr,"SPAN",{class:!0});var _l=s(xs);Ts=l(_l,"The source code for the userland libraries can be found at "),Dr=c(_l,"A",{href:!0,rel:!0});var tc=s(Dr);on=l(tc,"https://github.com/raspberrypi/userland"),tc.forEach(r),Os=l(_l,"."),_l.forEach(r),qs=l(qr,`.
Few months after the announcement, the source code of a Gallium-based Mesa OpenGL driver for the Broadcom SoC GPU, written from scratch by `),Ba=c(qr,"EM",{});var ec=s(Ba);pr=l(ec,"Eric Anholt"),ec.forEach(r),Bs=l(qr,", was committed to the Mesa project"),ws=c(qr,"SPAN",{class:!0}),s(ws).forEach(r),Nr=c(qr,"SPAN",{class:!0});var Bi=s(Nr);cr=l(Bi,"The source code for the VC4 driver can be found in the "),es=c(Bi,"CODE",{});var rc=s(es);nn=l(rc,"src/gallium/drivers/vc4"),rc.forEach(r),je=l(Bi," directory of the "),Sr=c(Bi,"A",{href:!0,rel:!0});var sc=s(Sr);ln=l(sc,"Mesa repository"),sc.forEach(r),gs=l(Bi,"."),Bi.forEach(r),pn=l(qr,`.
`),He=c(qr,"STRONG",{});var ac=s(He);rs=l(ac,"This paved the way towards open-source drivers for the Rapsberry Pi GPUs"),ac.forEach(r),cn=l(qr,"."),qr.forEach(r),Je=v(a),tr=c(a,"P",{});var Un=s(tr);_a=l(Un,"The Raspberry Pi 4 Broadcom BCM2711 SoC (formerly BCM2838) now includes the VideoCore VI GPU, that’s only supported by a Mesa driver"),Xa=c(Un,"SPAN",{class:!0}),s(Xa).forEach(r),ae=c(Un,"SPAN",{class:!0});var Xi=s(ae);bs=l(Xi,"The source code for the V3D driver can be found in the "),$a=c(Xi,"CODE",{});var oc=s($a);We=l(oc,"src/gallium/drivers/v3d"),oc.forEach(r),Es=l(Xi," directory of the "),Xs=c(Xi,"A",{href:!0,rel:!0});var nc=s(Xs);yr=l(nc,"Mesa repository"),nc.forEach(r),ss=l(Xi,"."),Xi.forEach(r),un=l(Un,`.
The original Broadcom proprietary driver, specifically designed for the BCM2837 SoC GPU, does not work on the Rapsberry Pi 4.
This Mesa V3D (VideoCore VI) driver `),Tr=c(Un,"A",{href:!0,rel:!0});var ic=s(Tr);vr=l(ic,"conforms to OpenGL ES 3.1"),ic.forEach(r),$s=l(Un," (as of March 2021), while the VideoCore VI GPU is capable of OpenGL ES 3.2."),Un.forEach(r),lo=v(a),Ce=c(a,"P",{});var lc=s(Ce);Vs=l(lc,"After this research phase, and its few historical findings, I’m convinced the way forward to succeed in my mission, is to rely on these open-source drivers …"),lc.forEach(r),po=v(a),be=c(a,"H2",{id:!0});var ip=s(be);Ee=c(ip,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var pc=s(Ee);_s=n(pc,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var cc=s(_s);Bt=n(cc,"path",{d:!0}),s(Bt).forEach(r),cc.forEach(r),pc.forEach(r),zs=l(ip,"The Programming"),ip.forEach(r),co=v(a),_e=c(a,"P",{});var oo=s(_e);hn=l(oo,"With these drivers, running OpenGL or OpenGL ES, without X11, is possible using the "),Ir=c(oo,"A",{href:!0,rel:!0});var uc=s(Ir);fn=l(uc,"DRM"),uc.forEach(r),Ls=l(oo,"/"),Ys=c(oo,"A",{href:!0,rel:!0});var hc=s(Ys);mr=l(hc,"KMS"),hc.forEach(r),Fs=l(oo," Linux kernel sub-system"),Va=c(oo,"SPAN",{class:!0}),s(Va).forEach(r),St=c(oo,"SPAN",{class:!0});var zl=s(St);Ns=l(zl,"The "),Hs=c(zl,"A",{href:!0,rel:!0});var fc=s(Hs);as=l(fc,"Linux GPU Driver Developer’s Guide"),fc.forEach(r),kn=l(zl," provides an extensive documentation of the DRM/KMS sub-system."),zl.forEach(r),De=l(oo,", in combination with the Mesa Generic Buffer Management (GBM) library."),oo.forEach(r),Ps=v(a),Ar=c(a,"P",{});var Ko=s(Ar);os=l(Ko,"Lukily, I stumbled upon "),Ws=c(Ko,"A",{href:!0,rel:!0});var kc=s(Ws);xr=l(kc,"kmscube"),kc.forEach(r),Ms=l(Ko,", which is an example application, written in C, that demonstrates how to use the KMS/GBM/EGL APIs to drive bare metal graphics, and provides an implementation of the "),Ks=c(Ko,"A",{href:!0,rel:!0});var dc=s(Ks);Te=l(dc,"mode-setting"),dc.forEach(r),Zs=l(Ko," and "),Qs=c(Ko,"A",{href:!0,rel:!0});var yc=s(Qs);Js=l(yc,"page-flipping"),yc.forEach(r),dn=l(Ko," operations."),Ko.forEach(r),Gs=v(a),za=c(a,"P",{});var vc=s(za);ta=l(vc,`The basic idea is to use two triangles, covering the entire screen, that are rasterized by sampling the shader for every pixel.
So that left me with:`),vc.forEach(r),uo=v(a),Xt=c(a,"P",{});var mc=s(Xt);ea=l(mc,"1) Loading a copy of the Shadertoy shader from the file system:"),mc.forEach(r),ho=v(a),ns=Ta(a,!1),is=v(a),La=c(a,"P",{});var xc=s(La);ra=l(xc,"2) Compiling the shaders on the GPU, creating the OpenGL program, linking it, and initializing uniform variables and buffers:"),xc.forEach(r),fo=v(a),ls=Ta(a,!1),Ya=v(a),sa=c(a,"P",{});var wc=s(sa);Or=l(wc,"3) Finally, rasterizing the triangles, so that every pixel from the screen gets sampled from the fragment shader:"),wc.forEach(r),x=v(a),ut=Ta(a,!1),ko=v(a),aa=c(a,"P",{});var Ll=s(aa);Bn=l(Ll,"The complete source code is available at "),Pa=c(Ll,"A",{href:!0,rel:!0});var gc=s(Pa);Xn=l(gc,"https://github.com/astefanutti/kms-glsl"),gc.forEach(r),$n=l(Ll,"."),Ll.forEach(r),yn=v(a),oa=c(a,"H2",{id:!0});var lp=s(oa);Rs=c(lp,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var bc=s(Rs);na=n(bc,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var Ec=s(na);yo=n(Ec,"path",{d:!0}),s(yo).forEach(r),Ec.forEach(r),bc.forEach(r),Vn=l(lp,"The Fun"),lp.forEach(r),vn=v(a),ia=c(a,"FIGURE",{});var Pl=s(ia);Cn(Ma.$$.fragment,Pl),Yn=v(Pl),Hr=c(Pl,"FIGCAPTION",{});var Zo=s(Hr);Fn=l(Zo,"A selection of shaders from Shadertoy, that run successfully on the Rapsberry Pi."),Nn=c(Zo,"BR",{}),Hn=l(Zo,`
    You can find copies of these in the `),vo=c(Zo,"CODE",{});var _c=s(vo);wt=l(_c,"examples"),_c.forEach(r),er=l(Zo," directory of the "),wr=c(Zo,"A",{href:!0});var zc=s(wr);mn=l(zc,"project repository"),zc.forEach(r),Wn=l(Zo,"."),Zo.forEach(r),Pl.forEach(r),mo=v(a),Fa=c(a,"P",{});var Lc=s(Fa);Kn=l(Lc,"I’ve successfully run shaders on the RPi 3B+ and RPi 4, with Raspberry Pi OS Lite 2020-12-02, Linux kernel 5.4.79."),Lc.forEach(r),xn=v(a),Na=c(a,"P",{});var Pc=s(Na);Zn=l(Pc,"You can run the following instructions to build the CLI binary:"),Pc.forEach(r),xo=v(a),wo=Ta(a,!1),Ha=v(a),la=c(a,"P",{});var Ml=s(la);Qn=l(Ml,`The VC4/V3D driver kernel module must be activated.
Assuming you’ve installed `),Ss=c(Ml,"A",{href:!0,rel:!0});var Mc=s(Ss);Jn=l(Mc,"Raspberry Pi OS"),Mc.forEach(r),ti=l(Ml,", this can be achieved by running the following commands:"),Ml.forEach(r),Ga=v(a),ps=c(a,"P",{});var $i=s(ps);ei=l($i,"1) Edit the "),go=c($i,"CODE",{});var Gc=s(go);ri=l(Gc,"/boot/config.txt"),Gc.forEach(r),si=v($i),Ra=c($i,"A",{href:!0,rel:!0});var Rc=s(Ra);ai=l(Rc,"file"),Rc.forEach(r),oi=l($i,", e.g.:"),$i.forEach(r),Sa=v(a),bo=Ta(a,!1),Eo=v(a),Wa=c(a,"P",{});var Sc=s(Wa);Ka=l(Sc,"2) Set the following properties:"),Sc.forEach(r),wn=v(a),_o=Ta(a,!1),zo=v(a),Za=c(a,"P",{});var Ic=s(Za);ni=l(Ic,"3) Reboot your Raspberry Pi, so that the changes are taken into account, e.g.:"),Ic.forEach(r),gn=v(a),Lo=Ta(a,!1),Po=v(a),pa=c(a,"P",{});var Gl=s(pa);ii=l(Gl,"You can then run shaders from the "),Mo=c(Gl,"CODE",{});var Ac=s(Mo);li=l(Ac,"examples"),Ac.forEach(r),pi=l(Gl," directory, e.g.:"),Gl.forEach(r),Go=v(a),Ro=Ta(a,!1),So=v(a),ca=c(a,"P",{});var Rl=s(ca);Io=l(Rl,"And check that "),Ao=c(Rl,"CODE",{});var Uc=s(Ao);ci=l(Uc,'renderer: "V3D 4.2"'),Uc.forEach(r),ui=l(Rl," is present in the console output, to confirm it’s setup correctly."),Rl.forEach(r),bn=v(a),Qa=c(a,"P",{});var jc=s(Qa);Ja=l(jc,`Soon after I started testing, I realized the framerate was fluctuating, and the V3D GPU frequency was dropping well below 500 MHz.
This can be observed by running the following command from a separate terminal:`),jc.forEach(r),En=v(a),Uo=Ta(a,!1),jo=v(a),Ke=c(a,"P",{});var us=s(Ke);hi=l(us,"This issue has been reported in "),Ia=c(us,"A",{href:!0,rel:!0});var Cc=s(Ia);fi=l(Cc,"raspberrypi/linux#3935"),Cc.forEach(r),ki=l(us,`.
It seems the default `),Co=c(us,"EM",{});var Dc=s(Co);di=l(Dc,"governor"),Dc.forEach(r),yi=l(us,` scales the GPU frequency down, despite instructions being scheduled into the GPU workload queue.
A solution to prevent GPU frequency down-scaling, is to set the minimum frequency, by adding `),to=c(us,"CODE",{});var Tc=s(to);vi=l(Tc,"v3d_freq_min=500"),Tc.forEach(r),mi=l(us," to the "),Do=c(us,"CODE",{});var Oc=s(Do);xi=l(Oc,"/boot/config.txt"),Oc.forEach(r),wi=l(us," file"),To=c(us,"SPAN",{class:!0}),s(To).forEach(r),eo=c(us,"SPAN",{class:!0});var qc=s(eo);gi=l(qc,"This is not optimal, as it increases power consumption, while the GPU is idle."),qc.forEach(r),bi=l(us,"."),us.forEach(r),_n=v(a),ua=c(a,"P",{});var Sl=s(ua);Ei=l(Sl,"This can also be used to "),Aa=c(Sl,"A",{href:!0,rel:!0});var Bc=s(Aa);_i=l(Bc,"overclock"),Bc.forEach(r),zi=l(Sl,` the GPU.
I’ve successfully tested overclocking the V3D GPU to 600 MHz, which results in a noticeable FPS improvement.`),Sl.forEach(r),zn=v(a),ha=c(a,"H2",{id:!0});var pp=s(ha);Is=c(pp,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var Xc=s(Is);fa=n(Xc,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var $c=s(fa);ka=n($c,"path",{d:!0}),s(ka).forEach(r),$c.forEach(r),Xc.forEach(r),Li=l(pp,"The Future"),pp.forEach(r),Ln=v(a),gr=c(a,"P",{});var Ua=s(gr);Pi=l(Ua,"The "),Oo=c(Ua,"CODE",{});var Vc=s(Oo);Mi=l(Vc,"vc4-fkms-v3d"),Vc.forEach(r),Pn=l(Ua," driver is known as the "),qo=c(Ua,"EM",{});var Yc=s(qo);Gi=l(Yc,"fake/firmware"),Yc.forEach(r),Mn=l(Ua,` DRM/KMS driver, where the kernel driver still delegates the interactions with the display controller to the firmware.
A newer `),Bo=c(Ua,"CODE",{});var Fc=s(Bo);Ri=l(Fc,"vc4-kms-v3d"),Fc.forEach(r),Si=l(Ua," driver, known as the "),Xo=c(Ua,"EM",{});var Nc=s(Xo);ro=l(Nc,"full"),Nc.forEach(r),Ii=l(Ua," DRM/KMS driver, is now available, where the kernel drives the display controller directly."),Ua.forEach(r),Gn=v(a),so=c(a,"P",{});var Hc=s(so);Ai=l(Hc,"I gave it a try, after an upgrade to the latest kernel version available (as of March 2021):"),Hc.forEach(r),da=v(a),$o=Ta(a,!1),Vo=v(a),br=c(a,"P",{});var ja=s(br);Ui=l(ja,"Unfortunately, I faced the issue reported in "),Rn=c(ja,"A",{href:!0,rel:!0});var Wc=s(Rn);jl=l(Wc,"raspberrypi/linux#4020"),Wc.forEach(r),Cl=l(ja,`.
I plan to try it again, once it’s fixed.
It seems `),Sn=c(ja,"A",{href:!0,rel:!0});var Kc=s(Sn);Dl=l(Kc,"it may be possible"),Kc.forEach(r),Tl=l(ja,` to use it in combination with the touchscreen driver for the DSI display.
So it could possibly enable `),Hi=c(ja,"STRONG",{});var Zc=s(Hi);Ol=l(Zc,"interactivity"),Zc.forEach(r),ql=l(ja,", by feeding the mouse uniform, with touchscreen events from "),In=c(ja,"A",{href:!0,rel:!0});var Qc=s(In);Bl=l(Qc,"tslib"),Qc.forEach(r),Xl=l(ja,"."),ja.forEach(r),pl=v(a),ji=c(a,"P",{});var Jc=s(ji);$l=l(Jc,"There are also few things that, I think, would be logical additions:"),Jc.forEach(r),cl=v(a),Wr=c(a,"UL",{});var Ca=s(Wr);Wi=c(Ca,"LI",{});var tu=s(Wi);Vl=l(tu,"Forward keyboard events to the input keyboard texture"),tu.forEach(r),Yl=v(Ca),Ki=c(Ca,"LI",{});var eu=s(Ki);Fl=l(eu,"Feed audio / video inputs to microphone / camera textures"),eu.forEach(r),Nl=v(Ca),Zi=c(Ca,"LI",{});var ru=s(Zi);Hl=l(ru,"Package Shadertoy default media files"),ru.forEach(r),Wl=v(Ca),Qi=c(Ca,"LI",{});var su=s(Qi);Kl=l(su,"Load arbitrary input texture files"),su.forEach(r),Zl=v(Ca),Ji=c(Ca,"LI",{});var au=s(Ji);Ql=l(au,"…"),au.forEach(r),Ca.forEach(r),ul=v(a),Ci=c(a,"P",{});var ou=s(Ci);Jl=l(ou,`What started as a toy project, to end year 2020 light-heartedly, turned out to be a small, yet very rewarding, journey into the world of open-source GPU programming.
I think I can safely say it: mission accomplished!`),ou.forEach(r),hl=v(a),Yo=c(a,"P",{});var Il=s(Yo);tp=l(Il,"I’d be happy to hear your feedback at "),An=c(Il,"A",{href:!0,rel:!0});var nu=s(An);ep=l(nu,"https://github.com/astefanutti/kms-glsl"),nu.forEach(r),rp=l(Il,"!"),Il.forEach(r),this.h()},h(){t(Vt,"href","https://www.shadertoy.com/view/MsX3Wj"),t(At,"href","https://www.shadertoy.com"),t(k,"class","fullwidth"),t(C,"href","https://github.com/astefanutti/kms-glsl"),t(C,"rel","nofollow"),t(Mt,"class","marginnote"),t(V,"class","sidenote-number"),t(S,"class","sidenote"),t(I,"href","https://en.wikipedia.org/wiki/OpenGL_Shading_Language"),t(I,"rel","nofollow"),t(D,"href","https://www.shadertoy.com/"),t(D,"rel","nofollow"),t(F,"class","sidenote-number"),t(Gt,"href","https://www.iquilezles.org"),t(Gt,"rel","nofollow"),t(z,"class","sidenote"),t(me,"href","/anatomy-of-my-kubernetes-cluster"),f(xe,"white-space","nowrap"),t(Rt,"class","sidenote-number"),t(le,"href","https://www.shadertoy.com/view/MddGzf"),t(le,"rel","nofollow"),t(pe,"href","https://www.shadertoy.com/view/Ms3XWN"),t(pe,"rel","nofollow"),t(ce,"href","https://www.shadertoy.com/view/wllSRs"),t(ce,"rel","nofollow"),t(ht,"class","sidenote"),t($e,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(dt,"viewBox","0 0 16 16"),t(dt,"version","1.1"),t(dt,"aria-hidden","true"),t(Qt,"class","anchor"),t(Qt,"aria-hidden","true"),t(Qt,"tabindex","-1"),t(Qt,"href","#the-linux-graphics-stack"),t(kt,"id","the-linux-graphics-stack"),t(Dt,"href","https://www.raspberrypi.org/software/operating-systems"),t(Dt,"rel","nofollow"),t(q,"class","liquid"),t(Ot,"href","https://en.wikipedia.org/wiki/Proprietary_device_driver"),t(Ot,"rel","nofollow"),t(_t,"class","sidenote-number"),t(ar,"class","sidenote"),t(Br,"href","https://en.wikipedia.org/wiki/Direct_Rendering_Manager"),t(Br,"rel","nofollow"),t(Re,"href","https://en.wikipedia.org/wiki/Direct_Rendering_Manager#Kernel_Mode_Setting"),t(Re,"rel","nofollow"),t(or,"href","https://en.wikipedia.org/wiki/Mode-setting"),t(or,"rel","nofollow"),t(nr,"href","https://en.wikipedia.org/wiki/Multiple_buffering#Page_flipping"),t(nr,"rel","nofollow"),t(Xr,"href","https://docs.mesa3d.org/systems.html"),t(Xr,"rel","nofollow"),t(ks,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(Ve,"viewBox","0 0 16 16"),t(Ve,"version","1.1"),t(Ve,"aria-hidden","true"),t(Gr,"class","anchor"),t(Gr,"aria-hidden","true"),t(Gr,"tabindex","-1"),t(Gr,"href","#the-rapsberry-pi"),t(Qe,"id","the-rapsberry-pi"),t(Fe,"class","sidenote-number"),t(se,"href","https://github.com/raspberrypi/firmware"),t(se,"rel","nofollow"),t(lr,"class","sidenote"),t(Ne,"class","sidenote-number"),t(Pt,"href","https://docs.broadcom.com/docs/12358545"),t(Pt,"rel","nofollow"),t(dr,"class","sidenote"),t(ts,"class","sidenote-number"),t(Dr,"href","https://github.com/raspberrypi/userland"),t(Dr,"rel","nofollow"),t(xs,"class","sidenote"),t(ws,"class","sidenote-number"),t(Sr,"href","https://gitlab.freedesktop.org/mesa/mesa"),t(Sr,"rel","nofollow"),t(Nr,"class","sidenote"),t(Xa,"class","sidenote-number"),t(Xs,"href","https://gitlab.freedesktop.org/mesa/mesa"),t(Xs,"rel","nofollow"),t(ae,"class","sidenote"),t(Tr,"href","https://www.khronos.org/conformance/adopters/conformant-products/opengles#submission_882"),t(Tr,"rel","nofollow"),t(Bt,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(_s,"viewBox","0 0 16 16"),t(_s,"version","1.1"),t(_s,"aria-hidden","true"),t(Ee,"class","anchor"),t(Ee,"aria-hidden","true"),t(Ee,"tabindex","-1"),t(Ee,"href","#the-programming"),t(be,"id","the-programming"),t(Ir,"href","https://en.wikipedia.org/wiki/Direct_Rendering_Manager"),t(Ir,"rel","nofollow"),t(Ys,"href","https://en.wikipedia.org/wiki/Direct_Rendering_Manager#Kernel_Mode_Setting"),t(Ys,"rel","nofollow"),t(Va,"class","sidenote-number"),t(Hs,"href","https://www.kernel.org/doc/html/v5.10/gpu/introduction.html"),t(Hs,"rel","nofollow"),t(St,"class","sidenote"),t(Ws,"href","https://gitlab.freedesktop.org/mesa/kmscube/"),t(Ws,"rel","nofollow"),t(Ks,"href","https://en.wikipedia.org/wiki/Mode-setting"),t(Ks,"rel","nofollow"),t(Qs,"href","https://en.wikipedia.org/wiki/Multiple_buffering#Page_flipping"),t(Qs,"rel","nofollow"),ns.a=is,ls.a=Ya,ut.a=ko,t(Pa,"href","https://github.com/astefanutti/kms-glsl"),t(Pa,"rel","nofollow"),t(yo,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(na,"viewBox","0 0 16 16"),t(na,"version","1.1"),t(na,"aria-hidden","true"),t(Rs,"class","anchor"),t(Rs,"aria-hidden","true"),t(Rs,"tabindex","-1"),t(Rs,"href","#the-fun"),t(oa,"id","the-fun"),t(wr,"href","https://github.com/astefanutti/kms-glsl"),wo.a=Ha,t(Ss,"href","https://www.raspberrypi.org/software/operating-systems"),t(Ss,"rel","nofollow"),t(Ra,"href","https://www.raspberrypi.org/documentation/configuration/config-txt/"),t(Ra,"rel","nofollow"),bo.a=Eo,_o.a=zo,Lo.a=Po,Ro.a=So,Uo.a=jo,t(Ia,"href","https://github.com/raspberrypi/linux/issues/3935"),t(Ia,"rel","nofollow"),t(To,"class","sidenote-number"),t(eo,"class","sidenote"),t(Aa,"href","https://www.raspberrypi.org/documentation/configuration/config-txt/overclocking.md"),t(Aa,"rel","nofollow"),t(ka,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),t(fa,"viewBox","0 0 16 16"),t(fa,"version","1.1"),t(fa,"aria-hidden","true"),t(Is,"class","anchor"),t(Is,"aria-hidden","true"),t(Is,"tabindex","-1"),t(Is,"href","#the-future"),t(ha,"id","the-future"),$o.a=Vo,t(Rn,"href","https://github.com/raspberrypi/linux/issues/4020"),t(Rn,"rel","nofollow"),t(Sn,"href","https://www.raspberrypi.org/forums/viewtopic.php?t=293877#p1775592"),t(Sn,"rel","nofollow"),t(In,"href","http://www.tslib.org"),t(In,"rel","nofollow"),t(An,"href","https://github.com/astefanutti/kms-glsl"),t(An,"rel","nofollow")},m(a,u){h(a,k,u),Dn(w,k,null),e(k,$t),e(k,It),e(It,d),e(It,Vt),e(Vt,ye),e(It,Oe),e(It,st),e(It,oe),e(It,At),e(At,Ut),e(It,ze),h(a,ne,u),h(a,gt,u),e(gt,Mt),e(Mt,$),e($,ie),e(Mt,ve),e(Mt,j),e(j,C),e(C,W),e(j,at),e(gt,K),e(gt,V),e(gt,S),e(S,Y),e(Y,Z),e(S,ot),e(gt,Q),h(a,J,u),h(a,_,u),e(_,nt),e(_,I),e(I,it),e(_,tt),e(_,D),e(D,et),e(_,F),e(_,z),e(z,B),e(z,jt),e(jt,ur),e(z,X),e(z,Gt),e(Gt,R),e(z,A),e(_,Yt),h(a,Be,u),h(a,g,u),e(g,Ft),e(g,me),e(me,U),e(g,Nt),e(g,xe),e(xe,T),e(g,Rt),e(g,ht),e(ht,O),e(ht,Ht),e(ht,le),Dn(L,le,null),e(ht,Wt),e(ht,pe),Dn(P,pe,null),e(ht,Kt),e(ht,ce),Dn(M,ce,null),e(g,Zt),h(a,ft,u),h(a,E,u),e(E,ue),e(E,Xe),e(Xe,he),e(E,rr),h(a,G,u),h(a,kt,u),e(kt,Qt),e(Qt,dt),e(dt,$e),e(kt,b),h(a,Jt,u),h(a,Ct,u),e(Ct,Le),e(Ct,N),e(N,bt),e(Ct,te),e(Ct,Dt),e(Dt,Pe),e(Ct,yt),h(a,we,u),h(a,Et,u),e(Et,Me),h(a,vt,u),h(a,Tt,u),e(Tt,mt),h(a,fe,u),h(a,q,u),Dn(rt,q,null),e(q,ge),e(q,Ur),e(Ur,xt),e(Ur,Ge),e(Ur,H),e(H,Er),h(a,sr,u),h(a,lt,u),e(lt,ke),h(a,hs,u),h(a,Ze,u),e(Ze,_r),e(_r,pt),e(_r,Ot),e(Ot,ya),e(_r,Kr),e(Ze,m),e(Ze,qt),e(qt,va),e(qt,_t),e(qt,ar),e(ar,Us),e(qt,zr),e(qt,Br),e(Br,Lr),e(qt,ma),e(qt,Re),e(Re,xa),e(qt,Se),e(qt,or),e(or,wa),e(qt,de),e(qt,nr),e(nr,ga),e(qt,ee),h(a,hr,u),h(a,fr,u),e(fr,Pr),e(fr,Xr),e(Xr,Mr),e(fr,ba),e(fr,ir),e(ir,Ea),e(fr,re),h(a,jr,u),h(a,Zr,u),e(Zr,$r),h(a,fs,u),h(a,Qe,u),e(Qe,Gr),e(Gr,Ve),e(Ve,ks),e(Qe,Ie),h(a,kr,u),h(a,Qr,u),e(Qr,Ae),h(a,Rr,u),h(a,Cr,u),Dn(zt,Cr,null),e(Cr,Vr),e(Cr,Yr),e(Yr,Fr),e(Yr,Qo),e(Yr,Ye),e(Ye,ds),h(a,no,u),h(a,Lt,u),e(Lt,js),e(Lt,Oa),e(Oa,Ue),e(Lt,ys),e(Lt,qa),e(qa,vs),e(Lt,Jo),e(Lt,Fe),e(Lt,lr),e(lr,tn),e(lr,se),e(se,ms),e(lr,en),e(Lt,Jr),h(a,io,u),h(a,ct,u),e(ct,rn),e(ct,Ne),e(ct,dr),e(dr,sn),e(dr,Pt),e(Pt,Cs),e(dr,an),e(ct,Ds),e(ct,ts),e(ct,xs),e(xs,Ts),e(xs,Dr),e(Dr,on),e(xs,Os),e(ct,qs),e(ct,Ba),e(Ba,pr),e(ct,Bs),e(ct,ws),e(ct,Nr),e(Nr,cr),e(Nr,es),e(es,nn),e(Nr,je),e(Nr,Sr),e(Sr,ln),e(Nr,gs),e(ct,pn),e(ct,He),e(He,rs),e(ct,cn),h(a,Je,u),h(a,tr,u),e(tr,_a),e(tr,Xa),e(tr,ae),e(ae,bs),e(ae,$a),e($a,We),e(ae,Es),e(ae,Xs),e(Xs,yr),e(ae,ss),e(tr,un),e(tr,Tr),e(Tr,vr),e(tr,$s),h(a,lo,u),h(a,Ce,u),e(Ce,Vs),h(a,po,u),h(a,be,u),e(be,Ee),e(Ee,_s),e(_s,Bt),e(be,zs),h(a,co,u),h(a,_e,u),e(_e,hn),e(_e,Ir),e(Ir,fn),e(_e,Ls),e(_e,Ys),e(Ys,mr),e(_e,Fs),e(_e,Va),e(_e,St),e(St,Ns),e(St,Hs),e(Hs,as),e(St,kn),e(_e,De),h(a,Ps,u),h(a,Ar,u),e(Ar,os),e(Ar,Ws),e(Ws,xr),e(Ar,Ms),e(Ar,Ks),e(Ks,Te),e(Ar,Zs),e(Ar,Qs),e(Qs,Js),e(Ar,dn),h(a,Gs,u),h(a,za,u),e(za,ta),h(a,uo,u),h(a,Xt,u),e(Xt,ea),h(a,ho,u),ns.m(Yi,a,u),h(a,is,u),h(a,La,u),e(La,ra),h(a,fo,u),ls.m(Fi,a,u),h(a,Ya,u),h(a,sa,u),e(sa,Or),h(a,x,u),ut.m(rl,a,u),h(a,ko,u),h(a,aa,u),e(aa,Bn),e(aa,Pa),e(Pa,Xn),e(aa,$n),h(a,yn,u),h(a,oa,u),e(oa,Rs),e(Rs,na),e(na,yo),e(oa,Vn),h(a,vn,u),h(a,ia,u),Dn(Ma,ia,null),e(ia,Yn),e(ia,Hr),e(Hr,Fn),e(Hr,Nn),e(Hr,Hn),e(Hr,vo),e(vo,wt),e(Hr,er),e(Hr,wr),e(wr,mn),e(Hr,Wn),h(a,mo,u),h(a,Fa,u),e(Fa,Kn),h(a,xn,u),h(a,Na,u),e(Na,Zn),h(a,xo,u),wo.m(sl,a,u),h(a,Ha,u),h(a,la,u),e(la,Qn),e(la,Ss),e(Ss,Jn),e(la,ti),h(a,Ga,u),h(a,ps,u),e(ps,ei),e(ps,go),e(go,ri),e(ps,si),e(ps,Ra),e(Ra,ai),e(ps,oi),h(a,Sa,u),bo.m(al,a,u),h(a,Eo,u),h(a,Wa,u),e(Wa,Ka),h(a,wn,u),_o.m(ol,a,u),h(a,zo,u),h(a,Za,u),e(Za,ni),h(a,gn,u),Lo.m(Ni,a,u),h(a,Po,u),h(a,pa,u),e(pa,ii),e(pa,Mo),e(Mo,li),e(pa,pi),h(a,Go,u),Ro.m(nl,a,u),h(a,So,u),h(a,ca,u),e(ca,Io),e(ca,Ao),e(Ao,ci),e(ca,ui),h(a,bn,u),h(a,Qa,u),e(Qa,Ja),h(a,En,u),Uo.m(il,a,u),h(a,jo,u),h(a,Ke,u),e(Ke,hi),e(Ke,Ia),e(Ia,fi),e(Ke,ki),e(Ke,Co),e(Co,di),e(Ke,yi),e(Ke,to),e(to,vi),e(Ke,mi),e(Ke,Do),e(Do,xi),e(Ke,wi),e(Ke,To),e(Ke,eo),e(eo,gi),e(Ke,bi),h(a,_n,u),h(a,ua,u),e(ua,Ei),e(ua,Aa),e(Aa,_i),e(ua,zi),h(a,zn,u),h(a,ha,u),e(ha,Is),e(Is,fa),e(fa,ka),e(ha,Li),h(a,Ln,u),h(a,gr,u),e(gr,Pi),e(gr,Oo),e(Oo,Mi),e(gr,Pn),e(gr,qo),e(qo,Gi),e(gr,Mn),e(gr,Bo),e(Bo,Ri),e(gr,Si),e(gr,Xo),e(Xo,ro),e(gr,Ii),h(a,Gn,u),h(a,so,u),e(so,Ai),h(a,da,u),$o.m(ll,a,u),h(a,Vo,u),h(a,br,u),e(br,Ui),e(br,Rn),e(Rn,jl),e(br,Cl),e(br,Sn),e(Sn,Dl),e(br,Tl),e(br,Hi),e(Hi,Ol),e(br,ql),e(br,In),e(In,Bl),e(br,Xl),h(a,pl,u),h(a,ji,u),e(ji,$l),h(a,cl,u),h(a,Wr,u),e(Wr,Wi),e(Wi,Vl),e(Wr,Yl),e(Wr,Ki),e(Ki,Fl),e(Wr,Nl),e(Wr,Zi),e(Zi,Hl),e(Wr,Wl),e(Wr,Qi),e(Qi,Kl),e(Wr,Zl),e(Wr,Ji),e(Ji,Ql),h(a,ul,u),h(a,Ci,u),e(Ci,Jl),h(a,hl,u),h(a,Yo,u),e(Yo,tp),e(Yo,An),e(An,ep),e(Yo,rp),fl=!0},p:el,i(a){fl||(Tn(w.$$.fragment,a),Tn(L.$$.fragment,a),Tn(P.$$.fragment,a),Tn(M.$$.fragment,a),Tn(rt.$$.fragment,a),Tn(zt.$$.fragment,a),Tn(Ma.$$.fragment,a),fl=!0)},o(a){On(w.$$.fragment,a),On(L.$$.fragment,a),On(P.$$.fragment,a),On(M.$$.fragment,a),On(rt.$$.fragment,a),On(zt.$$.fragment,a),On(Ma.$$.fragment,a),fl=!1},d(a){a&&r(k),qn(w),a&&r(ne),a&&r(gt),a&&r(J),a&&r(_),a&&r(Be),a&&r(g),qn(L),qn(P),qn(M),a&&r(ft),a&&r(E),a&&r(G),a&&r(kt),a&&r(Jt),a&&r(Ct),a&&r(we),a&&r(Et),a&&r(vt),a&&r(Tt),a&&r(fe),a&&r(q),qn(rt),a&&r(sr),a&&r(lt),a&&r(hs),a&&r(Ze),a&&r(hr),a&&r(fr),a&&r(jr),a&&r(Zr),a&&r(fs),a&&r(Qe),a&&r(kr),a&&r(Qr),a&&r(Rr),a&&r(Cr),qn(zt),a&&r(no),a&&r(Lt),a&&r(io),a&&r(ct),a&&r(Je),a&&r(tr),a&&r(lo),a&&r(Ce),a&&r(po),a&&r(be),a&&r(co),a&&r(_e),a&&r(Ps),a&&r(Ar),a&&r(Gs),a&&r(za),a&&r(uo),a&&r(Xt),a&&r(ho),a&&ns.d(),a&&r(is),a&&r(La),a&&r(fo),a&&ls.d(),a&&r(Ya),a&&r(sa),a&&r(x),a&&ut.d(),a&&r(ko),a&&r(aa),a&&r(yn),a&&r(oa),a&&r(vn),a&&r(ia),qn(Ma),a&&r(mo),a&&r(Fa),a&&r(xn),a&&r(Na),a&&r(xo),a&&wo.d(),a&&r(Ha),a&&r(la),a&&r(Ga),a&&r(ps),a&&r(Sa),a&&bo.d(),a&&r(Eo),a&&r(Wa),a&&r(wn),a&&_o.d(),a&&r(zo),a&&r(Za),a&&r(gn),a&&Lo.d(),a&&r(Po),a&&r(pa),a&&r(Go),a&&Ro.d(),a&&r(So),a&&r(ca),a&&r(bn),a&&r(Qa),a&&r(En),a&&Uo.d(),a&&r(jo),a&&r(Ke),a&&r(_n),a&&r(ua),a&&r(zn),a&&r(ha),a&&r(Ln),a&&r(gr),a&&r(Gn),a&&r(so),a&&r(da),a&&$o.d(),a&&r(Vo),a&&r(br),a&&r(pl),a&&r(ji),a&&r(cl),a&&r(Wr),a&&r(ul),a&&r(Ci),a&&r(hl),a&&r(Yo)}}}const Uu={title:"Running OpenGL Shaders on the Raspberry Pi",date:"2021-03-08T00:00:00.000Z",published:!0,image:"./torus.jpg",slug:"glsl-raspberry-pi",tags:["OpenGL","Raspberry Pi"]},cp="(max-width: calc(1.4 * 800px)) 25vw, 400px";class ju extends up{constructor(k){super(),hp(this,k,null,Ru,fp,{})}}export{ju as default,Uu as metadata};
