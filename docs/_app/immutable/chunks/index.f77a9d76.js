import{S as ql,i as Pl,s as Tl,k as i,q as t,a as c,H as y,T as uo,l as p,m as n,r as l,h as e,c as k,D as v,U as mo,n as h,b as r,E as o,F as it}from"./index.39ce08e8.js";function Cl(ll){let x,fo,M,bo,xo,qe,C,wo,B,_o,Eo,Pe,u,qo,fs,Po,To,bs,Co,Ao,xs,X,Do,Io,ws,So,go,_s,Ho,No,Te,Es,rl=`<pre class="shiki  language-yaml"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-parameter)">apiVersion</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">admissionregistration.k8s.io/v1</span></span>
<span class="line"><span style="color: var(--shiki-token-parameter)">kind</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">MutatingWebhookConfiguration</span></span>
<span class="line"><span style="color: var(--shiki-token-parameter)">metadata</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-parameter)">name</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">webhook</span></span>
<span class="line"><span style="color: var(--shiki-token-parameter)">webhooks</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  - </span><span style="color: var(--shiki-token-parameter)">name</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">webhook</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-parameter)">clientConfig</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-parameter)">service</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-parameter)">name</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">controller</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-parameter)">namespace</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">admission</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-parameter)">path</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">/mutate</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-parameter)">rules</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-parameter)">apiGroups</span><span style="color: var(--shiki-color-text)">: [</span><span style="color: var(--shiki-token-string)">&quot;&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-parameter)">apiVersions</span><span style="color: var(--shiki-color-text)">: [</span><span style="color: var(--shiki-token-string)">&quot;v1&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-parameter)">resources</span><span style="color: var(--shiki-color-text)">: [</span><span style="color: var(--shiki-token-string)">&quot;pods&quot;</span><span style="color: var(--shiki-color-text)">]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">        </span><span style="color: var(--shiki-token-parameter)">operations</span><span style="color: var(--shiki-color-text)">: [</span><span style="color: var(--shiki-token-string)">&quot;CREATE&quot;</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-string)">&quot;UPDATE&quot;</span><span style="color: var(--shiki-color-text)">]</span></span></code></pre>`,qs,m,$o,Ps,Oo,Ro,Ts,jo,Ko,Cs,Uo,Lo,G,Wo,Mo,Ce,d,Bo,As,w,Go,Ds,Vo,Fo,Is,Zo,zo,Jo,Ss,Qo,Xo,V,Yo,sa,Ae,Y,ea,De,b,oa,F,aa,gs,ss,ta,la,Z,ra,na,Ie,A,q,D,Hs,ia,Se,es,pa,ge,I,ca,z,ka,ha,He,S,ya,J,va,ua,Ne,g,ma,Ns,da,fa,$e,$s,nl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ curl </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">L </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">o kubebuilder https:</span><span style="color: var(--shiki-token-symbol)">//</span><span style="color: var(--shiki-color-text)">go.kubebuilder.io</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">dl</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-token-numeric)">3.2</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-token-keyword)">$</span><span style="color: var(--shiki-color-text)">(go env GOOS)</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-token-keyword)">$</span><span style="color: var(--shiki-color-text)">(go env GOARCH)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ chmod </span><span style="color: var(--shiki-token-symbol)">+</span><span style="color: var(--shiki-color-text)">x kubebuilder &amp;&amp; mv kubebuilder </span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">usr</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">local</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">bin</span><span style="color: var(--shiki-token-symbol)">/</span></span></code></pre>`,Os,os,ba,Oe,Rs,il=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ mkdir webhook &amp;&amp; cd webhook</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ kubebuilder init </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">repo </span><span style="color: var(--shiki-token-symbol)">github.com/</span><span style="color: var(--shiki-color-text)">user</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">webhook</span></span></code></pre>`,js,H,xa,Ks,wa,_a,Re,Us,pl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ kubebuilder create api </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">version v1 </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">kind Hooked</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ kubebuilder create webhook </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">version v1 </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">kind Hooked </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">defaulting</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ make manifests</span></span></code></pre>`,Ls,N,Ea,Q,qa,Pa,je,as,Ta,Ke,Ws,cl='<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ kubectl apply </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">k config</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">crd</span></span></code></pre>',Ms,ts,Ca,Ue,Bs,kl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ kubectl create ns webhook</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ kubectl config </span><span style="color: var(--shiki-token-symbol)">set-context</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">current </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">namespace</span><span style="color: var(--shiki-token-symbol)">=</span><span style="color: var(--shiki-color-text)">webhook</span></span></code></pre>`,Gs,ls,Aa,Le,Vs,hl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ </span><span style="color: var(--shiki-token-keyword)">$</span><span style="color: var(--shiki-color-text)">(cd config</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">webhook &amp;&amp; kustomize edit set namespace webhook)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ kubectl apply </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">k config</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">webhook</span></span></code></pre>`,Fs,$,Da,Zs,Ia,Sa,We,zs,yl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ kubectl apply </span><span style="color: var(--shiki-color-text)">-f</span><span style="color: var(--shiki-color-text)"> config</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">samples</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">_v1_hooked.yaml</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Error </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> server (InternalError): error when creating </span><span style="color: var(--shiki-token-string)">&quot;config/samples/_v1_hooked.yaml&quot;</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Internal error occurred: failed calling webhook </span><span style="color: var(--shiki-token-string)">&quot;mhooked.kb.io&quot;</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Post </span><span style="color: var(--shiki-token-string)">&quot;https://webhook-service.webhook.svc:443/mutate-my-domain-v1-hooked?timeout=10s&quot;</span><span style="color: var(--shiki-color-text)">:</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">      no endpoints available </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> service </span><span style="color: var(--shiki-token-string)">&quot;webhook-service&quot;</span></span></code></pre>`,Js,O,ga,Qs,Ha,Na,Me,rs,$a,Be,R,P,j,Xs,Oa,Ge,ns,Ra,Ve,K,ja,Ys,Ka,Ua,Fe,se,vl='<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ curl </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">fL https:</span><span style="color: var(--shiki-token-symbol)">//</span><span style="color: var(--shiki-color-text)">app.getambassador.io</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">download</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">tel2</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">darwin</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">amd64</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-token-numeric)">2.4</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-numeric)">9</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">telepresence </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">o </span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">usr</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">local</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">bin</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">telepresence</span></span></code></pre>',ee,is,La,Ze,oe,ul=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ telepresence connect</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">Launching Telepresence Root Daemon</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">Launching Telepresence User Daemon</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ telepresence status</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">Root Daemon: Running</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Version   : v2.</span><span style="color: var(--shiki-token-numeric)">4.9</span><span style="color: var(--shiki-color-text)"> (api </span><span style="color: var(--shiki-token-numeric)">3</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  DNS       :</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Remote IP       : REDACTED</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Exclude suffixes: [.</span><span style="color: var(--shiki-token-keyword)">arpa</span><span style="color: var(--shiki-color-text)"> .</span><span style="color: var(--shiki-token-keyword)">com</span><span style="color: var(--shiki-color-text)"> .</span><span style="color: var(--shiki-token-keyword)">io</span><span style="color: var(--shiki-color-text)"> .</span><span style="color: var(--shiki-token-keyword)">net</span><span style="color: var(--shiki-color-text)"> .</span><span style="color: var(--shiki-token-keyword)">org</span><span style="color: var(--shiki-color-text)"> .</span><span style="color: var(--shiki-token-keyword)">ru</span><span style="color: var(--shiki-color-text)">]</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Include suffixes: []</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Timeout         : 4s</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Also Proxy : (</span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)"> subnets)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Never Proxy: (</span><span style="color: var(--shiki-token-numeric)">1</span><span style="color: var(--shiki-color-text)"> subnets)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">User Daemon: Running</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Version           : v2.</span><span style="color: var(--shiki-token-numeric)">4.9</span><span style="color: var(--shiki-color-text)"> (api </span><span style="color: var(--shiki-token-numeric)">3</span><span style="color: var(--shiki-color-text)">)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Ambassador Cloud  : Logged out</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Status            : Connected</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Kubernetes server : REDACTED</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Kubernetes context: REDACTED</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Telepresence proxy: ON (networking to the cluster is enabled)</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">  Intercepts        : </span><span style="color: var(--shiki-token-numeric)">0</span><span style="color: var(--shiki-color-text)"> total</span></span></code></pre>`,ae,U,Wa,te,Ma,Ba,ze,le,ml=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ kubectl create deployment webhook </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">image</span><span style="color: var(--shiki-token-symbol)">=</span><span style="color: var(--shiki-color-text)">k8s.gcr.io</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">echoserver:</span><span style="color: var(--shiki-token-numeric)">1.10</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">port </span><span style="color: var(--shiki-token-numeric)">9443</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ kubectl set selector svc webhook</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">service app</span><span style="color: var(--shiki-token-symbol)">=</span><span style="color: var(--shiki-color-text)">webhook</span></span></code></pre>`,re,ps,Ga,Je,ne,dl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ telepresence intercept webhook </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">service webhook</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">service </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">port </span><span style="color: var(--shiki-token-numeric)">9443</span></span>
<span class="line"></span>
<span class="line"><span style="color: var(--shiki-color-text)">Using Deployment webhook</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">intercepted</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Intercept name    : webhook</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    State             : ACTIVE</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Workload kind     : Deployment</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Destination       : </span><span style="color: var(--shiki-token-numeric)">127.0</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-numeric)">0.1</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-numeric)">9443</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Volume Mount Error: sshfs is not installed on your local machine</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">    Intercepting      : all TCP connections</span></span></code></pre>`,ie,cs,Va,Qe,pe,fl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Generate the CA certificate</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ openssl req </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">new </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">x509 </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">nodes </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">days </span><span style="color: var(--shiki-token-numeric)">365</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">keyout ca.key </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">out ca.crt </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">subj </span><span style="color: var(--shiki-token-string)">&quot;/CN=webhook&quot;</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Generate the webhook server certificate</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ openssl req </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">nodes </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">new </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">sha256 </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">keyout tls.key </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">out tls.csr </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">subj </span><span style="color: var(--shiki-token-string)">&quot;/CN=webhook-service.webhook.svc&quot;</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">config &lt;(cat </span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">etc</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">ssl</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">openssl.cnf &lt;(printf </span><span style="color: var(--shiki-token-string)">&quot;[SAN]&#92;nsubjectAltName=DNS:webhook-service.webhook.svc&quot;</span><span style="color: var(--shiki-color-text)">)) </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">reqexts SAN</span></span>
<span class="line"><span style="color: var(--shiki-token-comment); font-style: italic"># Sign the server certificate with the generated CA</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">$ openssl x509 </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">req </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">days </span><span style="color: var(--shiki-token-numeric)">365</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-symbol)">-in</span><span style="color: var(--shiki-color-text)"> tls.csr </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">out tls.crt </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">CA ca.crt </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">CAkey ca.key </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">CAcreateserial </span></span>
<span class="line"><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">extfile &lt;(cat </span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">etc</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">ssl</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">openssl.cnf &lt;(printf </span><span style="color: var(--shiki-token-string)">&quot;[SAN]&#92;nsubjectAltName=DNS:webhook-service.webhook.svc&quot;</span><span style="color: var(--shiki-color-text)">)) </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">extensions SAN</span></span></code></pre>`,ce,_,Fa,ke,Za,za,he,Ja,Qa,Xe,ye,bl=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ kubectl patch mutatingwebhookconfiguration mutating</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">webhook</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">configuration </span><span style="color: var(--shiki-token-symbol)">--</span><span style="color: var(--shiki-color-text)">type</span><span style="color: var(--shiki-token-symbol)">=</span><span style="color: var(--shiki-token-string)">&#39;json&#39;</span><span style="color: var(--shiki-color-text)"> </span></span>
<span class="line"><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">p</span><span style="color: var(--shiki-token-symbol)">=</span><span style="color: var(--shiki-token-string)">&quot;[&#123;&#39;op&#39;: &#39;add&#39;, &#39;path&#39;: &#39;/webhooks/0/clientConfig/caBundle&#39;, &#39;value&#39;:&#39;</span><span style="color: var(--shiki-token-keyword)">$(</span><span style="color: var(--shiki-color-text)">cat ca.crt | base64 | tr </span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">d </span><span style="color: var(--shiki-token-string)">&#39;&#92;n&#39;</span><span style="color: var(--shiki-token-keyword)">)</span><span style="color: var(--shiki-token-string)">&#39;&#125;]&quot;</span></span></code></pre>`,ve,ks,Xa,Ye,ue,xl=`<pre class="shiki  language-go"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-variable)">mgr</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-variable)">err</span><span style="color: var(--shiki-color-text)"> </span><span style="color: #E5C07B">:=</span><span style="color: var(--shiki-color-text)"> ctrl.</span><span style="color: var(--shiki-token-symbol)">NewManager</span><span style="color: var(--shiki-color-text)">(ctrl.</span><span style="color: var(--shiki-token-symbol)">GetConfigOrDie</span><span style="color: var(--shiki-color-text)">(), ctrl.Options&#123;</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	CertDir: </span><span style="color: var(--shiki-token-string)">&quot;.&quot;</span><span style="color: var(--shiki-color-text)">,</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">	</span><span style="color: var(--shiki-token-comment); font-style: italic">// ...</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">&#125;)</span></span></code></pre>`,me,hs,Ya,so,de,wl='<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ go run main.go</span></span></code></pre>',fe,L,st,be,et,ot,eo,xe,_l=`<pre class="shiki  language-ps1"><code tabindex="0"><span class="line"><span style="color: var(--shiki-color-text)">$ kubectl apply </span><span style="color: var(--shiki-color-text)">-f</span><span style="color: var(--shiki-color-text)"> config</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">samples</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">_v1_hooked.yaml</span></span>
<span class="line"><span style="color: var(--shiki-color-text)">hooked.my.domain</span><span style="color: var(--shiki-token-symbol)">/</span><span style="color: var(--shiki-color-text)">hooked</span><span style="color: var(--shiki-token-symbol)">-</span><span style="color: var(--shiki-color-text)">sample created</span></span></code></pre>`,we,ys,at,oo,_e,El=`<pre class="shiki  language-json"><code tabindex="0"><span class="line"><span style="color: var(--shiki-token-numeric)">2021-12-23</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-numeric)">15</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-numeric)">03</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-numeric)">08.088</span><span style="color: var(--shiki-color-text)">+</span><span style="color: var(--shiki-token-numeric)">0100</span><span style="color: var(--shiki-color-text)">	DEBUG	controller-runtime.webhook.webhooks	received request	&#123;</span><span style="color: var(--shiki-token-parameter)">&quot;webhook&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">&quot;/mutate-my-domain-v1-hooked&quot;</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-parameter)">&quot;UID&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">&quot;528ccce7-6404-499d-8959-42e620a211a4&quot;</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-parameter)">&quot;kind&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">&quot;my.domain/v1, Kind=Hooked&quot;</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-parameter)">&quot;resource&quot;</span><span style="color: var(--shiki-color-text)">: &#123;</span><span style="color: var(--shiki-token-parameter)">&quot;group&quot;</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-string)">&quot;my.domain&quot;</span><span style="color: var(--shiki-color-text)">,</span><span style="color: var(--shiki-token-parameter)">&quot;version&quot;</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-string)">&quot;v1&quot;</span><span style="color: var(--shiki-color-text)">,</span><span style="color: var(--shiki-token-parameter)">&quot;resource&quot;</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-string)">&quot;hookeds&quot;</span><span style="color: var(--shiki-color-text)">&#125;&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-numeric)">2021-12-23</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-numeric)">15</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-numeric)">03</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-numeric)">08.088</span><span style="color: var(--shiki-color-text)">+</span><span style="color: var(--shiki-token-numeric)">0100</span><span style="color: var(--shiki-color-text)">	INFO	hooked-resource	default	&#123;</span><span style="color: var(--shiki-token-parameter)">&quot;name&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">&quot;hooked-sample&quot;</span><span style="color: var(--shiki-color-text)">&#125;</span></span>
<span class="line"><span style="color: var(--shiki-token-numeric)">2021-12-23</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-numeric)">15</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-numeric)">03</span><span style="color: var(--shiki-color-text)">:</span><span style="color: var(--shiki-token-numeric)">08.088</span><span style="color: var(--shiki-color-text)">+</span><span style="color: var(--shiki-token-numeric)">0100</span><span style="color: var(--shiki-color-text)">	DEBUG	controller-runtime.webhook.webhooks	wrote response	&#123;</span><span style="color: var(--shiki-token-parameter)">&quot;webhook&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">&quot;/mutate-my-domain-v1-hooked&quot;</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-parameter)">&quot;code&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-numeric)">200</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-parameter)">&quot;reason&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">&quot;&quot;</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-parameter)">&quot;UID&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-string)">&quot;528ccce7-6404-499d-8959-42e620a211a4&quot;</span><span style="color: var(--shiki-color-text)">, </span><span style="color: var(--shiki-token-parameter)">&quot;allowed&quot;</span><span style="color: var(--shiki-color-text)">: </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)">&#125;</span></span></code></pre>`,Ee,vs,tt,ao,us,lt;return{c(){x=i("p"),fo=t("Admission webhook is a powerful extension mechanism, that enables to plug in admission controllers, dynamically into the Kubernetes "),M=i("a"),bo=t("API access control"),xo=t(", to intercept requests."),qe=c(),C=i("p"),wo=t("The flexibility of admission webhook allows to address a large spectrum of use cases, like configuration management, governance, and security, as described in "),B=i("a"),_o=t("Why do I need admission controllers?"),Eo=t("."),Pe=c(),u=i("p"),qo=t("Two types of admission webhooks can be created, "),fs=i("em"),Po=t("mutating"),To=t(" and "),bs=i("em"),Co=t("validating"),Ao=t(" admission webhooks"),xs=i("span"),X=i("span"),Do=t("Conversion webhooks also exist, to convert custom resources between versions, and for which using Telepresence applies as well."),Io=t(`.
Declaring a mutating (resp. validating) admission webhook is as simple as creating a `),ws=i("code"),So=t("MutatingWebhookConfiguration"),go=t(" (resp. "),_s=i("code"),Ho=t("ValidatingAdmissionWebhooks"),No=t(") resource, e.g.:"),Te=c(),Es=new y(!1),qs=c(),m=i("p"),$o=t("With that example, The API server makes an HTTPS POST request to the "),Ps=i("code"),Oo=t("https//controller.admission.svc/mutate"),Ro=t(" URL, with a JSON-encoded "),Ts=i("code"),jo=t("AdmissionReview"),Ko=t(" in the request body, each time a "),Cs=i("em"),Uo=t("write"),Lo=t(" request (POST, PUT or PATCH) to the "),G=i("a"),Wo=t("Pod endpoint"),Mo=t(" is received by the API server."),Ce=c(),d=i("p"),Bo=t("The admission controller hosting the webhook endpoint must be accessible from within the cluster, exposed as a Service"),As=i("span"),w=i("span"),Go=t("It can also be deployed externally and referenced with the "),Ds=i("code"),Vo=t("URL"),Fo=t(" field, in which case the host should be an IP address, or resolved via an external DNS ("),Is=i("code"),Zo=t("kube-apiserver"),zo=t(" cannot resolve in-cluster DNS as that would be a layering violation)."),Jo=t(`.
This is diametrically opposed to `),Ss=i("em"),Qo=t("standard"),Xo=t(" controllers, or "),V=i("a"),Yo=t("operators"),sa=t(", that call the API server."),Ae=c(),Y=i("p"),ea=t(`That difference matters during the development cycle, as the controller, running locally, is not directly accessible from the API server.
The container image has to be built, push to a registry, and the controller deployment rolled out.`),De=c(),b=i("p"),oa=t("The following post demonstrates how to use "),F=i("a"),aa=t("Telepresence"),gs=i("span"),ss=i("span"),ta=t("Telepresence is a CNCF sandbox project, that enables to connect a local machine seamlessly to a Kubernetes cluster, via a two-way proxying mechanism."),la=t(", to intercept requests from the API server to the admission webhook service, tunnel them to the admission controller running locally, and ultimately speed the "),Z=i("a"),ra=t("inner development loop"),na=t(" up."),Ie=c(),A=i("h2"),q=i("a"),D=uo("svg"),Hs=uo("path"),ia=t("Kubebuilder"),Se=c(),es=i("p"),pa=t("First things first, let’s create an admission controller project."),ge=c(),I=i("p"),ca=t(`There is no unique way to implement an admission webhook.
The contract is ultimately defined by the `),z=i("a"),ka=t("webhook REST API"),ha=t(", that can be implemented with any stack."),He=c(),S=i("p"),ya=t("That being said, the "),J=i("a"),va=t("Kubebuilder"),ua=t(` project provides tools that scafold projects, for implementing Kubernetes API and webhook.
So let’s use it to create our admission controller…`),Ne=c(),g=i("p"),ma=t("1) Install the "),Ns=i("code"),da=t("kubebuilder"),fa=t(" CLI:"),$e=c(),$s=new y(!1),Os=c(),os=i("p"),ba=t("2) Scafold the project:"),Oe=c(),Rs=new y(!1),js=c(),H=i("p"),xa=t("3) Define the "),Ks=i("code"),wa=t("Hooked"),_a=t(" CRD, and the associated mutating webhook:"),Re=c(),Us=new y(!1),Ls=c(),N=i("p"),Ea=t(`It’s also possible to define webhooks for core types.
However, Kubebuilder does not support scafolding webhook in that case.
So the generated project must be modified manually, as documented in `),Q=i("a"),qa=t("admission webhook for core types"),Pa=t("."),je=c(),as=i("p"),Ta=t("4) Install the generated CRD manifest:"),Ke=c(),Ws=new y(!1),Ms=c(),ts=i("p"),Ca=t("5) Create a namespace:"),Ue=c(),Bs=new y(!1),Gs=c(),ls=i("p"),Aa=t("6) Deploy the generated webhook manifests:"),Le=c(),Vs=new y(!1),Fs=c(),$=i("p"),Da=t("7) Create a sample "),Zs=i("code"),Ia=t("Hooked"),Sa=t(" resource:"),We=c(),zs=new y(!1),Js=c(),O=i("p"),ga=t("The API server calls the service configured into the "),Qs=i("code"),Ha=t("MutatingWebhookConfiguration"),Na=t(` resource.
This fails as expected, since we haven’t deployed any endpoint yet, to actually serve the request.`),Me=c(),rs=i("p"),$a=t(`In production, that endpoint is generally exposed by the admission controller, deployed in-cluster.
However, during the development phase, we want the requests to be processed by the admission controller, running locally.`),Be=c(),R=i("h2"),P=i("a"),j=uo("svg"),Xs=uo("path"),Oa=t("Telepresence"),Ge=c(),ns=i("p"),Ra=t(`Thanks to Telepresence, it’s possible to have the requests issued by the API server tunneled to the local machine.
Let’s use it to intercept the requests received by the webhook service, deployed in the cluster, and tunnel them to the admission controller started locally.`),Ve=c(),K=i("p"),ja=t("1) Install the "),Ys=i("code"),Ka=t("telepresence"),Ua=t(" CLI:"),Fe=c(),se=new y(!1),ee=c(),is=i("p"),La=t("2) Connect Telepresence to the cluster, and check the status:"),Ze=c(),oe=new y(!1),ae=c(),U=i("p"),Wa=t("3) Telepresence requires a "),te=i("code"),Ma=t("Deployment"),Ba=t(", as interception target, so instead of relying on the real controller deployment, let’s create a compatible mock:"),ze=c(),le=new y(!1),re=c(),ps=i("p"),Ga=t("4) Intercept the webhook service:"),Je=c(),ne=new y(!1),ie=c(),cs=i("p"),Va=t("5) Generate the webhook server certificate, as the API server mandates HTTPS:"),Qe=c(),pe=new y(!1),ce=c(),_=i("p"),Fa=t("6) Patch the "),ke=i("code"),Za=t("MutatingWebhookConfiguration"),za=t(" resource, to set the "),he=i("code"),Ja=t("caBundle"),Qa=t(" field with the generated CA certificate:"),Xe=c(),ye=new y(!1),ve=c(),ks=i("p"),Xa=t("7) Update the controller manager, to source certificates from the project directory:"),Ye=c(),ue=new y(!1),me=c(),hs=i("p"),Ya=t("8) Start the admission controller:"),so=c(),de=new y(!1),fe=c(),L=i("p"),st=t("9) Create a sample "),be=i("code"),et=t("Hooked"),ot=t(" resource:"),eo=c(),xe=new y(!1),we=c(),ys=i("p"),at=t("10) Check the admission controller output:"),oo=c(),_e=new y(!1),Ee=c(),vs=i("p"),tt=t("Hooray, the admission controller running locally is called!"),ao=c(),us=i("p"),lt=t("Happy coding!"),this.h()},l(s){x=p(s,"P",{});var a=n(x);fo=l(a,"Admission webhook is a powerful extension mechanism, that enables to plug in admission controllers, dynamically into the Kubernetes "),M=p(a,"A",{href:!0,rel:!0});var pt=n(M);bo=l(pt,"API access control"),pt.forEach(e),xo=l(a,", to intercept requests."),a.forEach(e),qe=k(s),C=p(s,"P",{});var to=n(C);wo=l(to,"The flexibility of admission webhook allows to address a large spectrum of use cases, like configuration management, governance, and security, as described in "),B=p(to,"A",{href:!0,rel:!0});var ct=n(B);_o=l(ct,"Why do I need admission controllers?"),ct.forEach(e),Eo=l(to,"."),to.forEach(e),Pe=k(s),u=p(s,"P",{});var f=n(u);qo=l(f,"Two types of admission webhooks can be created, "),fs=p(f,"EM",{});var kt=n(fs);Po=l(kt,"mutating"),kt.forEach(e),To=l(f," and "),bs=p(f,"EM",{});var ht=n(bs);Co=l(ht,"validating"),ht.forEach(e),Ao=l(f," admission webhooks"),xs=p(f,"SPAN",{class:!0}),n(xs).forEach(e),X=p(f,"SPAN",{class:!0});var yt=n(X);Do=l(yt,"Conversion webhooks also exist, to convert custom resources between versions, and for which using Telepresence applies as well."),yt.forEach(e),Io=l(f,`.
Declaring a mutating (resp. validating) admission webhook is as simple as creating a `),ws=p(f,"CODE",{});var vt=n(ws);So=l(vt,"MutatingWebhookConfiguration"),vt.forEach(e),go=l(f," (resp. "),_s=p(f,"CODE",{});var ut=n(_s);Ho=l(ut,"ValidatingAdmissionWebhooks"),ut.forEach(e),No=l(f,") resource, e.g.:"),f.forEach(e),Te=k(s),Es=v(s,!1),qs=k(s),m=p(s,"P",{});var E=n(m);$o=l(E,"With that example, The API server makes an HTTPS POST request to the "),Ps=p(E,"CODE",{});var mt=n(Ps);Oo=l(mt,"https//controller.admission.svc/mutate"),mt.forEach(e),Ro=l(E," URL, with a JSON-encoded "),Ts=p(E,"CODE",{});var dt=n(Ts);jo=l(dt,"AdmissionReview"),dt.forEach(e),Ko=l(E," in the request body, each time a "),Cs=p(E,"EM",{});var ft=n(Cs);Uo=l(ft,"write"),ft.forEach(e),Lo=l(E," request (POST, PUT or PATCH) to the "),G=p(E,"A",{href:!0,rel:!0});var bt=n(G);Wo=l(bt,"Pod endpoint"),bt.forEach(e),Mo=l(E," is received by the API server."),E.forEach(e),Ce=k(s),d=p(s,"P",{});var T=n(d);Bo=l(T,"The admission controller hosting the webhook endpoint must be accessible from within the cluster, exposed as a Service"),As=p(T,"SPAN",{class:!0}),n(As).forEach(e),w=p(T,"SPAN",{class:!0});var ms=n(w);Go=l(ms,"It can also be deployed externally and referenced with the "),Ds=p(ms,"CODE",{});var xt=n(Ds);Vo=l(xt,"URL"),xt.forEach(e),Fo=l(ms," field, in which case the host should be an IP address, or resolved via an external DNS ("),Is=p(ms,"CODE",{});var wt=n(Is);Zo=l(wt,"kube-apiserver"),wt.forEach(e),zo=l(ms," cannot resolve in-cluster DNS as that would be a layering violation)."),ms.forEach(e),Jo=l(T,`.
This is diametrically opposed to `),Ss=p(T,"EM",{});var _t=n(Ss);Qo=l(_t,"standard"),_t.forEach(e),Xo=l(T," controllers, or "),V=p(T,"A",{href:!0,rel:!0});var Et=n(V);Yo=l(Et,"operators"),Et.forEach(e),sa=l(T,", that call the API server."),T.forEach(e),Ae=k(s),Y=p(s,"P",{});var qt=n(Y);ea=l(qt,`That difference matters during the development cycle, as the controller, running locally, is not directly accessible from the API server.
The container image has to be built, push to a registry, and the controller deployment rolled out.`),qt.forEach(e),De=k(s),b=p(s,"P",{});var W=n(b);oa=l(W,"The following post demonstrates how to use "),F=p(W,"A",{href:!0,rel:!0});var Pt=n(F);aa=l(Pt,"Telepresence"),Pt.forEach(e),gs=p(W,"SPAN",{class:!0}),n(gs).forEach(e),ss=p(W,"SPAN",{class:!0});var Tt=n(ss);ta=l(Tt,"Telepresence is a CNCF sandbox project, that enables to connect a local machine seamlessly to a Kubernetes cluster, via a two-way proxying mechanism."),Tt.forEach(e),la=l(W,", to intercept requests from the API server to the admission webhook service, tunnel them to the admission controller running locally, and ultimately speed the "),Z=p(W,"A",{href:!0,rel:!0});var Ct=n(Z);ra=l(Ct,"inner development loop"),Ct.forEach(e),na=l(W," up."),W.forEach(e),Ie=k(s),A=p(s,"H2",{id:!0});var rt=n(A);q=p(rt,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var At=n(q);D=mo(At,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var Dt=n(D);Hs=mo(Dt,"path",{d:!0}),n(Hs).forEach(e),Dt.forEach(e),At.forEach(e),ia=l(rt,"Kubebuilder"),rt.forEach(e),Se=k(s),es=p(s,"P",{});var It=n(es);pa=l(It,"First things first, let’s create an admission controller project."),It.forEach(e),ge=k(s),I=p(s,"P",{});var lo=n(I);ca=l(lo,`There is no unique way to implement an admission webhook.
The contract is ultimately defined by the `),z=p(lo,"A",{href:!0,rel:!0});var St=n(z);ka=l(St,"webhook REST API"),St.forEach(e),ha=l(lo,", that can be implemented with any stack."),lo.forEach(e),He=k(s),S=p(s,"P",{});var ro=n(S);ya=l(ro,"That being said, the "),J=p(ro,"A",{href:!0,rel:!0});var gt=n(J);va=l(gt,"Kubebuilder"),gt.forEach(e),ua=l(ro,` project provides tools that scafold projects, for implementing Kubernetes API and webhook.
So let’s use it to create our admission controller…`),ro.forEach(e),Ne=k(s),g=p(s,"P",{});var no=n(g);ma=l(no,"1) Install the "),Ns=p(no,"CODE",{});var Ht=n(Ns);da=l(Ht,"kubebuilder"),Ht.forEach(e),fa=l(no," CLI:"),no.forEach(e),$e=k(s),$s=v(s,!1),Os=k(s),os=p(s,"P",{});var Nt=n(os);ba=l(Nt,"2) Scafold the project:"),Nt.forEach(e),Oe=k(s),Rs=v(s,!1),js=k(s),H=p(s,"P",{});var io=n(H);xa=l(io,"3) Define the "),Ks=p(io,"CODE",{});var $t=n(Ks);wa=l($t,"Hooked"),$t.forEach(e),_a=l(io," CRD, and the associated mutating webhook:"),io.forEach(e),Re=k(s),Us=v(s,!1),Ls=k(s),N=p(s,"P",{});var po=n(N);Ea=l(po,`It’s also possible to define webhooks for core types.
However, Kubebuilder does not support scafolding webhook in that case.
So the generated project must be modified manually, as documented in `),Q=p(po,"A",{href:!0,rel:!0});var Ot=n(Q);qa=l(Ot,"admission webhook for core types"),Ot.forEach(e),Pa=l(po,"."),po.forEach(e),je=k(s),as=p(s,"P",{});var Rt=n(as);Ta=l(Rt,"4) Install the generated CRD manifest:"),Rt.forEach(e),Ke=k(s),Ws=v(s,!1),Ms=k(s),ts=p(s,"P",{});var jt=n(ts);Ca=l(jt,"5) Create a namespace:"),jt.forEach(e),Ue=k(s),Bs=v(s,!1),Gs=k(s),ls=p(s,"P",{});var Kt=n(ls);Aa=l(Kt,"6) Deploy the generated webhook manifests:"),Kt.forEach(e),Le=k(s),Vs=v(s,!1),Fs=k(s),$=p(s,"P",{});var co=n($);Da=l(co,"7) Create a sample "),Zs=p(co,"CODE",{});var Ut=n(Zs);Ia=l(Ut,"Hooked"),Ut.forEach(e),Sa=l(co," resource:"),co.forEach(e),We=k(s),zs=v(s,!1),Js=k(s),O=p(s,"P",{});var ko=n(O);ga=l(ko,"The API server calls the service configured into the "),Qs=p(ko,"CODE",{});var Lt=n(Qs);Ha=l(Lt,"MutatingWebhookConfiguration"),Lt.forEach(e),Na=l(ko,` resource.
This fails as expected, since we haven’t deployed any endpoint yet, to actually serve the request.`),ko.forEach(e),Me=k(s),rs=p(s,"P",{});var Wt=n(rs);$a=l(Wt,`In production, that endpoint is generally exposed by the admission controller, deployed in-cluster.
However, during the development phase, we want the requests to be processed by the admission controller, running locally.`),Wt.forEach(e),Be=k(s),R=p(s,"H2",{id:!0});var nt=n(R);P=p(nt,"A",{class:!0,"aria-hidden":!0,tabindex:!0,href:!0});var Mt=n(P);j=mo(Mt,"svg",{viewBox:!0,version:!0,"aria-hidden":!0});var Bt=n(j);Xs=mo(Bt,"path",{d:!0}),n(Xs).forEach(e),Bt.forEach(e),Mt.forEach(e),Oa=l(nt,"Telepresence"),nt.forEach(e),Ge=k(s),ns=p(s,"P",{});var Gt=n(ns);Ra=l(Gt,`Thanks to Telepresence, it’s possible to have the requests issued by the API server tunneled to the local machine.
Let’s use it to intercept the requests received by the webhook service, deployed in the cluster, and tunnel them to the admission controller started locally.`),Gt.forEach(e),Ve=k(s),K=p(s,"P",{});var ho=n(K);ja=l(ho,"1) Install the "),Ys=p(ho,"CODE",{});var Vt=n(Ys);Ka=l(Vt,"telepresence"),Vt.forEach(e),Ua=l(ho," CLI:"),ho.forEach(e),Fe=k(s),se=v(s,!1),ee=k(s),is=p(s,"P",{});var Ft=n(is);La=l(Ft,"2) Connect Telepresence to the cluster, and check the status:"),Ft.forEach(e),Ze=k(s),oe=v(s,!1),ae=k(s),U=p(s,"P",{});var yo=n(U);Wa=l(yo,"3) Telepresence requires a "),te=p(yo,"CODE",{});var Zt=n(te);Ma=l(Zt,"Deployment"),Zt.forEach(e),Ba=l(yo,", as interception target, so instead of relying on the real controller deployment, let’s create a compatible mock:"),yo.forEach(e),ze=k(s),le=v(s,!1),re=k(s),ps=p(s,"P",{});var zt=n(ps);Ga=l(zt,"4) Intercept the webhook service:"),zt.forEach(e),Je=k(s),ne=v(s,!1),ie=k(s),cs=p(s,"P",{});var Jt=n(cs);Va=l(Jt,"5) Generate the webhook server certificate, as the API server mandates HTTPS:"),Jt.forEach(e),Qe=k(s),pe=v(s,!1),ce=k(s),_=p(s,"P",{});var ds=n(_);Fa=l(ds,"6) Patch the "),ke=p(ds,"CODE",{});var Qt=n(ke);Za=l(Qt,"MutatingWebhookConfiguration"),Qt.forEach(e),za=l(ds," resource, to set the "),he=p(ds,"CODE",{});var Xt=n(he);Ja=l(Xt,"caBundle"),Xt.forEach(e),Qa=l(ds," field with the generated CA certificate:"),ds.forEach(e),Xe=k(s),ye=v(s,!1),ve=k(s),ks=p(s,"P",{});var Yt=n(ks);Xa=l(Yt,"7) Update the controller manager, to source certificates from the project directory:"),Yt.forEach(e),Ye=k(s),ue=v(s,!1),me=k(s),hs=p(s,"P",{});var sl=n(hs);Ya=l(sl,"8) Start the admission controller:"),sl.forEach(e),so=k(s),de=v(s,!1),fe=k(s),L=p(s,"P",{});var vo=n(L);st=l(vo,"9) Create a sample "),be=p(vo,"CODE",{});var el=n(be);et=l(el,"Hooked"),el.forEach(e),ot=l(vo," resource:"),vo.forEach(e),eo=k(s),xe=v(s,!1),we=k(s),ys=p(s,"P",{});var ol=n(ys);at=l(ol,"10) Check the admission controller output:"),ol.forEach(e),oo=k(s),_e=v(s,!1),Ee=k(s),vs=p(s,"P",{});var al=n(vs);tt=l(al,"Hooray, the admission controller running locally is called!"),al.forEach(e),ao=k(s),us=p(s,"P",{});var tl=n(us);lt=l(tl,"Happy coding!"),tl.forEach(e),this.h()},h(){h(M,"href","https://kubernetes.io/docs/concepts/security/controlling-access/#admission-control"),h(M,"rel","nofollow"),h(B,"href","https://kubernetes.io/blog/2019/03/21/a-guide-to-kubernetes-admission-controllers/#why-do-i-need-admission-controllers"),h(B,"rel","nofollow"),h(xs,"class","sidenote-number"),h(X,"class","sidenote"),Es.a=qs,h(G,"href","https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#pod-v1-core"),h(G,"rel","nofollow"),h(As,"class","sidenote-number"),h(w,"class","sidenote"),h(V,"href","https://operatorframework.io"),h(V,"rel","nofollow"),h(F,"href","https://www.telepresence.io"),h(F,"rel","nofollow"),h(gs,"class","sidenote-number"),h(ss,"class","sidenote"),h(Z,"href","https://www.telepresence.io/docs/v2.4/concepts/devloop/"),h(Z,"rel","nofollow"),h(Hs,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),h(D,"viewBox","0 0 16 16"),h(D,"version","1.1"),h(D,"aria-hidden","true"),h(q,"class","anchor"),h(q,"aria-hidden","true"),h(q,"tabindex","-1"),h(q,"href","#kubebuilder"),h(A,"id","kubebuilder"),h(z,"href","https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#webhook-request-and-response"),h(z,"rel","nofollow"),h(J,"href","https://github.com/kubernetes-sigs/kubebuilder"),h(J,"rel","nofollow"),$s.a=Os,Rs.a=js,Us.a=Ls,h(Q,"href","https://book.kubebuilder.io/reference/webhook-for-core-types.html"),h(Q,"rel","nofollow"),Ws.a=Ms,Bs.a=Gs,Vs.a=Fs,zs.a=Js,h(Xs,"d","m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z"),h(j,"viewBox","0 0 16 16"),h(j,"version","1.1"),h(j,"aria-hidden","true"),h(P,"class","anchor"),h(P,"aria-hidden","true"),h(P,"tabindex","-1"),h(P,"href","#telepresence"),h(R,"id","telepresence"),se.a=ee,oe.a=ae,le.a=re,ne.a=ie,pe.a=ce,ye.a=ve,ue.a=me,de.a=fe,xe.a=we,_e.a=Ee},m(s,a){r(s,x,a),o(x,fo),o(x,M),o(M,bo),o(x,xo),r(s,qe,a),r(s,C,a),o(C,wo),o(C,B),o(B,_o),o(C,Eo),r(s,Pe,a),r(s,u,a),o(u,qo),o(u,fs),o(fs,Po),o(u,To),o(u,bs),o(bs,Co),o(u,Ao),o(u,xs),o(u,X),o(X,Do),o(u,Io),o(u,ws),o(ws,So),o(u,go),o(u,_s),o(_s,Ho),o(u,No),r(s,Te,a),Es.m(rl,s,a),r(s,qs,a),r(s,m,a),o(m,$o),o(m,Ps),o(Ps,Oo),o(m,Ro),o(m,Ts),o(Ts,jo),o(m,Ko),o(m,Cs),o(Cs,Uo),o(m,Lo),o(m,G),o(G,Wo),o(m,Mo),r(s,Ce,a),r(s,d,a),o(d,Bo),o(d,As),o(d,w),o(w,Go),o(w,Ds),o(Ds,Vo),o(w,Fo),o(w,Is),o(Is,Zo),o(w,zo),o(d,Jo),o(d,Ss),o(Ss,Qo),o(d,Xo),o(d,V),o(V,Yo),o(d,sa),r(s,Ae,a),r(s,Y,a),o(Y,ea),r(s,De,a),r(s,b,a),o(b,oa),o(b,F),o(F,aa),o(b,gs),o(b,ss),o(ss,ta),o(b,la),o(b,Z),o(Z,ra),o(b,na),r(s,Ie,a),r(s,A,a),o(A,q),o(q,D),o(D,Hs),o(A,ia),r(s,Se,a),r(s,es,a),o(es,pa),r(s,ge,a),r(s,I,a),o(I,ca),o(I,z),o(z,ka),o(I,ha),r(s,He,a),r(s,S,a),o(S,ya),o(S,J),o(J,va),o(S,ua),r(s,Ne,a),r(s,g,a),o(g,ma),o(g,Ns),o(Ns,da),o(g,fa),r(s,$e,a),$s.m(nl,s,a),r(s,Os,a),r(s,os,a),o(os,ba),r(s,Oe,a),Rs.m(il,s,a),r(s,js,a),r(s,H,a),o(H,xa),o(H,Ks),o(Ks,wa),o(H,_a),r(s,Re,a),Us.m(pl,s,a),r(s,Ls,a),r(s,N,a),o(N,Ea),o(N,Q),o(Q,qa),o(N,Pa),r(s,je,a),r(s,as,a),o(as,Ta),r(s,Ke,a),Ws.m(cl,s,a),r(s,Ms,a),r(s,ts,a),o(ts,Ca),r(s,Ue,a),Bs.m(kl,s,a),r(s,Gs,a),r(s,ls,a),o(ls,Aa),r(s,Le,a),Vs.m(hl,s,a),r(s,Fs,a),r(s,$,a),o($,Da),o($,Zs),o(Zs,Ia),o($,Sa),r(s,We,a),zs.m(yl,s,a),r(s,Js,a),r(s,O,a),o(O,ga),o(O,Qs),o(Qs,Ha),o(O,Na),r(s,Me,a),r(s,rs,a),o(rs,$a),r(s,Be,a),r(s,R,a),o(R,P),o(P,j),o(j,Xs),o(R,Oa),r(s,Ge,a),r(s,ns,a),o(ns,Ra),r(s,Ve,a),r(s,K,a),o(K,ja),o(K,Ys),o(Ys,Ka),o(K,Ua),r(s,Fe,a),se.m(vl,s,a),r(s,ee,a),r(s,is,a),o(is,La),r(s,Ze,a),oe.m(ul,s,a),r(s,ae,a),r(s,U,a),o(U,Wa),o(U,te),o(te,Ma),o(U,Ba),r(s,ze,a),le.m(ml,s,a),r(s,re,a),r(s,ps,a),o(ps,Ga),r(s,Je,a),ne.m(dl,s,a),r(s,ie,a),r(s,cs,a),o(cs,Va),r(s,Qe,a),pe.m(fl,s,a),r(s,ce,a),r(s,_,a),o(_,Fa),o(_,ke),o(ke,Za),o(_,za),o(_,he),o(he,Ja),o(_,Qa),r(s,Xe,a),ye.m(bl,s,a),r(s,ve,a),r(s,ks,a),o(ks,Xa),r(s,Ye,a),ue.m(xl,s,a),r(s,me,a),r(s,hs,a),o(hs,Ya),r(s,so,a),de.m(wl,s,a),r(s,fe,a),r(s,L,a),o(L,st),o(L,be),o(be,et),o(L,ot),r(s,eo,a),xe.m(_l,s,a),r(s,we,a),r(s,ys,a),o(ys,at),r(s,oo,a),_e.m(El,s,a),r(s,Ee,a),r(s,vs,a),o(vs,tt),r(s,ao,a),r(s,us,a),o(us,lt)},p:it,i:it,o:it,d(s){s&&e(x),s&&e(qe),s&&e(C),s&&e(Pe),s&&e(u),s&&e(Te),s&&Es.d(),s&&e(qs),s&&e(m),s&&e(Ce),s&&e(d),s&&e(Ae),s&&e(Y),s&&e(De),s&&e(b),s&&e(Ie),s&&e(A),s&&e(Se),s&&e(es),s&&e(ge),s&&e(I),s&&e(He),s&&e(S),s&&e(Ne),s&&e(g),s&&e($e),s&&$s.d(),s&&e(Os),s&&e(os),s&&e(Oe),s&&Rs.d(),s&&e(js),s&&e(H),s&&e(Re),s&&Us.d(),s&&e(Ls),s&&e(N),s&&e(je),s&&e(as),s&&e(Ke),s&&Ws.d(),s&&e(Ms),s&&e(ts),s&&e(Ue),s&&Bs.d(),s&&e(Gs),s&&e(ls),s&&e(Le),s&&Vs.d(),s&&e(Fs),s&&e($),s&&e(We),s&&zs.d(),s&&e(Js),s&&e(O),s&&e(Me),s&&e(rs),s&&e(Be),s&&e(R),s&&e(Ge),s&&e(ns),s&&e(Ve),s&&e(K),s&&e(Fe),s&&se.d(),s&&e(ee),s&&e(is),s&&e(Ze),s&&oe.d(),s&&e(ae),s&&e(U),s&&e(ze),s&&le.d(),s&&e(re),s&&e(ps),s&&e(Je),s&&ne.d(),s&&e(ie),s&&e(cs),s&&e(Qe),s&&pe.d(),s&&e(ce),s&&e(_),s&&e(Xe),s&&ye.d(),s&&e(ve),s&&e(ks),s&&e(Ye),s&&ue.d(),s&&e(me),s&&e(hs),s&&e(so),s&&de.d(),s&&e(fe),s&&e(L),s&&e(eo),s&&xe.d(),s&&e(we),s&&e(ys),s&&e(oo),s&&_e.d(),s&&e(Ee),s&&e(vs),s&&e(ao),s&&e(us)}}}const Dl={title:"Developing a Kubernetes Admission Controller with Telepresence",date:"2021-12-21T00:00:00.000Z",published:!0,slug:"kubernetes-admission-controller",tags:["Kubernetes"]};class Il extends ql{constructor(x){super(),Pl(this,x,null,Cl,Tl,{})}}export{Il as default,Dl as metadata};
